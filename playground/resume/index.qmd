---
title: "Can I write my resume in python?"
description: ""
date: "2023-11-6"
execute:
  freeze: false
format:
  html:
    toc: false
    page-layout: article
---

I am trying to generate a two column resume, but nothign I have tried has been able to output to both pdf and html format. So I am now trying to generate a resume using jupyter and pythons graph generating capabilities. 


I found an [example](https://towardsdatascience.com/generating-a-resume-in-python-1480a4d6a399) online, but it has syntax errors when I try to run it, and I also don't know what the code is liscensed under, so I think I will try to write my own. 

First, I need to select a graphics library. They used matplotlib, but I will search for an easier way to do it first. 


```{python}
from ipywidgets import interact, interactive, fixed, interact_manual
import ipywidgets as widgets

import matplotlib.pyplot as plt
%matplotlib inline

import numpy as np

def plot_func(freq):
    x = np.linspace(0, 2*np.pi)
    y = np.sin(x * freq)
    plt.plot(x, y)

interact(plot_func, freq = widgets.FloatSlider(value=7.5,
                                               min=1,
                                               max=5.0,
                                               step=0.5))
```


I found another [guide](https://www.iceorfire.com/post/resume-generation-with-python) to write a resume with html, and then convert it to pdf with python, but I don't really want that. 


```{python}
#| column: body-outset
from ipywidgets import interact, interactive, fixed, interact_manual
import ipywidgets as widgets

import matplotlib.pyplot as plt

# Configuring the graph
%matplotlib inline
plt.figure(figsize=(10,6))
plt.axis('off')



# Test text
Test = "test"
plt.annotate(Test, (.02,.98), weight='regular', fontsize=8, alpha=.75)

# Border lines
#plt.axvline(x=.99, color='#000000', alpha=0.5, linewidth=300)
```


bqplot instead:

```{python}
import bqplot.pyplot as plt
import numpy as np

fig = plt.figure(title="Sine")

# create data vectors
x = np.linspace(-10, 10, 200)
y = np.sin(x)

# create line mark
line = plt.plot(x, y)

# renders the figure in the output cell (with toolbar for panzoom, save etc.)
plt.show()

```

This apparently requires some libraries:

```{.default}
playground/resume/bqplot.js (404: Not Found)
  /playground/resume/@jupyter-widgets/1551f4f60c37af51121f.woff2 (404: Not Found)
  /playground/resume/@jupyter-widgets/eeccf4f66002c6f2ba24.woff (404: Not Found)
  /playground/resume/@jupyter-widgets/be9ee23c0c6390141475.ttf (404: Not Found)
  /playground/resume/@jupyter-widgets/html-manager/dist/1551f4f60c37af51121f.woff2 (404: Not Found)
  /playground/resume/@jupyter-widgets/html-manager/dist/eeccf4f66002c6f2ba24.woff (404: Not Found)
  /playground/resume/@jupyter-widgets/html-manager/dist/be9ee23c0c6390141475.ttf (404: Not Found)
```
