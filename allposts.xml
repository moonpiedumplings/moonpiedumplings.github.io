<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Jeffrey Fonseca</title>
<link>https://moonpiedumplings.github.io/allposts.html</link>
<atom:link href="https://moonpiedumplings.github.io/allposts.xml" rel="self" type="application/rss+xml"/>
<description>All posts, intended to be used in an RSS feed. </description>
<generator>quarto-1.5.24</generator>
<lastBuildDate>Sat, 06 Apr 2024 07:00:00 GMT</lastBuildDate>
<item>
  <title>Free resources to learn various software things</title>
  <link>https://moonpiedumplings.github.io/guides/learn-linux/</link>
  <description><![CDATA[ 




<p>My browser bookmarks bar is massive. I basically bookworm anything interesting I come across, and now I have a lot of resources accumulated, and I think it’s worth it to write them down, although formatting is still a work in progress.</p>
<p>When not otherwise stated, the resource is related to Linux administration.</p>
<section id="linuxterminal-basics" class="level1">
<h1>Linux/Terminal Basics</h1>
<p><a href="https://linuxupskillchallenge.org/">Linux Up Skill Challenge</a></p>
<ul>
<li>This is definitely one of my favorites. They mention that they don’t have a free server for people to work with. However, some of the cloud providers offer 1 year’s worth of credit’s for a free server. Most notably, Oracle has an always free tier, which offers a very small server. I recommend this, because you don’t have to give up your credit/debit card information (dealing with cloud provider pricing can be… difficult), although Oracle has been known to randomly delete people on the “Truly Free” (no credit card) tier, to make room for paying customers.
<ul>
<li>Related: <a href="https://github.com/cloudcommunity/Cloud-Free-Tier-Comparison">Comparison of cloud provider free tiers</a></li>
</ul></li>
</ul>
<p><a href="https://overthewire.org/wargames/bandit/">OverTheWire Bandit</a></p>
<ul>
<li>OverTheWire Bandit is a bit different from the other resoures on this list. When I first used it, both personally and as a teaching tool, I was frustrated, because some of the commands it makes you use, will probably never show up in a real world usecase. I was frustrated with it’s “trickyness”, but I now realize the point of overthewire isn’t to teach commands, but to teach reading the manual. The answer to every challenge they give can be found in <a href="https://en.wikipedia.org/wiki/Man_page">manpages</a>, the built in Linux documentation.</li>
</ul>
<p><a href="https://linuxsurvival.com/linux-tutorial-introduction/">Linux Survival</a></p>
<p><a href="https://ryanstutorials.net/linuxtutorial/" class="uri">https://ryanstutorials.net/linuxtutorial/</a></p>
<p><a href="https://eng.libretexts.org/Bookshelves/Computer_Science/Operating_Systems/Linux_-_The_Penguin_Marches_On_(McClanahan)">Linux — The Penguin Marches On (Libretexts)</a></p>
<p><a href="https://help.ubuntu.com/community/UsingTheTerminal">Ubuntu’s Terminal Basics</a></p>
<section id="troubleshooting-servers" class="level2">
<h2 class="anchored" data-anchor-id="troubleshooting-servers">Troubleshooting servers</h2>
<p><a href="https://sadservers.com/">SadServers</a></p>
<ul>
<li>Interactive troubleshooting of broken Linux servers.</li>
</ul>
</section>
</section>
<section id="hacking" class="level1">
<h1>Hacking</h1>
<p><a href="https://www.isc2.org/landing/1MCC?utm_source=isc2&amp;utm_medium=textlink&amp;utm_campaign=GBL-CC-1M-DG&amp;utm_term=bundlepage&amp;utm_content=awareness">https://www.isc2.org/</a></p>
<p><a href="https://overthewire.org/wargames/">https://overthewire.org/wargames/</a></p>
<p><a href="https://www.cyberstartamerica.org/">https://www.cyberstartamerica.org/</a></p>
<p><a href="http://ctfs.github.io/resources/topics/web/http/README.html">http://ctfs.github.io/resources/topics/web/http/README.html</a></p>
<p><a href="https://hackgame.chaurocks.com/level6">https://hackgame.chaurocks.com/level6</a></p>
<p><a href="https://www.sandiego.gov/cyber-lab">https://www.sandiego.gov/cyber-lab</a></p>
<p><a href="https://www.picoctf.org/">https://www.picoctf.org/</a></p>
<p><a href="https://grow.google/intl/ALL_ca/certificates/cybersecurity/#?modal_active=none">https://grow.google/intl/ALL_ca/certificates/cybersecurity/#?modal_active=none</a></p>
<p><a href="https://exploit.education/protostar/">https://exploit.education/protostar/</a></p>
<p><a href="https://pwn.college/">https://pwn.college/</a></p>
<ul>
<li>This is the site for many cybersecurity courses at Arizona State University. They also have an assocaited <a href="https://www.twitch.tv/pwncollege">twitch stream</a>, where they stream classes as they happen.</li>
</ul>
<p><a href="https://www.cyber-fasttrack.org/">https://www.cyber-fasttrack.org/</a></p>
<p><a href="https://book.hacktricks.xyz/welcome/readme">https://book.hacktricks.xyz/welcome/readme</a></p>
</section>
<section id="nix" class="level1">
<h1>Nix</h1>
<p><a href="https://github.com/justinwoo/nix-shorts/" class="uri">https://github.com/justinwoo/nix-shorts/</a><br> <a href="https://nix.ug/" class="uri">https://nix.ug/</a><br> <a href="https://teu5us.github.io/nix-lib.html#nix-builtin-functions" class="uri">https://teu5us.github.io/nix-lib.html#nix-builtin-functions</a><br> <a href="https://nixos.org/manual/nix/stable/language/operators.html#has-attribute" class="uri">https://nixos.org/manual/nix/stable/language/operators.html#has-attribute</a><br> <a href="https://book.divnix.com/" class="uri">https://book.divnix.com/</a><br> <a href="https://ianthehenry.com/posts/how-to-learn-nix/" class="uri">https://ianthehenry.com/posts/how-to-learn-nix/</a><br> <a href="https://noogle.dev/" class="uri">https://noogle.dev/</a><br> <a href="https://nix-community.github.io/awesome-nix/#learning" class="uri">https://nix-community.github.io/awesome-nix/#learning</a><br> <a href="https://www.youtube.com/@jonringer117" class="uri">https://www.youtube.com/@jonringer117</a><br> <a href="https://summer.nixos.org/" class="uri">https://summer.nixos.org/</a><br> <a href="https://nix.camp/" class="uri">https://nix.camp/</a><br> <a href="https://nixlang.wiki/" class="uri">https://nixlang.wiki/</a></p>
<p>Below is stuff I don’t like as much:</p>
<p><a href="https://zero-to-nix.com/" class="uri">https://zero-to-nix.com/</a><br> <a href="https://nix.dev/" class="uri">https://nix.dev/</a><br> <a href="https://nixos.wiki/" class="uri">https://nixos.wiki/</a><br> <a href="https://nixos.org/guides/nix-pills/" class="uri">https://nixos.org/guides/nix-pills/</a><br></p>
</section>
<section id="devopsk8s" class="level1">
<h1>Devops/K8s</h1>
<p><a href="https://killercoda.com/" class="uri">https://killercoda.com/</a></p>
<ul>
<li>Interactive courses relating to a variety of topics, including Linux basics, Ansible, and Kubernetes. Requires login, although Github login can be used.</li>
</ul>
<p>devops</p>
<p><a href="https://nubenetes.com/" class="uri">https://nubenetes.com/</a></p>
<p>k8s</p>
<p>https://learnk8s.io/troubleshooting-deployments https://wellarchitectedlabs.com/security/</p>
<p><a href="https://sre.google/sre-book/table-of-contents/" class="uri">https://sre.google/sre-book/table-of-contents/</a>odma</p>
</section>
<section id="low-level-operating-system-programming" class="level1">
<h1>Low Level Operating System Programming</h1>
<p><a href="https://pages.cs.wisc.edu/~remzi/teaching/" class="uri">https://pages.cs.wisc.edu/~remzi/teaching/</a></p>
<p><a href="https://pages.cs.wisc.edu/~remzi/OSTEP/" class="uri">https://pages.cs.wisc.edu/~remzi/OSTEP/</a></p>
<p><a href="https://wiki.osdev.org/Expanded_Main_Page" class="uri">https://wiki.osdev.org/Expanded_Main_Page</a></p>
</section>
<section id="documentation-writing" class="level1">
<h1>Documentation (writing)</h1>
<p><a href="https://documentation.divio.com/">Divio Documentation System</a> — More about differences between the types of documentation; there’s actually 4 types.</p>
<ul>
<li>I really like this one to explain the differences between the four types of documentation: tutorial, how-to, reference, and explanation.</li>
</ul>
<p><a href="https://jamesg.blog/book.pdf">Software Technical Writings — A guidebook (pdf)</a> — nitty gritty technical writing details.</p>
</section>
<section id="teaching" class="level1">
<h1>Teaching</h1>
<p><a href="https://pages.gseis.ucla.edu/faculty/agre/how-to-help.html">How to help someone use a computer (1996)</a></p>
</section>
<section id="git" class="level1">
<h1>Git</h1>
<p><a href="https://shafiul.github.io/gitbook/index.html" class="uri">https://shafiul.github.io/gitbook/index.html</a></p>
<ul>
<li>Data structure oriented guide to git. It starts at explaining what an object is, rather than how the command line works. I like this guide of git more than many other guides I’ve seen, although it’s still missing things (yes, git does a snapshot of the repo’s state at every point, as seperate objects, but it deduplicates data between those objects).</li>
</ul>


</section>

 ]]></description>
  <category>linux</category>
  <guid>https://moonpiedumplings.github.io/guides/learn-linux/</guid>
  <pubDate>Sat, 06 Apr 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Your very own site on GH pages</title>
  <link>https://moonpiedumplings.github.io/talks/self-site/</link>
  <description><![CDATA[ 




<p>For the Layer8 Cybersecurity club here at Cal State Northridge, and potentially more clubs, I will do a presentation on how I set up my site with Github pages, and how to set up your own site the same way.</p>
<p>This guide uses Github Actions to autodeploy, so all users need to do is commit from the web interface of Github, their site will automatically render changes.</p>
<p>Slides are <a href="../../talks/self-site/revealjs.html">linked here</a></p>
<p>Video is recorded, and I will have it clipped and uploaded soon™.</p>



 ]]></description>
  <guid>https://moonpiedumplings.github.io/talks/self-site/</guid>
  <pubDate>Mon, 25 Mar 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>KDE 6 — New features</title>
  <link>https://moonpiedumplings.github.io/blog/kde-6/</link>
  <description><![CDATA[ 




<p>KDE 6 is released, and it comes with quite a few new features.</p>
<section id="smoothing-out-the-wayland-migration" class="level1">
<h1>Smoothing out the Wayland migration</h1>
<p>In addition to the other things mentioned, KDE 6 also comes with some new security and privacy features.</p>
<p><img src="https://moonpiedumplings.github.io/blog/kde-6/images/legacyx11apps.jpg" class="img-fluid"></p>
<p>KDE 6 now adds a new settings panel where users can configure if X11 apps can read global inputs.</p>
<p>For context, the Linux desktop used to be built on top of this software called <a href="https://en.wikipedia.org/wiki/X_Window_System">X11</a>. X11 worked, but it had some pretty severe flaws, the two main one’s being code rot, and security.</p>
<p>Code rot is self explanatory. X11 was first built in 1984. It’s been a while since it was made, and it has a lot of old code. The project is so big and complex, that it’s nearly impossible to add significant features to it.</p>
<p>The other problem is security. By default, X11 lets running apps have basically absolute control over the other graphical interface. They can “view” the whole screen, read all keypresses, and insert, or modify keypresses.</p>
<p><a href="https://en.wikipedia.org/wiki/Wayland_(protocol)">Wayland</a>, is the newer replacement, although it is technically just a protocol, a definition, as opposed to an actual piece of software. Different pieces of software choose to implement this protocol, with KDE being one of them.</p>
<p>One of the issues people have with Wayland, is that, by design, it doesn’t allow all apps to read everything on the screen. This breaks things like screen sharing, with native Discord (although sharing your screen to Discord running in Firefox works).</p>
<p>It also breaks push-to-talk on Discord, since that uses a global hotkey. The above setting allows users to temporarily restore that functionality, at the cost of desktop security. , since Discord hasn’t developed it for native wayland yet.</p>
<p>Another issue people have with Wayland is problems with Nvidia. Due to Nvidia’s insistence on proprietary drivers and their own standards, it’s been very difficult ot get Wayland support on Nvidia. However, KDE comes with some big changes as, I can finally use Nvidia + Wayland on my larger laptop!</p>
</section>
<section id="obs" class="level1">
<h1>OBS</h1>
<p>One features I’ve been waiting on, which I think will only end up coming in Wayland, is the ability to share some windows, but not all. I experimented with some of the new features of OBS, but they don’t do quite what I want.</p>
<p>For example, with OBS and pipewire, I noticed I can select multiple windows from the “Window Share” source:</p>
<p><img src="https://moonpiedumplings.github.io/blog/kde-6/images/obswindowsshare.jpg" class="img-fluid"></p>
<p>Except it doesn’t actually work. Instead, it just puts one of the windows on top, and none of the others.</p>
<p>I tried an alternative to this:</p>
<p><img src="https://moonpiedumplings.github.io/blog/kde-6/images/virtualoutput.jpg" class="img-fluid"></p>
<p>But it doesn’t do quite what I want. It creates a literal virtual monitor, including the ability to change settings to things like “unify outputs”, or “extend outputs”.</p>
<p>What I really want is the ability to share only a single <a href="https://kde.org/announcements/4/4.5.0/plasma/">kde workspace</a>.</p>
<p>OBS had an option to share a KDE plasma workspace, but it doesn’t work like what I want. Instead of just sharing a single workspace, it turns all monitors into a single input source. If I switch workspaces, then the screen video switches as well.</p>
</section>
<section id="drawing-tablets" class="level1">
<h1>Drawing Tablets</h1>
<p>KDE 6 finally makes support for drawing tablets first class. You can now configure drawing tablets directly from the settings menu.</p>
<p><img src="https://moonpiedumplings.github.io/blog/kde-6/images/drawingtablets.jpg" class="img-fluid"></p>
<p>So all the buttons, but also another, more important feature I need: mapping the drawing tablet to a smaller portion of the screen.</p>
<p>I typically take notes with <a href="https://xournalpp.github.io">xournal++</a>, but I struggle because my handwriting is large and sloppy, especially when I am trying to take notes more quickly. From my testing, this feature is amazing, since it makes it easier to write, and read what I’ve wrote afterwards.</p>
</section>
<section id="bugs" class="level1">
<h1>Bugs</h1>
<p>So far, I’ve encountered two crashes with KDE, after like a week of usage, which is pretty good from what I hear, compared to other people.</p>
<p>To recover from a crash, I just switch to a TTY, and/or use a terminal, and then run:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb1-1">systemctl --user restart plasma-plasmallshell</span></code></pre></div>
<p>This only works on systemd, however. Since Plasma-5.25, <a href="https://wiki.archlinux.org/title/KDE#systemd_startup">KDE consisting of systemd user services has been the default method</a></p>
<p>On non systemd distros, what I’ve heard works is:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1">killall plasmashell &amp;&amp; kstart5 plasmashell</span></code></pre></div>


</section>

 ]]></description>
  <category>linux</category>
  <guid>https://moonpiedumplings.github.io/blog/kde-6/</guid>
  <pubDate>Wed, 13 Mar 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Experiments with Running python in the browser</title>
  <link>https://moonpiedumplings.github.io/playground/interactive-python-tutorial/</link>
  <description><![CDATA[ 
<script src="https://cdn.jsdelivr.net/npm/monaco-editor@0.46.0/min/vs/loader.js"></script>
<script type="module" id="qpyodide-monaco-editor-init">

  // Configure the Monaco Editor's loader
  require.config({
    paths: {
      'vs': 'https://cdn.jsdelivr.net/npm/monaco-editor@0.46.0/min/vs'
    }
  });
</script>




<section id="original" class="level1">
<h1>Original</h1>
<p>I started on this on 2023-5-22, and paused it since nothing interesting came out of it.</p>
<p>My goal is an in browser python editor I can embed into a blog. I want to create a sort of interactive python tutorial.</p>
<p>Code is ran client side, so don’t try to crash any server or anything like that.</p>
</section>
<section id="recent-updates" class="level1">
<h1>Recent updates</h1>
<p>There was a new quarto extension, enabling you to embed pyodide python code blocks in documents: https://github.com/coatless-quarto/pyodide</p>
<div id="qpyodide-insertion-location-1"></div>
<noscript>Please enable JavaScript to experience the dynamic code cell content on this page.</noscript>
<p>This works, but the blocks don’t show up properly. In addition to that, the input function doesn’t work.</p>
<p>But still, if I want to do a simple python tutorial, this would be pretty doable. In addition to that, I could also do block posts about other interesting things in python.</p>
</section>
<section id="older-work-below" class="level1 page-columns page-full">
<h1>Older work below</h1>
<p>This might not render, since many of it is raw html elements.</p>
<p>Lots of rot happened since I first played with this, and I disabled all of this stuff since it doesn’t load, and instead prevents the newer work from loading.</p>
<div class="col fragment" data-fragment-index="2" style="height: min(30vw, 60vh); margin: min(1vw, 2vh)">
                        <python-editor contenteditable="true" theme="dark" code="elements = [39,12,18,85,72,10,2,18]

print('Unsorted list is\n', elements)

# Sort the list (with bubblesort)
for n in range(len(elements)-1, 0, -1):
  for i in range(n):
    if elements[i] > elements[i+1]:
      elements[i], elements[i+1] = elements[i+1], elements[i]

print('\nSorted list is\n', elements)">
                    </python-editor></div>
<p>Awww, the input function doesn’t seem to work.</p>
<p>Shift + enter/return to evaluate code of the below.</p>
<py-repl></py-repl>
<p>This kinda works, but also has issues. Input fucntion still doesn’t work.</p>
<p>Shift + enter/return to evaluate below. Or double click.</p>
<pyprez-editor>
   import numpy as np
   np.random.rand(5)
</pyprez-editor>
<p>This is cool, but the code isn’t editable. It just resets itself for some reason.</p>
<p>Maybe this will work?</p>
<div class="column-body-outset">
<div id="livecodes-p6y2nroaetk" data-height="500">
  <span>Open the project <a href="https://livecodes.io/?x=id/sigh8eg62zv" target="_blank">Untitled Project</a> in <a href="https://livecodes.io/" target="_blank">LiveCodes</a></span>
</div>

<script src="https://livecodes.io/sdk/livecodes.umd.js"></script>
<script>
  const options = {
    appUrl: 'https://dev.livecodes.io/',
    params: {
      autoupdate: false,
      console: "full"
      },
    "config": {
      "tools": {
        "status": "full"
      }
    },
    "import": "id/sigh8eg62zv",
    "loading": "eager"
  };
  livecodes.createPlayground("#livecodes-p6y2nroaetk", options);
</script>
<div class="livecodes" style="height: 300px; border: 1px solid black; border-radius: 5px;" data-options="{appUrl: &quot;https://dev.livecodes.io/&quot;,params: {autoupdate: false, console: &quot;full&quot;},&quot;config&quot;:{&quot;activeEditor&quot;:&quot;script&quot;,&quot;tools&quot;:{&quot;status&quot;:&quot;full&quot;}},&quot;loading&quot;:&quot;eager&quot;}">
<pre data-lang="html"></pre>
<pre data-lang="css"></pre>
<pre data-lang="pyodide">yeet = input("test")

print(yeet)</pre>
</div>
<script defer="" src="https://livecodes.io/sdk/livecodes.umd.js" data-prefill=""></script>

</div>


</section>

 ]]></description>
  <category>python</category>
  <guid>https://moonpiedumplings.github.io/playground/interactive-python-tutorial/</guid>
  <pubDate>Mon, 11 Mar 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Automatically provisioning VMs from OVAs</title>
  <link>https://moonpiedumplings.github.io/playground/ova-automation/</link>
  <description><![CDATA[ 




<section id="probably-wont-continue-this-moving-to-playground" class="level1">
<h1>Probably won’t continue this / Moving to Playground</h1>
<p>(see the “Goals and Context” section for more context)</p>
<p>Wasabi, head of black (operations and deployment) team sent out a message, after the first qualifiers:</p>
<p><img src="https://moonpiedumplings.github.io/playground/ova-automation/images/wasabi-message.jpeg" class="img-fluid"></p>
<blockquote class="blockquote">
<p>I can’t remember, but you guys only recently started playing I believe I had a conversation with other schools on this.. But there’s a huge separation from teams in terms of practice</p>
</blockquote>
<blockquote class="blockquote">
<p>So my recommendation to all the new teams and all the teams who struggled this year. Don’t use https://archive.wrccdc.org/images/ except as reference. Take our environment and topology and build it yourselves. Spend the time to learn and help each other learn how systems work and how to troubleshoot things. This will help you a ton. The teams in the top do this. If your one of the teams not making it forward please feel free to send me a message for advice and use Q&amp;A channel to get help from Ops / Red / White team for your off season. We are happy to help and excited to see you back next year!</p>
</blockquote>
<p>My original goal of this project was to be able to quickly recreate WRCCDC environments, so we could run mock competitions, since currently we were setting them up manually.</p>
<p>But even the 3 or 4 mocks we ran didn’t help us. Ater actually <em>doing</em> first real competition, I agree with Wasabi on this.</p>
<p>So I don’t think this project is worth continuing. It would be better having people recreating the competition environments, and really <em>using</em> Linux, Windows Server, and the various firewalls so we have an understanding of how they work.</p>
<p>So yeah. The work is still valuable, it just doesn’t get to stay in the “projects” section of my blog — the difference between “playground” and “projects” is not topics, but rather the commmitment I have to them. Projects I will see to either the end, or until I hit significant failure that I can’t overcome. The content in playground, I am free to give up on it at any point, for any reason, and because of that, many of the miniprojects in there are incomplete.</p>
</section>
<section id="goals-and-context" class="level1">
<h1>Goals and Context</h1>
<p>I am currently participating on the cybersercurity team of Cal State Northridge, for a competition called CCDC.</p>
<p>For more information:</p>
<p>Nationals: <a href="https://www.nationalccdc.org/" class="uri">https://www.nationalccdc.org/</a></p>
<p>And our region, the Western Region: <a href="https://wrccdc.org/" class="uri">https://wrccdc.org/</a></p>
<p>Essentially, we are asked given a bunch of really insecure virtual machines, and asked to secure and administrate them, while being attacked by red team.</p>
<p>Although Nationals does not post the old images they have used in the past, our region, does.</p>
<p>WRCCDC Archive: <a href="https://archive.wrccdc.org/" class="uri">https://archive.wrccdc.org/</a></p>
<p>Currently, our team is doing mock competitions by downloading these images, manually importing them into esxi, or proxmox, and then adjusting networking in each virtual machine, by hand.</p>
<p>This is unacceptable.</p>
<p>An easier way, is rather than manually changing networking configuration in each virtual machine, the virtual machine managers (proxmox and esxi, currently) could be configured to have the same network as the competition, removing the hassle of changing this.</p>
<p>In addition to that, manually importing virtual machines is also unacceptable.</p>
<p>With the existence of modern automation tools, like terraform, there must be a better way to do this.</p>
<p>Currently, I’m using vagrant to automate the upping of individual images, for testing. However, vagrant isn’t really ideal for this, because I would have to convert OVA files to “vagrant boxes” first, which don’t support every vagrant provider.</p>
<p>It would probably be better to import the images, and then use terraform to up it automatically. The advantage of this, to me, is that it is more provider agnostic. By seperating the pieces that handle the image management, and the pieces that handle control of the hypervisor platform, it’s easier to port things to new platforms.</p>
</section>
<section id="work" class="level1">
<h1>Work</h1>
<section id="proxmox" class="level2">
<h2 class="anchored" data-anchor-id="proxmox">Proxmox</h2>
<p>I’ve created a folder with a shell.nix and a Vagrantfile, in order to automate the creation of a proxmox virtual machine. It’s located inside this git repo, and by extension, <a href="./proxmox/">this static site</a>.</p>
<p>Docs to import OVA files on proxmox: <a href="https://pve.proxmox.com/wiki/Migration_of_servers_to_Proxmox_VE#Importing" class="uri">https://pve.proxmox.com/wiki/Migration_of_servers_to_Proxmox_VE#Importing</a></p>
<p>After some testing with that, <code>importovf</code> isn’t too good, because it imports the virtual machine metadata, without any of the actual data. So things we don’t really need to store, like how many vcpu’s or memory, or the network, but none of the actual disk data.</p>
<p>You have to run <code>qm importdisk</code> (an alias for <code>qm disk import</code>)</p>
<p>So after extracting the ova, you have to extract the vmdk (it’s gzipped), and then it would be something like:</p>
<p><code>qm importdisk numberhere image.vmdk --format qcow2|vmware</code></p>
<p>The manpage for qm says that –format specifies the target format, so I’m assuming it’s the format to convert to.</p>
</section>
<section id="lxdincus" class="level2">
<h2 class="anchored" data-anchor-id="lxdincus">LXD/Incus</h2>
<p>LXD is a “containervisor”, capable of managing both lxc containers and qemu-kvm virtual machinwees.</p>
<p>For this usecase, I only need it’s hypervisor management capibilities, but I also want to the automation capabilities that it may offer, since that seems to be an often criticized lacking feature of proxmox.</p>
<p>I also tried out incus. I put together <a href="./vms/provisioners/debincus.yml">an ansible playbook</a> to install incus on debian.</p>
<p>However, I am having trouble with their official web ui. Authentication is certificate based, so it asks for me to import a browser certificate… not fun.</p>
<p>I am going to collect and test multiple alternatives:</p>
<ul>
<li>Offical Canonical One</li>
<li><a href="https://lxdware.com/">LXDWare</a></li>
<li><a href="https://github.com/AdaptiveScale/lxdui" class="uri">https://github.com/AdaptiveScale/lxdui</a></li>
<li><a href="https://github.com/PenningLabs/lxconsole" class="uri">https://github.com/PenningLabs/lxconsole</a> still in beta, according to the readme</li>
</ul>
<p>I tried lxdware, but when I tried to add a remote, and connect it to the incus daemon, it I get an error “Remote host connection is not trusted”.</p>
<p>I do some investiagting.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb1-1">root@f6ded1cb73d7:/# incus remote add 192.168.121.103</span>
<span id="cb1-2">Generating a client certificate. This may take a minute...</span>
<span id="cb1-3">Certificate fingerprint: 7cf0d7d12fed498811e485d8dec4655012873876e9f45e15974cfdb9a8fd810a</span>
<span id="cb1-4">ok (y/n/[fingerprint])? y</span>
<span id="cb1-5">Trust token for 192.168.121.103: eyJjbGllbnRfbmFtZSI6ImluY3VzLXVpLTE5Mi4xNjguMTIxLjEwMy5jcnQiLCJmaW5nZXJwcmludCI6IjdjZjBkN2QxMmZlZDQ5ODgxMWU0ODVkOGRlYzQ2NTUwMTI4NzM4NzZlOWY0NWUxNTk3NGNmZGI5YThmZDgxMGEiLCJhZGRyZXNzZXMiOlsiMTkyLjE2OC4xMjEuMTAzOjg0NDMiXSwic2VjcmV0IjoiMjRjNWNjZjkzZTgzMTBmNGRlMzAwMTgyOTc0YWE4Nzg1MDAxMTkzZWQ3NTEyYTk0ZjlmZGRkZWQwMzBkNWJkZSIsImV4cGlyZXNfYXQiOiIwMDAxLTAxLTAxVDAwOjAwOjAwWiJ9</span>
<span id="cb1-6">Client certificate now trusted by server: 192.168.121.103</span></code></pre></div>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1">root@d90da14b48e9:/# lxc remote add 192.168.121.103</span>
<span id="cb2-2">Admin password (or token) for 192.168.121.103:</span>
<span id="cb2-3">Error: not authorized</span></code></pre></div>
<p>In short, it seems like the api is not compatible, since using the lxc client fails, but the incus client succeeds.</p>
<p>Luckily, I got incus working. In addition to the normal steps, I had to run <a href="https://discuss.linuxcontainers.org/t/incus-ui-install-error-using-token-not-authorized/18822/2"><code>incus config trust add-certificate certficatefile.crt</code></a></p>
<p>Testing, I was able to download a debian image, and put it up.</p>
<p>Incus looks very promising, because it also comes with a <a href="https://registry.terraform.io/providers/lxc/incus/latest/docs/resources/instance">terraform provider</a></p>
<p>Incus also provides docs on <a href="https://linuxcontainers.org/incus/docs/main/howto/server_migrate_lxd/">migrating machines</a> (<a href="https://documentation.ubuntu.com/lxd/en/latest/migration/">canonical lxd version</a>)</p>
<p>On that page, it recommends using virt-v2v, which has support for importing from <a href="https://libguestfs.org/virt-v2v-input-vmware.1.html">vmware ova’s</a></p>
<p>(It seems it requires a newer version of <a href="https://libguestfs.org/virt-v2v.1.html">virt-v2v</a>, and <a href="https://github.com/rwmjones/rhsrvany">rhsrvany</a>, which only debian sid and ubuntu 23 package both right now.)</p>
<p>Once you use that tool, you can use incus-migrate to interactively or programmaticly import the raw disk images as incus images.</p>
<p>So that’s pretty promising. But what about networking? For a replica of the competition environment, we will need to have firewalls (vyos, pfsense, etc) and to my understanding, that is essentially having a virtual machine act as a bridge. How can I do that on LXD/Incus?</p>
<p>It seems to be possible. Here are some guides I found:</p>
<p><a href="https://www.cloudwizard.nl/build-your-own-windows-cloud-with-lxd/" class="uri">https://www.cloudwizard.nl/build-your-own-windows-cloud-with-lxd/</a></p>
<p><a href="https://forum.netgate.com/topic/154906/how-to-install-pfsense-on-lxc-vm-qemu" class="uri">https://forum.netgate.com/topic/154906/how-to-install-pfsense-on-lxc-vm-qemu</a></p>


</section>
</section>

 ]]></description>
  <category>linux</category>
  <guid>https://moonpiedumplings.github.io/playground/ova-automation/</guid>
  <pubDate>Tue, 20 Feb 2024 08:00:00 GMT</pubDate>
</item>
<item>
  <title>How to Ansible</title>
  <link>https://moonpiedumplings.github.io/talks/ansible/</link>
  <description><![CDATA[ 




<p>Recently, <a href="https://github.com/CSUN-CCDC/CCDC-2023/commits?author=moonpiedumplings">I wrote a lot of ansible roles and playbooks for the CCDC competition</a>.</p>
<p>Here is a link to the roles: <a href="https://github.com/CSUN-CCDC/CCDC-2023/tree/main/linux/ansible/roles" class="uri">https://github.com/CSUN-CCDC/CCDC-2023/tree/main/linux/ansible/roles</a></p>
<p>These ansible “roles,” cover a variety of tasks that the cybersecurity competition would require from us, including things like managing firewalls (ufw, iptables, firewalld), shuffling passwords of linux users or databases, or doing backups.</p>
<p>Professor Doris Chaney asked me to present on how to use ansible, so here is where the presentation, code, and guide will go.</p>
<p>The presentation can be <a href="../../talks/ansible/revealjs.html">found here</a></p>
<p>I have the recording, but I need to edit it a little bit before I post it, but I will do so soon™.</p>



 ]]></description>
  <category>linux</category>
  <category>ansible</category>
  <guid>https://moonpiedumplings.github.io/talks/ansible/</guid>
  <pubDate>Tue, 23 Jan 2024 08:00:00 GMT</pubDate>
</item>
<item>
  <title>Building my server part 3 — The switch to debian</title>
  <link>https://moonpiedumplings.github.io/projects/build-server-3/</link>
  <description><![CDATA[ 




<section id="why-the-switch" class="level1">
<h1>Why the switch?</h1>
<p>Recently, I have been very busy working on scripts and ansible playbooks for the <a href="https://www.nationalccdc.org/">Collegiate Cyber Defense Competition</a>.</p>
<p>In order to test those playbooks, I have been using Vagrantfiles, as an excerpt, something like this:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode ruby code-with-copy"><code class="sourceCode ruby"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># -*- mode: ruby -*-</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># vi: set ft=ruby :</span></span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vagrant</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.configure</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2"</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>config<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb1-5"></span>
<span id="cb1-6">    config<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.vm.synced_folder</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/vagrant"</span>, <span class="wa" style="color: #5E5E5E;
background-color: null;
font-style: italic;">disabled: </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb1-7">    config<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.vm.provision</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shell"</span>, <span class="wa" style="color: #5E5E5E;
background-color: null;
font-style: italic;">path: </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scripts/packages.sh"</span></span>
<span id="cb1-8"></span>
<span id="cb1-9">    config<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.vm.define</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"318"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>vmconfig<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb1-10">        vmconfig<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.vm.provision</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ansible"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>ansible<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb1-11">            ansible<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.playbook</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ansible/inventory.yml"</span></span>
<span id="cb1-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">end</span></span>
<span id="cb1-13">        vmconfig<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.vm.box</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generic/alpine318"</span></span>
<span id="cb1-14">        vmconfig<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.vm.provider</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"libvirt"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>libvirt<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb1-15">            libvirt<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.driver</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kvm"</span></span>
<span id="cb1-16">            libvirt<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.memory</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span></span>
<span id="cb1-17">            libvirt<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.cpus</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-18">            libvirt<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.video_type</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"virtio"</span></span>
<span id="cb1-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">end</span></span>
<span id="cb1-20">        vmconfig<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.vm.provider</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"virtualbox"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>virtualbox,override<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span></span>
<span id="cb1-21">            virtualbox<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.memory</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span></span>
<span id="cb1-22">            virtualbox<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.cpus</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-23">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">end</span></span>
<span id="cb1-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">end</span></span>
<span id="cb1-25"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">end</span></span></code></pre></div>
<p>This is from the <a href="https://github.com/CSUN-CCDC/CCDC-2023/blob/8c8e5f5b59543ca246e7ec718ef13d60a3f94efc/linux/testing/alpine/Vagrantfile">ccdc-2023</a> github repo. With a single command, <code>vagrant up</code>, I can create virtual machines, and then provision them with ansible playbooks.</p>
<p>Even more impressive, I can use the generated ansible inventory manually, <a href="https://docs.ansible.com/ansible/latest/scenario_guides/guide_vagrant.html#running-ansible-manually">as noted in the ansible documentation</a>. This creates an environment closer to how I would actually use the vagrant ansible playbooks.</p>
<p>Vagrants snapshots let me easily freeze and revert machines to previous features.</p>
<p>I used vagrant, in combination with windows vagrant machines to easily test things for the <a href="../../guides/ccdc-env/">ccdc environment guide</a>.</p>
<p>However, when attempting to up vagrant on my Rocky Linux machine, I got an error: Spice is not supported.</p>
<p>Apparently, Red Hat Enterprise Linux deprecated spice, and now any rebuilds of it, no longer have spice as well.</p>
<p><a href="https://forums.rockylinux.org/t/spice-support-was-dropped-in-rhel-9/6753" class="uri">https://forums.rockylinux.org/t/spice-support-was-dropped-in-rhel-9/6753</a></p>
<p><a href="https://access.redhat.com/articles/442543" class="uri">https://access.redhat.com/articles/442543</a> (requires subscription, but the important content is in the beginning).</p>
<p>Except, my Arch Linux machines can still run spice virtual machines just fine… so when I want to run a Vagrant box(s) on my server, like the Windows boxes which require much more memory, I can either write around this missing feature, using the much less performant VNC… or I can switch.</p>
<p>The main reason why I picked Rocky, was the 4 year support of an operating system supported by Kolla-ansible. This is no longer the only case.</p>
<p>As of the current supported Kolla-Ansible, it now supports Debian 12, which will be supported for all 4 years of my bachelors. <a href="https://docs.openstack.org/kolla-ansible/2023.2/user/support-matrix.html">Support Matrix</a>.</p>
<p>With this, I decided to switch to debian… but I encountered some challenges.</p>
</section>
<section id="installing-debian" class="level1">
<h1>Installing Debian</h1>
<p>When I installed Debian in UEFI mode, it wouldn’t boot. But Rocky Linux booted just fine? Why?</p>
<p>I tested a legacy install, and it booted just fine. Did a little more research, asked for help from a friend, and found this:</p>
<p>According to the <a href="https://wiki.debian.org/UEFI#Force_grub-efi_installation_to_the_removable_media_path">debian wiki</a> some UEFI motherboards do not implement the spec properly (even after a BIOS update, it seems). Described in that article, is how to get around this quirk, and why they don’t do that by default.</p>
<blockquote class="blockquote">
<p>All OS installers installing things to this removable media path will conflict with any other such installers, which is <strong>bad</strong> and <strong>wrong</strong>. That’s why in Debian we don’t do this by default.</p>
</blockquote>
<p>But, it was only after selecting the “expert install” in the installer, that I was eventually presented with this menu:</p>
<p><img src="https://moonpiedumplings.github.io/projects/build-server-3/images/forcegrub.jpg" class="img-fluid"></p>
<p>And by forcing a grub install, I finally got it to boot in UEFI mode.</p>
<p>In my opinion, the debian installer should do this as a default if it detects that it is going to be the sole OS. I would rather have a booting install than a standards compliant one.</p>
<p>Although, it was suprising and disheartening to learn that what I considered to be an enterprise server doesn’t implement a standard such as this properly.</p>
</section>
<section id="configuring" class="level1">
<h1>Configuring</h1>
<p>I don’t want to do openstack just yet. After getting experience with keycloak, active directory, and ldap, I’ve decided that this server can be the host to a variety of services, all using ldap or SSO to sign on. I want a remote development environment, not just for me, but also for my team members.</p>
<p>The other thing I want is for the server to be configured as code. Past the initial setup (podman, libvirt, nix), I want everything to be configured via ansible.</p>
<p>Goals:</p>
<p>Overall, system design goals</p>
<ul>
<li>Configuration as code</li>
<li>Rootless containers when possible
<ul>
<li>No docker on bare metal — this interferes with the eventual open stack install</li>
</ul></li>
<li>Security
<ul>
<li>Https should be terminated on my home server, not on my vps</li>
</ul></li>
</ul>
<p>Service/Specific goals for the short(er) term:</p>
<ul>
<li>Podman
<ul>
<li>Nvidia runtime, for kasm hardware acceleration, and AI</li>
</ul></li>
<li>LDAP
<ul>
<li>Do I want openldap or lldap?</li>
</ul></li>
<li>keycloak
<ul>
<li>Connected to ldap, of course</li>
<li>everything should be SSO when possible</li>
</ul></li>
<li>Kasmweb
<ul>
<li>Run this in a privileged podman container rather than docker is my only real option</li>
<li>Create kasm containers for development environment for my teams</li>
<li>Nix in kasm docker containers</li>
<li>Hardware acceleration via Nvidia?</li>
<li>Mounting /dev/kvm inside for libvirt inside? Or remote libvirt</li>
</ul></li>
</ul>
<p>Later, I want:</p>
<ul>
<li>Forgejo — a source forge</li>
<li>Move my blog to this server, from github pages
<ul>
<li>Continue to use some form of CI/CD for it.</li>
</ul></li>
</ul>
<section id="reverse-proxies-and-https" class="level2">
<h2 class="anchored" data-anchor-id="reverse-proxies-and-https">Reverse Proxies and HTTPS</h2>
<p>To ensure maximum security, I need to terminate HTTPS on the home server, which is completely under my control, unlike the VPS I’m renting from Contabo.</p>
<p>Currently, I have a simply setup using <a href="https://nginxproxymanager.com/">nginx proxy manager</a>, where it reverse proxies any sites I want to create by terminating TLS/SSL on the VPS.</p>
<p>I don’t really feel like going back to pure nginx, it was very painful to configure, which is why I switched to the easier frontend, nginx proxy manager (npm).</p>
<p>I attempted to set up a stream, but I was simply redirected to the “Nginx Proxy Manager” page instead.</p>
<p>I bought a domain: &lt;moonpiedumpl.ing&gt;. It looks very clean. I will use subdomains for each service, something like &lt;keycloak.moonpiedumpl.ing&gt; will be the keycloak service, and so on.</p>
<p>I want a declarative reverse proxy, that can reverse proxy existing https servers, without issues. <a href="https://caddyserver.com/docs/">Caddy</a> can <em>probably</em> do this.</p>
<p>I think the crucial thing is that is that Caddy some of the reverse proxy headers by default. It’s documented here: <a href="https://caddyserver.com/docs/caddyfile/directives/reverse_proxy#defaults" class="uri">https://caddyserver.com/docs/caddyfile/directives/reverse_proxy#defaults</a></p>
<p>So the second Caddy proxy, located on the internal server, would have the option “trusted proxies”, set to the ip address that the internal server sees coming from the VPS. This will cause it to not edit the headers, allowing the internal server to see the real ip address of the machines connecting to the services.</p>
<p>Caddy can also configure https automatically: <a href="https://caddyserver.com/docs/caddyfile/options#email" class="uri">https://caddyserver.com/docs/caddyfile/options#email</a></p>
<p>As for TLS passthrough on the external Caddy service, I found some relevant content:</p>
<p><a href="https://caddy.community/t/reverse-proxy-chaining-vps-local-server-service-trusted-proxies/18105" class="uri">https://caddy.community/t/reverse-proxy-chaining-vps-local-server-service-trusted-proxies/18105</a></p>
<p>Alright. This isn’t working. Double reverse proxies are a pain to configure, plus they seem to be lacking support for <a href="https://github.com/caddyserver/caddy/issues/5086">some things</a>.</p>
<p>So… alternatives?</p>
<p>It seems to forward traffic as it, which is good, because I don’t want it to get in the way of caddy.</p>
<p>I also need to test iptables as a reverse proxy. I don’t want to test this, as it requires that I tear down some of my declarative configuration to temporarily test this in an imperative manner.</p>
<p>Alternatively, I am looking at <code>iptables</code>.</p>
<p>There are several relevant stackoverflow answers: <a href="https://superuser.com/a/1291523">this one</a> and <a href="https://unix.stackexchange.com/a/634972">this one</a>.</p>
<p>I did a little bit of experimenting with iptables, but it looks to be more effort than it is worth to configure, for something that might not even work.i</p>
<p>I started looking through this: <a href="https://github.com/anderspitman/awesome-tunneling" class="uri">https://github.com/anderspitman/awesome-tunneling</a></p>
<p>Projects like <a href="https://github.com/fatedier/frp">frp</a> appeal to me and look like they do what I want to.</p>
<p>Out of them, <a href="https://github.com/rapiz1/rathole">rathole</a> appeals to me the most. The benchmarks advertise high performance, and it has an official <a href="https://hub.docker.com/r/rapiz1/rathole">docker container</a>. This would make it easy to deploy.</p>
<p>I don’t like the existing rathole docker images. The official one is older than the code is, and other docker container uses a bash script reading enviornment variables to configure itself.</p>
<p>I’ve decided to compile rathole myself. I want a static binary I can copy over to an empty docker container, and then docker can handle the service managemnt.</p>
<p>I want to compile rathole myself. Originally I was going to compile rathole statically on an alpine container, but I kept encountering issues, so I decided to use the debian container (that is one of the solutions I saw on the answer sites)</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode dockerfile code-with-copy"><code class="sourceCode dockerfile"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">FROM</span> rust:latest as stage0 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Debian bookworm</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ENV</span> RUSTFLAGS=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-C target-feature=+crt-static"</span></span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt</span> install musl-tools</span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone https://github.com/rapiz1/rathole</span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rustup</span> target install x86_64-unknown-linux-musl</span>
<span id="cb2-10"></span>
<span id="cb2-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> rathole <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cargo</span> build <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--release</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--target</span> x86_64-unknown-linux-musl</span>
<span id="cb2-12"></span>
<span id="cb2-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">FROM</span> scratch</span>
<span id="cb2-14"></span>
<span id="cb2-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">COPY</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--from=stage0</span> /rathole/target/x86_64-unknown-linux-musl/release/rathole /bin/rathole</span>
<span id="cb2-16"></span>
<span id="cb2-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">CMD</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/bin/rathole"</span>]</span></code></pre></div>
<p>It uses a multi stage build to copy the statically compiled binary to the final container.</p>
</section>
<section id="podman" class="level2">
<h2 class="anchored" data-anchor-id="podman">Podman</h2>
<section id="rootless" class="level3">
<h3 class="anchored" data-anchor-id="rootless">Rootless</h3>
<p>I was actually doing really good, but I encountered a roadblock:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb3-1">TASK [Create caddy directory] ************************************************************************************************************</span>
<span id="cb3-2">fatal: [moonstack]: FAILED! =&gt; {"msg": "Failed to set permissions on the temporary files Ansible needs to create when becoming an unprivileged user (rc: 1, err: chmod: invalid mode: ‘A+user:podmaner:rx:allow’\nTry 'chmod --help' for more information.\n}). For information on working around this, see https://docs.ansible.com/ansible-core/2.16/playbook_guide/playbooks_privilege_escalation.html#risks-of-becoming-an-unprivileged-user"}</span></code></pre></div>
<p>The relevant ansible code uses <a href="">become</a> to run as the <code>podmaner</code> user, and then runs the <a href="https://docs.ansible.com/ansible/latest/collections/containers/podman/podman_container_module.html#ansible-collections-containers-podman-podman-container-module">ansible podman container</a> module.</p>
<p>It links to some docs here: <a href="https://docs.ansible.com/ansible-core/2.16/playbook_guide/playbooks_privilege_escalation.html#risks-of-becoming-an-unprivileged-user" class="uri">https://docs.ansible.com/ansible-core/2.16/playbook_guide/playbooks_privilege_escalation.html#risks-of-becoming-an-unprivileged-user</a></p>
<p>This was fixed after I installed the <code>acl</code> package.</p>
</section>
<section id="pods" class="level3">
<h3 class="anchored" data-anchor-id="pods">Pods</h3>
<p>Podman has “pods”. These are somewhat similar to docker networks, which I prefer.</p>
<p>With docker networks, the “network” has a dns, and containers can find eachother by the container name. I enjoyed this with nginx proxy manager, because then I could just forward “containername:port” and it would be easy.</p>
<p>Podman pods work a bit differently. Every pod can contain multiple containers, but they share a network interface. I tested this with two alpine containers, even if I bind a port to localhost, then the other container can still access it.</p>
<p>I am using ansible to create pods.</p>
</section>
<section id="systemd-integration" class="level3">
<h3 class="anchored" data-anchor-id="systemd-integration">Systemd Integration</h3>
<p>Ansible can generate systemd units for pods and containers:</p>
<ul>
<li>Pods: <a href="https://docs.ansible.com/ansible/latest/collections/containers/podman/podman_pod_module.html#parameter-generate_systemd" class="uri">https://docs.ansible.com/ansible/latest/collections/containers/podman/podman_pod_module.html#parameter-generate_systemd</a></li>
<li>Containers: <a href="https://docs.ansible.com/ansible/latest/collections/containers/podman/podman_container_module.html#parameter-generate_systemd" class="uri">https://docs.ansible.com/ansible/latest/collections/containers/podman/podman_container_module.html#parameter-generate_systemd</a></li>
</ul>
<p>Rather than starting the containers using ansible, I can then start the whole pod using the systemd unit for the pod, and <a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/systemd_service_module.html">ansible’s systemd service module</a>. (From my testing, if you start a pod, it also starts all containers in the pod).</p>
<p>In order for this to work, I need to have systemd user services configured and working. However, I get an error:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb4-1">podmaner@thoth:~$ systemctl status --user</span>
<span id="cb4-2">Failed to connect to bus: No medium found</span></code></pre></div>
<p>A bit of research says that this is because the systemd daemon is not running… but it is:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb5-1">root@thoth:~# ps aux | grep "systemd --user"</span>
<span id="cb5-2">podmaner    1095  0.0  0.0  18984 10760 ?        Ss   13:33   0:00 /lib/systemd/systemd --user</span>
<span id="cb5-3">moonpie     1513  0.1  0.0  19140 10780 ?        Ss   13:33   0:00 /lib/systemd/systemd --user</span>
<span id="cb5-4">root        1648  0.0  0.0   6332  2036 pts/6    S+   13:35   0:00 grep systemd --user</span></code></pre></div>
<p>It works on my <code>moonpie</code> user:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb6-1">moonpie@thoth:~$ systemctl status --user</span>
<span id="cb6-2">● thoth</span>
<span id="cb6-3">    State: running</span>
<span id="cb6-4">    Units: 139 loaded (incl. loaded aliases)</span>
<span id="cb6-5">     Jobs: 0 queued</span>
<span id="cb6-6">   Failed: 0 units</span>
<span id="cb6-7">    Since: Sat 2024-04-20 13:33:22 PDT; 1min 27s ago</span>
<span id="cb6-8">  systemd: 252.22-1~deb12u1</span>
<span id="cb6-9">   CGroup: /user.slice/user-1000.slice/user@1000.service</span>
<span id="cb6-10">           └─init.scope</span>
<span id="cb6-11">             ├─1513 /lib/systemd/systemd --user</span>
<span id="cb6-12">             └─1514 "(sd-pam)"</span></code></pre></div>
<p>I found an <a href="https://askubuntu.com/a/1468012">askubuntu answer</a> which has the solution I need. The variable <code>$XDG_RUNTIME_DIR</code> and <code>$DBUS_SESSION_ADDRESS</code> need to be set — however, in my testing, only the former actually needed to be set.</p>
<p><a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/systemd_service_module.html">Ansible’s documentation on user services</a> actually addresses this.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Run a user service when XDG_RUNTIME_DIR is not set on remote login</span></span>
<span id="cb7-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ansible.builtin.systemd_service</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb7-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> myservice</span></span>
<span id="cb7-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">state</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> started</span></span>
<span id="cb7-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scope</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> user</span></span>
<span id="cb7-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">environment</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb7-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">XDG_RUNTIME_DIR</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/run/user/{{ myuid }}"</span></span></code></pre></div>
<p>The <code>environment</code> dictionary sets environment variables for a task.</p>
<p>And then of course, when configuring and testing, I like the solution as suggested by the stackoverflow answer:</p>
<p><code>sudo machinectl shell user@</code> to log into a local user with dbus and environment variables properly set up.</p>
<p>Now, I simply have to ensure that generated systemd unitfiles for containers go in the right place, <code>$HOME/.config/systemd/user/</code>, like so:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb8-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Authentik Redis database</span></span>
<span id="cb8-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">containers.podman.podman_container</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb8-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> authentik_redis</span></span>
<span id="cb8-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pod</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> authentik_pod</span></span>
<span id="cb8-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> docker.io/library/redis:alpine</span></span>
<span id="cb8-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">command</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> --save 60 1 --loglevel warning</span></span>
<span id="cb8-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">env</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb8-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AUTHENTIK_SECRET_KEY</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{{ authentik_secret_key }}"</span></span>
<span id="cb8-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">volumes</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb8-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{{ homepath.stdout }}/authentik/redis:/data"</span></span>
<span id="cb8-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">generate_systemd</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb8-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">restart_policy</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"always"</span></span>
<span id="cb8-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">path</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{{ homepath.stdout }}/.config/systemd/user/"</span></span></code></pre></div>
<p>And the services shows up in the systemd user session:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb9-1">podmaner@thoth:~/.config$ systemctl --user status container-authentik_redis.service</span>
<span id="cb9-2">○ container-authentik_redis.service - Podman container-authentik_redis.service</span>
<span id="cb9-3">     Loaded: loaded (/home/podmaner/.config/systemd/user/container-authentik_redis.service; disabled; preset: enabled)</span>
<span id="cb9-4">     Active: inactive (dead)</span>
<span id="cb9-5">       Docs: man:podman-generate-systemd(1)</span></code></pre></div>
<p>However…</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>$HOME/.config/systemd/user/container-authentik_redis.service</strong></pre>
</div>
<div class="sourceCode" id="cb10" data-filename="$HOME/.config/systemd/user/container-authentik_redis.service" style="background: #f1f3f5;"><pre class="sourceCode ini code-with-copy"><code class="sourceCode ini"><span id="cb10-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[Unit]</span></span>
<span id="cb10-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Description</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Podman container-authentik_redis.service</span></span>
<span id="cb10-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Documentation</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">man:podman-generate-systemd(1)</span></span>
<span id="cb10-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Wants</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">network-online.target</span></span>
<span id="cb10-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">After</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">network-online.target</span></span>
<span id="cb10-6"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">RequiresMountsFor</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/tmp/podman-run-1001/containers</span></span>
<span id="cb10-7"></span>
<span id="cb10-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[Service]</span></span>
<span id="cb10-9"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Environment</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">PODMAN_SYSTEMD_UNIT=%n</span></span>
<span id="cb10-10"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Restart</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">always</span></span>
<span id="cb10-11"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">TimeoutStopSec</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span></span>
<span id="cb10-12"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ExecStart</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/usr/bin/podman start authentik_redis</span></span>
<span id="cb10-13"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ExecStop</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/usr/bin/podman stop  \</span></span>
<span id="cb10-14"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">        -t 10 authentik_redis</span></span>
<span id="cb10-15"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ExecStopPost</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/usr/bin/podman stop  \</span></span>
<span id="cb10-16"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">        -t 10 authentik_redis</span></span>
<span id="cb10-17"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">PIDFile</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/tmp/podman-run-1001/containers/vfs-containers/5fed7e5a1116899a7e1915793f0f8d3bd0f09c1884e8d574138a72b55964211f/userdata/conmon.pid</span></span>
<span id="cb10-18"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Type</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">forking</span></span>
<span id="cb10-19"></span>
<span id="cb10-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[Install]</span></span>
<span id="cb10-21"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">WantedBy</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">default.target</span></span></code></pre></div>
</div>
<p><code>podman generate systemd</code> doesn’t actually generate <a href="https://www.redhat.com/sysadmin/quadlet-podman">quadlets</a> for systemd, but rather a unit user service that calls podman. This is problematic because I was expecting quadlets to be used because quadlets define the container themselves in the unit file.</p>
<p>Without quadlets, podman manages it’s own state, which has issues, and was the entire reason I was looking into alternatives to podman for managing state.</p>
<p>More research: <a href="https://github.com/linux-system-roles/podman" class="uri">https://github.com/linux-system-roles/podman</a>: I found an ansible role to generate podman quadlets, but I don’t really want to include ansible roles in my existing ansible roles. Also, it intakes kubernetes yaml, which is very complex for what I am trying to do. At that point, why not just use a single node kubernetes cluster and let kubernetes manage state?</p>
<p>However:</p>
<blockquote class="blockquote">
<p>Quadlet, a tool merged into Podman 4.4</p>
</blockquote>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb11-1">podmaner@thoth:~/.config/systemd/user$ podman --version</span>
<span id="cb11-2">podman version 4.3.1</span></code></pre></div>
<p>My Debian system doesn’t support quadlets. I couuld use nix or something else to get a newer version of podman, since I am doing rootless, but that feels like way to much complexity for what will ultimately not be a permanent solution, as I plan to eventually move to a kubernetes cluster.</p>
</section>
</section>
<section id="ansibilizing-the-server" class="level2">
<h2 class="anchored" data-anchor-id="ansibilizing-the-server">Ansibilizing the server</h2>
<section id="ansible-facts-home-home" class="level3">
<h3 class="anchored" data-anchor-id="ansible-facts-home-home">Ansible facts HOME =/= $HOME</h3>
<p>I was having ansible run some things as another user, and using something like this to get the home directory of the user it was running as:</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb12-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Do podmaner container</span></span>
<span id="cb12-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">become</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb12-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">become_user</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{{ rathole_user }}"</span></span>
<span id="cb12-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">block</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb12-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Create rathole config</span></span>
<span id="cb12-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ansible.builtin.file</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb12-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">path</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{{ lookup('ansible.builtin.env', 'HOME') }}/rathole/config"</span></span>
<span id="cb12-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">state</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> directory</span></span>
<span id="cb12-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mode</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'0775'</span></span></code></pre></div>
<p>But this errors. Despite <code>rathole_user</code> being <code>podmaner</code>, the error is something like:</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb13-1">TASK [rathole : Create rathole config] *******************************************************************************************</span>
<span id="cb13-2">fatal: [moonstack]: FAILED! =&gt; {"changed": false, "msg": "There was an issue creating /home/moonpie/rathole as requested: [Errno 13] Permission denied: b'/home/moonpie/rathole'", "path": "/home/moonpie/rathole/config"}</span></code></pre></div>
<p>This might be because, when executing one off commands, sudo does not keep environment variables</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb14-1">moonpie@thoth:~$ sudo -iu podmaner echo $HOME</span>
<span id="cb14-2">/home/moonpie</span></code></pre></div>
<p>Interestingly enough, using the $HOME environment variable works though.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb15-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Do podmaner container</span></span>
<span id="cb15-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">become</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb15-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">become_user</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{{ rathole_user }}"</span></span>
<span id="cb15-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">block</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb15-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Get home</span></span>
<span id="cb15-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ansible.builtin.command</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"echo $HOME"</span></span>
<span id="cb15-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">register</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> homepath</span></span>
<span id="cb15-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Print current home</span></span>
<span id="cb15-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ansible.builtin.debug</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb15-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">msg</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{{ homepath.stdout }}"</span></span></code></pre></div>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb16-1">TASK [rathole : Print current home] **********************************************************************************************</span>
<span id="cb16-2">ok: [moonstack] =&gt; {</span>
<span id="cb16-3">    "msg": "/home/podmaner"</span>
<span id="cb16-4">}</span></code></pre></div>
<p>Oh, I figured it out. After a quick google, this is because this lookup runs on the control node, rather than the server being managed.</p>
<p>From the <a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/env_lookup.html">ansible docs</a>: “query the environment variables available on the controller”</p>
<p>I also decided to try <code>ansible_facts['env']['HOME']</code>, but that still outpus <code>/home/moonpie</code>. It seems that facts are gathered using hte user ansible initially logs in as.</p>
<p><code>ansible_env['HOME']</code> doesn’t work either, probably for the same reason.</p>
<p>This was a fun little tangent, I think I am going to return to using <code>$HOME</code> and other environment variables. Since things like podman volumes can’t simply be fed environment variables, I have to echo $HOME to get it first, and then save it to stdout. It feels like there should be a cleaner way to do this, but this does work.</p>
</section>
<section id="ansible-podman-healthchecks" class="level3">
<h3 class="anchored" data-anchor-id="ansible-podman-healthchecks">Ansible Podman Healthchecks</h3>
<p>I think I found some undocumented behavior. I was attempting to adapt the <a href="https://docs.goauthentik.io/docs/installation/docker-compose">authentik docker compose</a> healthchecks to be configured via ansible and podman instead.</p>
<p>The <a href="https://docs.ansible.com/ansible/latest/collections/containers/podman/podman_container_module.html#parameter-healthcheck">ansible podman_container docs</a> have a section on healthchecks.</p>
<p>The official docs say this is correct:</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb17-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Authentik postgres database</span></span>
<span id="cb17-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">containers.podman.podman_container</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb17-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> authentik_postgres</span></span>
<span id="cb17-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pod</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> authentik_pod</span></span>
<span id="cb17-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"moonpiedumplings/authentik_postgres:12"</span></span>
<span id="cb17-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">healthcheck</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CMD-SHELL pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"</span></span>
<span id="cb17-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">healthcheck_retries</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb17-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">healthcheck_start_period</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 20s</span></span></code></pre></div>
<p>And it is. But I attempted to copy and paste the official authentik docker-compose for this anyway, to see if it worked:</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb18-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Authentik Redis database</span></span>
<span id="cb18-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">containers.podman.podman_container</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb18-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> authentik_redis</span></span>
<span id="cb18-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pod</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> authentik_pod</span></span>
<span id="cb18-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> docker.io/library/redis:alpine</span></span>
<span id="cb18-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">command</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> --save 60 1 --loglevel warning</span></span>
<span id="cb18-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">healthcheck</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb18-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CMD-SHELL redis-cli ping | grep PONG"</span></span>
<span id="cb18-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">start_period</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 20s</span></span>
<span id="cb18-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interval</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 30s</span></span>
<span id="cb18-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">retries</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb18-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">timeout</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 3s</span></span></code></pre></div>
<p>And I found that this actually still worked.</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb19-1">podmaner@thoth:~$ podman inspect authentik_redis</span>
<span id="cb19-2">...</span>
<span id="cb19-3">....</span>
<span id="cb19-4">"--healthcheck-command",</span>
<span id="cb19-5">"{'test': 'CMD-SHELL redis-cli ping | grep PONG', 'start_period': '20s', 'interval': '30s', 'retries': 5, 'timeout': '3s'}",</span>
<span id="cb19-6">...</span>
<span id="cb19-7">...</span></code></pre></div>
<p>I find this interesting that it works despite not being documented. Should I rely on this behavior? I like the way it looks, as it’s much more readable than the _underscore format for these particular variables.</p>
</section>
<section id="ansible-vault" class="level3">
<h3 class="anchored" data-anchor-id="ansible-vault">Ansible vault</h3>
<p>If I am going to use rathole, then I need to deploy a config file with a client and server secrets. Although an extra step of complexity, thankfully, ansible makes handling secrets easy, with ansible vault.</p>
<p>Main docs here: <a href="https://docs.ansible.com/ansible/latest/vault_guide/index.html" class="uri">https://docs.ansible.com/ansible/latest/vault_guide/index.html</a></p>
<p><a href="https://docs.ansible.com/ansible/latest/vault_guide/vault_managing_passwords.html#storing-and-accessing-vault-passwords">Docs on handling vault passwords</a></p>
<p>I only need a few variables encrypted, so maybe:</p>
<p><a href="https://docs.ansible.com/ansible/latest/vault_guide/vault_encrypting_content.html#encrypting-content-with-ansible-vault">Docs on encrypting individual variables</a></p>
<p>Or I could encrypt a file with the variables I want and add them? :</p>
<p><a href="https://docs.ansible.com/ansible/latest/vault_guide/vault_encrypting_content.html#encrypting-files-with-ansible-vault">Docs on encrypting files</a></p>
<p>I opted for the only encrypting certain variables within my inventory file, using a single password.</p>
</section>
</section>
</section>
<section id="service-deployment" class="level1">
<h1>Service deployment</h1>
<p>All of this will be ansibilized, ideally.</p>
<section id="rathole" class="level2">
<h2 class="anchored" data-anchor-id="rathole">Rathole</h2>
<p>In addition to the build above, I used a template to deply the rathole container, in case I want more than just http or https on my server (minecraft?).</p>
<p>For example, here is the “client” code:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>client.toml.j2</strong></pre>
</div>
<div class="sourceCode" id="cb20" data-filename="client.toml.j2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb20-1">{% for service in rathole_services %}</span>
<span id="cb20-2"></span>
<span id="cb20-3">[client.services.{{ service.name }}]</span>
<span id="cb20-4">token = "{{ rathole_secret }}"</span>
<span id="cb20-5">local_addr = "{{ service.local_addr }}"</span>
<span id="cb20-6">{% endfor %}</span></code></pre></div>
</div>
<p>Using ansible’s ability to do for loops. The server config has something similar.</p>
</section>
<section id="caddy" class="level2">
<h2 class="anchored" data-anchor-id="caddy">Caddy</h2>
<p>I have a simple caddyfile, right now, but it doesn’t work:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Caddyfile.j2</strong></pre>
</div>
<div class="sourceCode" id="cb21" data-filename="Caddyfile.j2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb21-1">http://test.moonpiedumpl.ing { </span>
<span id="cb21-2">  reverse_proxy * http://localhost:8000</span>
<span id="cb21-3">}</span></code></pre></div>
</div>
<p>I need to expand this. I dislike how Caddy only takes a config file, and there isn’t something like a premade docker container that takes environment variables, but it is what it is.</p>
<p>For a <a href="https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_templating.html">jinja2</a> template, something like this:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Caddyfile.j2</strong></pre>
</div>
<div class="sourceCode" id="cb22" data-filename="Caddyfile.j2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb22-1">{% for service in caddy_services %}</span>
<span id="cb22-2">{{ service.domain_name }} {</span>
<span id="cb22-3">    {% if service.port is defined %}</span>
<span id="cb22-4">    reverse_proxy http://127.0.0.1:{{ service.port }}</span>
<span id="cb22-5">    {% if service.request_body is defined %}</span>
<span id="cb22-6">    request_body {</span>
<span id="cb22-7">        max_size 2048MB</span>
<span id="cb22-8">    }</span>
<span id="cb22-9">    {% endif %}</span>
<span id="cb22-10">    {% endif %}</span>
<span id="cb22-11">    {% if service.file_root is defined %}</span>
<span id="cb22-12">    root * {{ service.file_root }}</span>
<span id="cb22-13">    file_server</span>
<span id="cb22-14">    {% endif %}</span>
<span id="cb22-15">}</span>
<span id="cb22-16">{% endfor %}</span></code></pre></div>
</div>
<p>And then the caddy role would take these hosts:</p>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb23-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">role</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> caddy</span></span>
<span id="cb23-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vars</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb23-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">caddy_services</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb23-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">domain_name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test.moonpiedumpl.ing"</span></span>
<span id="cb23-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">port</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8000</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # This is where the python http server runs by default, for my tests.</span></span></code></pre></div>
<p>This almost worked, but I got an error in the caddy logs</p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb24-1">dial tcp 127.0.0.1:8000: connect: connection refused</span></code></pre></div>
<p>The issue is that, unlike docker containers, podman containers have their own network interface. Attempting to curl localhost on them would result in the wrong network interface being accessed.</p>
<p>Also, I need to add the <a href="https://caddyserver.com/docs/caddyfile/options#trusted-proxies">trusted_proxies</a> option, otherwise caddy will not report the real ip address of the client.</p>
<p>I adjusted the podman container to not forward any ports, and instead to be in “host” networking mode, where it shares the interfaces with the host.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Caddyfile.j2</strong></pre>
</div>
<pre class="jinja2" data-filename="Caddyfile.j2"><code>{
    http_port {{ caddy_http_port }}
    https_port {{ caddy_https_port }}
    {% if caddy_trusted_proxies | length &gt; 0 %}
    trusted_proxies static {{ caddy_trusted_proxies | join(' ') }}
    {% endif %}
}</code></pre>
</div>
<p>Except this errors. Caddy complains: <code>Error: adapting config using caddyfile: /etc/caddy/Caddyfile:4: unrecognized global option: trusted_proxies</code> and the container dies.</p>
<p>Also, the generated file looks really weird:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Caddyfile</strong></pre>
</div>
<div class="sourceCode" id="cb26" data-filename="Caddyfile" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb26-1">{</span>
<span id="cb26-2">    http_port 8080</span>
<span id="cb26-3">    https_port 8443</span>
<span id="cb26-4">        trusted_proxies staic 154.12.245.181</span>
<span id="cb26-5">    }</span>
<span id="cb26-6">test.moonpiedumpl.ing {</span>
<span id="cb26-7">        reverse_proxy http://127.0.0.1:8000</span>
<span id="cb26-8">            }</span></code></pre></div>
</div>
<p>The spacing is off, and that might be the reason why it errors?</p>
<p>I corrected the jinja2 spacing according to <a href="https://jinja.palletsprojects.com/en/latest/templates/#whitespace-control">it’s docs</a>, and also corrected the caddy config. <code>trusted_proxies</code> needs to be placed inside a <code>servers</code> block for it to be a global option, or inside each of the sites, if you want to make it site specific.</p>
<p>The corrected generated config:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Caddyfile</strong></pre>
</div>
<div class="sourceCode" id="cb27" data-filename="Caddyfile" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb27-1">{</span>
<span id="cb27-2">    http_port 8080</span>
<span id="cb27-3">    https_port 8443</span>
<span id="cb27-4">    servers {</span>
<span id="cb27-5">        trusted_proxies static 154.12.245.181</span>
<span id="cb27-6">    }</span>
<span id="cb27-7">}</span>
<span id="cb27-8">test.moonpiedumpl.ing {</span>
<span id="cb27-9">    reverse_proxy http://127.0.0.1:8000</span>
<span id="cb27-10">}</span></code></pre></div>
</div>
<p>However, this does not work. I only get:</p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb28-1">[moonpie@lizard moonpiedumplings.github.io]$ curl test.moonpiedumpl.ing</span>
<span id="cb28-2">curl: (52) Empty reply from server</span></code></pre></div>
<p>The caddy logs do not show anything relevant. I also did an additional test, by running a podman alpine container with host networking, where it was able to curl localhost just fine.</p>
<p>It is interesting, how Caddy returns an “empty reply”, rather than what I am expecting, a “502 Bad Gateway” — that’s the reply that you usually get when the backend server is down, which it was in a lot of my testing.</p>
<p>So I throw in a quick “Hello World”</p>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb29-1">hello.moonpiedumpl.ing {</span>
<span id="cb29-2">    respond "Hello World!"</span>
<span id="cb29-3">}</span></code></pre></div>
<p>And still get an empty reply.</p>
<p>The caddy logs, however, do say soemthign interesting:</p>
<details>
<summary>
Show Logs
</summary>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb30-1">{"level":"info","ts":1707778344.991714,"logger":"http.auto_https","msg":"server is listening only on the HTTPS port but has no TLS connection policies; adding one to enable TLS","server_name":"srv0","https_port":8443}</span>
<span id="cb30-2">.....</span>
<span id="cb30-3">....</span>
<span id="cb30-4">.....</span>
<span id="cb30-5">{"level":"info","ts":1707778344.991727,"logger":"http.auto_https","msg":"enabling automatic HTTP-&gt;HTTPS redirects","server_name":"srv0"}</span>
<span id="cb30-6">{"level":"error","ts":1708452118.3423748,"logger":"http.acme_client","msg":"validating authorization","identifier":"hello.moonpiedumpl.ing","problem":{"type":"urn:ietf:params:acme:error:connection","title":"","detail":"154.12.245.181: Fetching http://hello.moonpiedumpl.ing/.well-known/acme-challenge/1qnsZcobKUGtdEG2KON-FeFwio97TFxWCu7hqXSY89s: Error getting validation data","instance":"","subproblems":[]},"order":"https://acme-v02.api.letsencrypt.org/acme/order/1560639027/246082250997","attempt":2,"max_attempts":3}</span>
<span id="cb30-7">{"level":"error","ts":1708452118.3424225,"logger":"tls.obtain","msg":"could not get certificate from issuer","identifier":"hello.moonpiedumpl.ing","issuer":"acme-v02.api.letsencrypt.org-directory","error":"HTTP 400 urn:ietf:params:acme:error:connection - 154.12.245.181: Fetching http://hello.moonpiedumpl.ing/.well-known/acme-challenge/1qnsZcobKUGtdEG2KON-FeFwio97TFxWCu7hqXSY89s: Error getting validation data"}</span>
<span id="cb30-8">{"level":"warn","ts":1708452118.3426523,"logger":"http","msg":"missing email address for ZeroSSL; it is strongly recommended to set one for next time"}</span>
<span id="cb30-9">{"level":"info","ts":1708452119.2906954,"logger":"http","msg":"generated EAB credentials","key_id":"N8YqjedBRmclRYYFjYqZGw"}</span>
<span id="cb30-10">{"level":"info","ts":1708452136.0253348,"logger":"http","msg":"waiting on internal rate limiter","identifiers":["hello.moonpiedumpl.ing"],"ca":"https://acme.zerossl.com/v2/DV90","account":""}</span>
<span id="cb30-11">{"level":"info","ts":1708452136.0253737,"logger":"http","msg":"done waiting on internal rate limiter","identifiers":["hello.moonpiedumpl.ing"],"ca":"https://acme.zerossl.com/v2/DV90","account":""}</span>
<span id="cb30-12">{"level":"info","ts":1708452143.7124622,"logger":"http.acme_client","msg":"trying to solve challenge","identifier":"hello.moonpiedumpl.ing","challenge_type":"http-01","ca":"https://acme.zerossl.com/v2/DV90"}</span>
<span id="cb30-13">{"level":"error","ts":1708452153.466225,"logger":"http.acme_client","msg":"challenge failed","identifier":"hello.moonpiedumpl.ing","challenge_type":"http-01","problem":{"type":"","title":"","detail":"","instance":"","subproblems":[]}}</span>
<span id="cb30-14">{"level":"error","ts":1708452153.4662635,"logger":"http.acme_client","msg":"validating authorization","identifier":"hello.moonpiedumpl.ing","problem":{"type":"","title":"","detail":"","instance":"","subproblems":[]},"order":"https://acme.zerossl.com/v2/DV90/order/mlTQtXTaA_eyy7PFDbdZSg","attempt":1,"max_attempts":3}</span>
<span id="cb30-15">{"level":"error","ts":1708452153.4663181,"logger":"tls.obtain","msg":"could not get certificate from issuer","identifier":"hello.moonpiedumpl.ing","issuer":"acme.zerossl.com-v2-DV90","error":"HTTP 0  - "}</span>
<span id="cb30-16">{"level":"error","ts":1708452153.466387,"logger":"tls.obtain","msg":"will retry","error":"[hello.moonpiedumpl.ing] Obtain: [hello.moonpiedumpl.ing] solving challenge: hello.moonpiedumpl.ing: [hello.moonpiedumpl.ing] authorization failed: HTTP 0  -  (ca=https://acme.zerossl.com/v2/DV90)","attempt":1,"retrying_in":60,"elapsed":41.717184567,"max_duration":2592000}</span></code></pre></div>
</details>
<p>It seems like the certificate challenge fails. If caddy is doing auto https redirects, then it makes sense that the reply is empty.</p>
<p>And curling https?</p>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb31-1">[moonpie@lizard server-configs]$ curl https://hello.moonpiedumpl.ing</span>
<span id="cb31-2">curl: (35) OpenSSL SSL_connect: SSL_ERROR_SYSCALL in connection to hello.moonpiedumpl.ing:443</span></code></pre></div>
<p>If caddy isn’t serving on https properly, then it makes sense that this fails.</p>
<p>Later, I think I discover the issue:</p>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb32-1">podmaner@thoth:~/rathole$ podman ps</span>
<span id="cb32-2">CONTAINER ID  IMAGE                                      COMMAND               CREATED      STATUS            PORTS                                        NAMES</span>
<span id="cb32-3">868115b4e818  docker.io/moonpiedumplings/rathole:latest  rathole --client ...  2 weeks ago  Up 7 minutes ago                                               rathole</span>
<span id="cb32-4">860ec72e5c78  docker.io/library/caddy:latest             caddy run --confi...  2 weeks ago  Up 7 minutes ago  0.0.0.0:8080-&gt;80/tcp, 0.0.0.0:8443-&gt;443/tcp  caddy</span></code></pre></div>
<p>Why is Caddy forwarding ports? My ansible playbooks set the podman networking to be host networking. It seems that, when rerunning a podman container using ansible, it doesn’t properly destroy it, leaving some lingering configs.</p>
<p>However, I get an error:</p>
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb33-1">podmaner@thoth:~$ podman logs caddy</span>
<span id="cb33-2">...</span>
<span id="cb33-3">...</span>
<span id="cb33-4">{"level":"info","ts":1709764202.9553177,"logger":"tls.issuance.acme","msg":"waiting on internal rate limiter","identifiers":["hello.moonpiedumpl.ing"],"ca":"https://acme-v02.api.letsencrypt.org/directory","account":"moonpiedumplings2@gmail.com"}</span>
<span id="cb33-5">{"level":"info","ts":1709764202.955384,"logger":"tls.issuance.acme","msg":"done waiting on internal rate limiter","identifiers":["hello.moonpiedumpl.ing"],"ca":"https://acme-v02.api.letsencrypt.org/directory","account":"moonpiedumplings2@gmail.com"}</span>
<span id="cb33-6">{"level":"info","ts":1709764202.9641545,"logger":"tls.issuance.acme","msg":"waiting on internal rate limiter","identifiers":["test.moonpiedumpl.ing"],"ca":"https://acme-v02.api.letsencrypt.org/directory","account":"moonpiedumplings2@gmail.com"}</span>
<span id="cb33-7">{"level":"info","ts":1709764202.964186,"logger":"tls.issuance.acme","msg":"done waiting on internal rate limiter","identifiers":["test.moonpiedumpl.ing"],"ca":"https://acme-v02.api.letsencrypt.org/directory","account":"moonpiedumplings2@gmail.com"}</span>
<span id="cb33-8">{"level":"info","ts":1709764203.0985403,"logger":"tls.issuance.acme","msg":"waiting on internal rate limiter","identifiers":["sso.moonpiedumpl.ing"],"ca":"https://acme-v02.api.letsencrypt.org/directory","account":"moonpiedumplings2@gmail.com"}</span>
<span id="cb33-9">{"level":"info","ts":1709764203.0985787,"logger":"tls.issuance.acme","msg":"done waiting on internal rate limiter","identifiers":["sso.moonpiedumpl.ing"],"ca":"https://acme-v02.api.letsencrypt.org/directory","account":"moonpiedumplings2@gmail.com"}</span>
<span id="cb33-10">{"level":"info","ts":1709764203.2928238,"logger":"tls.issuance.acme.acme_client","msg":"trying to solve challenge","identifier":"test.moonpiedumpl.ing","challenge_type":"tls-alpn-01","ca":"https://acme-v02.api.letsencrypt.org/directory"}</span>
<span id="cb33-11">{"level":"info","ts":1709764203.434616,"logger":"tls.issuance.acme.acme_client","msg":"trying to solve challenge","identifier":"sso.moonpiedumpl.ing","challenge_type":"tls-alpn-01","ca":"https://acme-v02.api.letsencrypt.org/directory"}</span>
<span id="cb33-12">{"level":"error","ts":1709764203.478285,"logger":"tls.obtain","msg":"could not get certificate from issuer","identifier":"test.moonpiedumpl.ing","issuer":"acme-v02.api.letsencrypt.org-directory","error":"[test.moonpiedumpl.ing] solving challenges: presenting for challenge: presenting with embedded solver: could not start listener for challenge server at :443: listen tcp :443: bind: permission denied (order=https://acme-v02.api.letsencrypt.org/acme/order/1605766427/250173951227) (ca=https://acme-v02.api.letsencrypt.org/directory)"}</span></code></pre></div>
<p>And more of the same.</p>
<p>So apparently, Caddy doesn’t automatically do the acme challenge on the <code>http_port</code> or <code>https_port</code>, and you have to explicitly specify an alternate port:</p>
<pre class="Caddyfile"><code>sso.moonpiedumpl.ing {
    reverse_proxy http://127.0.0.1:9000

    tls {
        issuer acme {
            alt_http_port 8080
            alt_tlsalpn_port 8443
        }
    }
}</code></pre>
<p>And of course, this is templated as part of my Caddyfile:</p>
<pre class="jinja2"><code>{% for service in caddy_services %}
{{ service.domain_name }} {
    {% if service.port is defined %}
    reverse_proxy http://127.0.0.1:{{ service.port }}
    {% if service.request_body is defined %}
    request_body {
        max_size 2048MB
    }
    {% endif %}
    {% endif %}
    {% if service.file_root is defined %}
    root * {{ service.file_root }}
    file_server
    {% endif %}
    
    tls {
        issuer acme {
            alt_http_port {{ caddy_http_port }}
            alt_tlsalpn_port {{ caddy_https_port }}
        }
    }
}
{% endfor %}</code></pre>
<p>But with this, Caddy <em>finally</em> works properly.</p>
<p>I saw another interesting thing: <a href="https://authp.github.io/">caddy security module</a> (<a href="https://github.com/greenpau/caddy-security">github</a>), which lets you integrate caddy with ldap or other forms of authentication. I want to inegrate this, because it would be better to have auth built into the single sign on.</p>
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode Dockerfile code-with-copy"><code class="sourceCode dockerfile"><span id="cb36-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#jinja2:lstrip_blocks: True</span></span>
<span id="cb36-2"></span>
<span id="cb36-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">FROM</span> docker.io/library/caddy:{{ caddy_version }}-builder <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">AS</span> builder</span>
<span id="cb36-4"></span>
<span id="cb36-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">xcaddy</span> build {% for plugin in caddy_plugins %}--with {{ plugin }}{% endfor %} </span>
<span id="cb36-6"></span>
<span id="cb36-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">FROM</span> docker.io/library/caddy:{{ caddy_version }}</span>
<span id="cb36-8"></span>
<span id="cb36-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">COPY</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--from=builder</span> /usr/bin/caddy /usr/bin/caddy</span></code></pre></div>
<p>With this, I have the caddy_security module installed.</p>
<p>Configuring it, is much, much harder.</p>
<p>I started with copying the existing example Caddyfile they give:</p>
</section>
<section id="authentik" class="level2">
<h2 class="anchored" data-anchor-id="authentik">Authentik</h2>
<p>The listen settings are here: <a href="https://goauthentik.io/docs/installation/configuration/#listen-settings" class="uri">https://goauthentik.io/docs/installation/configuration/#listen-settings</a></p>
<p>So the podman pod which runs all of authentik will have those ports forwarded.</p>
<div class="sourceCode" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb37-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Create relevant podman pod</span></span>
<span id="cb37-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">containers.podman.podman_pod</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb37-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> authentik_pod</span></span>
<span id="cb37-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">state</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> present</span></span>
<span id="cb37-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ports</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb37-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9000:9000"</span></span>
<span id="cb37-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9443:9443"</span></span>
<span id="cb37-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3389:3389"</span></span>
<span id="cb37-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6636:3389"</span></span></code></pre></div>
<p>I designed a role, and deployment was going pretty smoothly. Until it errored:</p>
<div class="sourceCode" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb38-1">failed: [moonstack] (item=postgres) =&gt; {</span>
<span id="cb38-2">    "ansible_loop_var": "item",</span>
<span id="cb38-3">    "changed": false,</span>
<span id="cb38-4">    "item": "postgres",</span>
<span id="cb38-5">    "module_stderr": "Shared connection to 192.168.17.197 closed.",</span>
<span id="cb38-6">    "module_stdout": "</span>
<span id="cb38-7">Traceback (most recent call last):</span>
<span id="cb38-8">  File \"/var/tmp/ansible-tmp-1708731694.1592944-80284-196261000245469/AnsiballZ_file.py\", line 107, in &lt;module&gt;</span>
<span id="cb38-9">    _ansiballz_main()</span>
<span id="cb38-10">  File \"/var/tmp/ansible-tmp-1708731694.1592944-80284-196261000245469/AnsiballZ_file.py\", line 99, in _ansiballz_main</span>
<span id="cb38-11">    invoke_module(zipped_mod, temp_path, ANSIBALLZ_PARAMS)</span>
<span id="cb38-12">  File \"/var/tmp/ansible-tmp-1708731694.1592944-80284-196261000245469/AnsiballZ_file.py\", line 47, in invoke_module</span>
<span id="cb38-13">    runpy.run_module(mod_name='ansible.modules.file', init_globals=dict(_module_fqn='ansible.modules.file', _modlib_path=modlib_path),</span>
<span id="cb38-14">  File \"&lt;frozen runpy&gt;\", line 226, in run_module</span>
<span id="cb38-15">  File \"&lt;frozen runpy&gt;\", line 98, in _run_module_code</span>
<span id="cb38-16">  File \"&lt;frozen runpy&gt;\", line 88, in _run_code</span>
<span id="cb38-17">  File \"/tmp/ansible_ansible.builtin.file_payload_37zf8n_k/ansible_ansible.builtin.file_payload.zip/ansible/modules/file.py\", line 987, in &lt;module&gt;</span>
<span id="cb38-18">  File \"/tmp/ansible_ansible.builtin.file_payload_37zf8n_k/ansible_ansible.builtin.file_payload.zip/ansible/modules/file.py\", line 973, in main</span>
<span id="cb38-19">  File \"/tmp/ansible_ansible.builtin.file_payload_37zf8n_k/ansible_ansible.builtin.file_payload.zip/ansible/modules/file.py\", line 680, in ensure_directory</span>
<span id="cb38-20">  File \"/tmp/ansible_ansible.builtin.file_payload_37zf8n_k/ansible_ansible.builtin.file_payload.zip/ansible/module_utils/basic.py\", line 1159, in set_fs_attributes_if_different</span>
<span id="cb38-21">  File \"/tmp/ansible_ansible.builtin.file_payload_37zf8n_k/ansible_ansible.builtin.file_payload.zip/ansible/module_utils/basic.py\", line 919, in set_mode_if_different</span>
<span id="cb38-22">PermissionError: [Errno 1] Operation not permitted: b'/home/podmaner/authentik/postgres'",</span>
<span id="cb38-23">    "msg": "MODULE FAILURE\nSee stdout/stderr for the exact error",</span>
<span id="cb38-24">    "rc": 1</span>
<span id="cb38-25">}</span></code></pre></div>
<p>Which is… weird. Looking at the ansible code that generates this:</p>
<div class="sourceCode" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb39-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Create relevant configuration files</span></span>
<span id="cb39-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ansible.builtin.file</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb39-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">path</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{{ homepath.stdout }}/authentik/{{ item }}"</span></span>
<span id="cb39-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">state</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> directory</span></span>
<span id="cb39-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mode</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'0755'</span></span>
<span id="cb39-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loop</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"media"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"custom-templates"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"certs"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"postgres"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"redis"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span></code></pre></div>
<p>It’s the same exact task, looped through… but it <em>only errors for /home/podmaner/authentik/postgres</em> ‽</p>
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb40-1">podmaner@thoth:~/authentik$ ls -la</span>
<span id="cb40-2">total 28</span>
<span id="cb40-3">drwxr-xr-x 7 podmaner podmaner 4096 Feb 23 15:37 .</span>
<span id="cb40-4">drwx------ 9 podmaner podmaner 4096 Feb 23 15:37 ..</span>
<span id="cb40-5">drwxr-xr-x 2 podmaner podmaner 4096 Feb 23 15:37 certs</span>
<span id="cb40-6">drwxr-xr-x 2 podmaner podmaner 4096 Feb 23 15:37 custom-templates</span>
<span id="cb40-7">drwxr-xr-x 2 podmaner podmaner 4096 Feb 23 15:37 media</span>
<span id="cb40-8">drwx------ 2   165605 podmaner 4096 Feb 23 15:37 postgres</span>
<span id="cb40-9">drwxr-xr-x 2   166534 podmaner 4096 Feb 23 15:39 redis</span></code></pre></div>
<p>For some reason, only the postgres directory has incorrect permissions?</p>
<p>And the weirdest part: This only happens upon a rerun of the role. If I delete the <code>/home/podmaner/authentik/</code> directory, and run the role, then everything runs properly, and the <code>postgres</code> directory gets the proper permissions.</p>
<p>Why does this happen? My intuition is telling me this is a bug, since the behavior is so blatantly inconsistent.</p>
<p>It’s not really that though. After deleting the <code>postgres</code> directory, it was recreated.</p>
<div class="sourceCode" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb41-1">podmaner@thoth:~/authentik$ podman logs authentik_postgres</span>
<span id="cb41-2">Error: Database is uninitialized and superuser password is not specified.</span>
<span id="cb41-3">       You must specify POSTGRES_PASSWORD to a non-empty value for the</span>
<span id="cb41-4">       superuser. For example, "-e POSTGRES_PASSWORD=password" on "docker run".</span>
<span id="cb41-5"></span>
<span id="cb41-6">       You may also use "POSTGRES_HOST_AUTH_METHOD=trust" to allow all</span>
<span id="cb41-7">       connections without a password. This is *not* recommended.</span>
<span id="cb41-8"></span>
<span id="cb41-9">       See PostgreSQL documentation about "trust":</span>
<span id="cb41-10">       https://www.postgresql.org/docs/current/auth-trust.html</span></code></pre></div>
<p>Whoops. Lol. I was attempting to convet <a href="https://goauthentik.io/docs/installation/docker-compose">authentik’s docker-compose.yml</a> to podman+ansible instructions, but my copy was incomplete, and I forgot to configure the postgres container properly.</p>
<p>That explains why the container won’t start… but it still doesn’t explain the file permissions error.</p>
<p>After taking a closer look at the output of <code>ls -la</code>, it seems that the podman containers change ownership of the files. Why doesn’t it do this for any of my other containers?</p>
<p>I’m guessing this is because the postgres and redis container, unlike every other container, have the main process inside as a different user other than root.</p>
<p>I looked into <a href="https://www.redhat.com/sysadmin/rootless-podman-user-namespace-modes">podman user namespaces</a>. I tried setting user namespaces for the relevant containers, first, but I got an error:</p>
<div class="sourceCode" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb42-1">TASK [authentik : Authentik postgres database] ***********************************************************************************************************************</span>
<span id="cb42-2">fatal: [moonstack]: FAILED! =&gt; {"changed": false, "msg": "Can't run container authentik_postgres", "stderr": "Error: --userns and --pod cannot be set together\n", "stderr_lines": ["Error: --userns and --pod cannot be set together"], "stdout": "", "stdout_lines": []}</span></code></pre></div>
<p>So instead, I set the usernamespace for the whole pod, and it didn’t erorr:</p>
<div class="sourceCode" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb43-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Create relevant podman pod  </span></span>
<span id="cb43-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">containers.podman.podman_pod</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb43-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> authentik_pod</span></span>
<span id="cb43-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">recreate</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span></code></pre></div>
<p>It seems like the error is that, the podmaner user would no longer have write permissions, preventing it from doing anything to those specific files.</p>
<p>However, the podman container still died.</p>
<details>
<summary>
Show error
</summary>
<div class="sourceCode" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb44-1">podmaner@thoth:~$ podman logs authentik_worker</span>
<span id="cb44-2">{"event": "Loaded config", "level": "debug", "logger": "authentik.lib.config", "timestamp": 1708731540.8134813, "file": "/authentik/lib/default.yml"}</span>
<span id="cb44-3">{"event": "Loaded environment variables", "level": "debug", "logger": "authentik.lib.config", "timestamp": 1708731540.813802, "count": 5}</span>
<span id="cb44-4">{"event": "Starting authentik bootstrap", "level": "info", "logger": "authentik.lib.config", "timestamp": 1708731540.8138793}</span>
<span id="cb44-5">{"event": "----------------------------------------------------------------------", "level": "info", "logger": "authentik.lib.config", "timestamp": 1708731540.8139021}</span>
<span id="cb44-6">{"event": "Secret key missing, check https://goauthentik.io/docs/installation/.", "level": "info", "logger": "authentik.lib.config", "timestamp": 1708731540.8139138}</span>
<span id="cb44-7">{"event": "----------------------------------------------------------------------", "level": "info", "logger": "authentik.lib.config", "timestamp": 1708731540.8139226}</span>
<span id="cb44-8">{"event": "Loaded config", "level": "debug", "logger": "authentik.lib.config", "timestamp": 1708807909.1802225, "file": "/authentik/lib/default.yml"}</span>
<span id="cb44-9">{"event": "Loaded environment variables", "level": "debug", "logger": "authentik.lib.config", "timestamp": 1708807909.1805325, "count": 5}</span>
<span id="cb44-10">{"event": "Starting authentik bootstrap", "level": "info", "logger": "authentik.lib.config", "timestamp": 1708807909.1806104}</span>
<span id="cb44-11">{"event": "----------------------------------------------------------------------", "level": "info", "logger": "authentik.lib.config", "timestamp": 1708807909.180633}</span>
<span id="cb44-12">{"event": "Secret key missing, check https://goauthentik.io/docs/installation/.", "level": "info", "logger": "authentik.lib.config", "timestamp": 1708807909.1806445}</span>
<span id="cb44-13">{"event": "----------------------------------------------------------------------", "level": "info", "logger": "authentik.lib.config", "timestamp": 1708807909.1806536}</span>
<span id="cb44-14">{"event": "Loaded config", "level": "debug", "logger": "authentik.lib.config", "timestamp": 1708817283.6261683, "file": "/authentik/lib/default.yml"}</span>
<span id="cb44-15">{"event": "Loaded environment variables", "level": "debug", "logger": "authentik.lib.config", "timestamp": 1708817283.6264079, "count": 5}</span>
<span id="cb44-16">{"event": "Starting authentik bootstrap", "level": "info", "logger": "authentik.lib.config", "timestamp": 1708817283.6264803}</span>
<span id="cb44-17">{"event": "----------------------------------------------------------------------", "level": "info", "logger": "authentik.lib.config", "timestamp": 1708817283.6265018}</span>
<span id="cb44-18">{"event": "Secret key missing, check https://goauthentik.io/docs/installation/.", "level": "info", "logger": "authentik.lib.config", "timestamp": 1708817283.626513}</span>
<span id="cb44-19">{"event": "----------------------------------------------------------------------", "level": "info", "logger": "authentik.lib.config", "timestamp": 1708817283.6265216}</span>
<span id="cb44-20">podmaner@thoth:~$ podman logs authentik_server</span>
<span id="cb44-21">{"event": "Loaded config", "level": "debug", "logger": "authentik.lib.config", "timestamp": 1708817279.5668721, "file": "/authentik/lib/default.yml"}</span>
<span id="cb44-22">{"event": "Loaded environment variables", "level": "debug", "logger": "authentik.lib.config", "timestamp": 1708817279.567172, "count": 5}</span>
<span id="cb44-23">{"event": "Loaded app settings", "level": "debug", "logger": "authentik.lib.config", "timestamp": 1708817281.6441257, "path": "authentik.admin.settings"}</span>
<span id="cb44-24">{"event": "Loaded app settings", "level": "debug", "logger": "authentik.lib.config", "timestamp": 1708817281.644982, "path": "authentik.crypto.settings"}</span>
<span id="cb44-25">{"event": "Loaded app settings", "level": "debug", "logger": "authentik.lib.config", "timestamp": 1708817281.6455739, "path": "authentik.events.settings"}</span>
<span id="cb44-26">{"event": "Loaded app settings", "level": "debug", "logger": "authentik.lib.config", "timestamp": 1708817281.6467671, "path": "authentik.outposts.settings"}</span>
<span id="cb44-27">{"event": "Loaded app settings", "level": "debug", "logger": "authentik.lib.config", "timestamp": 1708817281.6484737, "path": "authentik.policies.reputation.settings"}</span>
<span id="cb44-28">{"event": "Loaded app settings", "level": "debug", "logger": "authentik.lib.config", "timestamp": 1708817281.651618, "path": "authentik.providers.scim.settings"}</span>
<span id="cb44-29">{"event": "Loaded app settings", "level": "debug", "logger": "authentik.lib.config", "timestamp": 1708817281.6528664, "path": "authentik.sources.ldap.settings"}</span>
<span id="cb44-30">{"event": "Loaded app settings", "level": "debug", "logger": "authentik.lib.config", "timestamp": 1708817281.6535037, "path": "authentik.sources.oauth.settings"}</span>
<span id="cb44-31">{"event": "Loaded app settings", "level": "debug", "logger": "authentik.lib.config", "timestamp": 1708817281.6540685, "path": "authentik.sources.plex.settings"}</span>
<span id="cb44-32">{"event": "Loaded app settings", "level": "debug", "logger": "authentik.lib.config", "timestamp": 1708817281.6560044, "path": "authentik.stages.authenticator_totp.settings"}</span>
<span id="cb44-33">{"event": "Loaded app settings", "level": "debug", "logger": "authentik.lib.config", "timestamp": 1708817281.6598718, "path": "authentik.blueprints.settings"}</span>
<span id="cb44-34">{"event": "Booting authentik", "level": "info", "logger": "authentik.lib.config", "timestamp": 1708817281.6600318, "version": "2023.10.7"}</span>
<span id="cb44-35">{"event": "Enabled authentik enterprise", "level": "info", "logger": "authentik.lib.config", "timestamp": 1708817281.661141}</span>
<span id="cb44-36">{"event": "Loaded app settings", "level": "debug", "logger": "authentik.lib.config", "timestamp": 1708817281.661508, "path": "authentik.enterprise.settings"}</span>
<span id="cb44-37">{"event": "Loaded GeoIP database", "last_write": 1706549214.0, "level": "info", "logger": "authentik.events.geo", "pid": 2, "timestamp": "2024-02-24T23:28:02.805111"}</span>
<span id="cb44-38">{"app_name": "authentik.crypto", "event": "Failed to run reconcile", "exc": "ProgrammingError('relation \"authentik_crypto_certificatekeypair\" does not exist\\nLINE 1: ...hentik_crypto_certificatekeypair\".\"key_data\" FROM \"authentik...\\n                                                             ^')", "level": "warning", "logger": "authentik.blueprints.apps", "name": "managed_jwt_cert", "pid": 2, "timestamp": "2024-02-24T23:28:03.610865"}</span>
<span id="cb44-39">{"app_name": "authentik.crypto", "event": "Failed to run reconcile", "exc": "ProgrammingError('relation \"authentik_crypto_certificatekeypair\" does not exist\\nLINE 1: SELECT 1 AS \"a\" FROM \"authentik_crypto_certificatekeypair\" W...\\n                             ^')", "level": "warning", "logger": "authentik.blueprints.apps", "name": "self_signed", "pid": 2, "timestamp": "2024-02-24T23:28:03.612779"}</span>
<span id="cb44-40">{"app_name": "authentik.outposts", "event": "Failed to run reconcile", "exc": "ProgrammingError('relation \"authentik_outposts_outpost\" does not exist\\nLINE 1: ..._id\", \"authentik_outposts_outpost\".\"_config\" FROM \"authentik...\\n                                                             ^')", "level": "warning", "logger": "authentik.blueprints.apps", "name": "embedded_outpost", "pid": 2, "timestamp": "2024-02-24T23:28:03.647866"}</span>
<span id="cb44-41">{"event": "Task published", "level": "info", "logger": "authentik.root.celery", "pid": 2, "task_id": "d28b9ddc12eb44eaa99a25dfe3477f37", "task_name": "authentik.blueprints.v1.tasks.blueprints_discovery", "timestamp": "2024-02-24T23:28:03.876853"}</span>
<span id="cb44-42">{"event": "Task published", "level": "info", "logger": "authentik.root.celery", "pid": 2, "task_id": "763c497b4e4c43e2bb745de6a613e104", "task_name": "authentik.blueprints.v1.tasks.clear_failed_blueprints", "timestamp": "2024-02-24T23:28:03.878293"}</span>
<span id="cb44-43">{"app_name": "authentik.core", "event": "Failed to run reconcile", "exc": "ProgrammingError('relation \"authentik_core_source\" does not exist\\nLINE 1: ...\"authentik_core_source\".\"user_matching_mode\" FROM \"authentik...\\n                                                             ^')", "level": "warning", "logger": "authentik.blueprints.apps", "name": "source_inbuilt", "pid": 2, "timestamp": "2024-02-24T23:28:03.881205"}\</span></code></pre></div>
</details>
<p>It seems I forgot another environment variable, which has been <a href="https://goauthentik.io/docs/installation/docker-compose#preparation">documented on authentik’s site</a>.</p>
<p>I did that, and it still dies.</p>
<p>Investigating the error, it seems to be something about relevant file permissions, it is unable to create the necessary file.</p>
<div class="sourceCode" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb45-1">Traceback (most recent call last):</span>
<span id="cb45-2">  File "&lt;frozen runpy&gt;", line 198, in _run_module_as_main</span>
<span id="cb45-3">  File "&lt;frozen runpy&gt;", line 88, in _run_code</span>
<span id="cb45-4">  File "/lifecycle/migrate.py", line 98, in &lt;module&gt;</span>
<span id="cb45-5">    migration.run()</span>
<span id="cb45-6">  File "/lifecycle/system_migrations/tenant_files.py", line 15, in run</span>
<span id="cb45-7">    TENANT_MEDIA_ROOT.mkdir(parents=True)</span>
<span id="cb45-8">  File "/usr/local/lib/python3.12/pathlib.py", line 1311, in mkdir</span>
<span id="cb45-9">    os.mkdir(self, mode)</span>
<span id="cb45-10">PermissionError: [Errno 13] Permission denied: '/media/public'</span></code></pre></div>
<p>I need to do more research into how rootless podman, and the different userns modes, interact with volumes.</p>
<p>I found <a href="https://www.tutorialworks.com/podman-rootless-volumes/">one article</a>, but it’s focus isn’t quite what I want, and it lacks overview of the different userns modes, and how they interact with volume mounts.</p>
<p>I spent some time experimenting, and did some more research. Something crucial was a comment I noticed in the docker-compose, under the section related to the “worker” node of authentik:</p>
<div class="sourceCode" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb46-1"># `user: root` and the docker socket volume are optional.</span>
<span id="cb46-2">    # See more for the docker socket integration here:</span>
<span id="cb46-3">    # https://goauthentik.io/docs/outposts/integrations/docker</span>
<span id="cb46-4">    # Removing `user: root` also prevents the worker from fixing the permissions</span>
<span id="cb46-5">    # on the mounted folders, so when removing this make sure the folders have the correct UID/GID</span>
<span id="cb46-6">    # (1000:1000 by default)</span></code></pre></div>
<p>So apparently, authentik expects to exist as user 1000 and group 1000, and not anything else. Thankfully, podman has a special userns mode, to map a UID/GID inside the container to a different host user:</p>
<div class="sourceCode" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb47-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Create relevant podman pod  </span></span>
<span id="cb47-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">containers.podman.podman_pod</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb47-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> authentik_pod</span></span>
<span id="cb47-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">recreate</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb47-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    # userns: host</span></span>
<span id="cb47-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">userns</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> keep-id:uid=1000,gid=1000</span></span>
<span id="cb47-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">state</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> started</span></span>
<span id="cb47-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    ......</span></span></code></pre></div>
<p>After this, it works. But I’m still not satisfied. Postgres keeps on changing the permissions of it’s own bind mount.</p>
<p>According to the <a href="https://hub.docker.com/_/postgres">docker library page for postgres</a> (from Arbitrary –user Notes):</p>
<blockquote class="blockquote">
<p>The main caveat to note is that postgres doesn’t care what UID it runs as (as long as the owner of /var/lib/postgresql/data matches), but initdb does care (and needs the user to exist in /etc/passwd):</p>
</blockquote>
<p>It then offers three ways to get around this, and one way is to use the <code>--user</code> flag, in docker. Red Hat has an <a href="https://www.redhat.com/sysadmin/user-flag-rootless-containers">article mentioning that this exists in podman as well</a>. It didn’t work.</p>
<p>I did <a href="https://github.com/containers/crun/issues/396">some more research</a> into why it is not possible for there to be a different usernamespace mapping for each container in a pod, and the short version is that containers within a pod need to be in the same user namespace in order for them to interact with eachother properly, like networking.</p>
<p>I made a Dockerfile for postgres, adding the authentik user to the container:</p>
<div class="sourceCode" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode Dockerfile code-with-copy"><code class="sourceCode dockerfile"><span id="cb48-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">FROM</span> docker.io/library/postgres:12-alpine</span>
<span id="cb48-2"></span>
<span id="cb48-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"authentik:x:1000:1000::/authentik:/usr/sbin/nologin"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /etc/passwd</span></code></pre></div>
<p>It still chowns/chmods the whole directory to be 700, but that’s okay. Apparently, this is intended behavior, hardcoded, and <a href="https://github.com/postgres/postgres/blob/d42294fc00da4b97d04ddb4401b76295e8d86816/src/backend/postmaster/postmaster.c#L1539">postgres refuses to start if file permissions are not 700</a>. It’s required that the user running postgres, exclusively owns the postgres data folders.</p>
<p>But now file permissions are correct at least, and the user in the container is mapped to the user outside the container, enabling the directory to be manipulated properly (backed up, restored, etc) outside of the container.</p>
<p>However, I still get another error. Even with a fresh authentik deployment, the <code>authentik_worker</code> container gives an error:</p>
<div class="sourceCode" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb49-1">Traceback (most recent call last):</span>
<span id="cb49-2">  File "/lifecycle/migrate.py", line 98, in &lt;module&gt;</span>
<span id="cb49-3">    migration.run()</span>
<span id="cb49-4">  File "/lifecycle/system_migrations/tenant_to_brand.py", line 25, in run</span>
<span id="cb49-5">    self.cur.execute(SQL_STATEMENT)</span>
<span id="cb49-6">  File "/ak-root/venv/lib/python3.12/site-packages/psycopg/cursor.py", line 732, in execute</span>
<span id="cb49-7">    raise ex.with_traceback(None)</span>
<span id="cb49-8">psycopg.errors.DuplicateTable: relation "authentik_brands_brand" already exists</span>
<span id="cb49-9"></span>
<span id="cb49-10">During handling of the above exception, another exception occurred:</span>
<span id="cb49-11"></span>
<span id="cb49-12">Traceback (most recent call last):</span>
<span id="cb49-13">  File "&lt;frozen runpy&gt;", line 198, in _run_module_as_main</span>
<span id="cb49-14">  File "&lt;frozen runpy&gt;", line 88, in _run_code</span>
<span id="cb49-15">  File "/lifecycle/migrate.py", line 118, in &lt;module&gt;</span>
<span id="cb49-16">    release_lock(curr)</span>
<span id="cb49-17">  File "/lifecycle/migrate.py", line 67, in release_lock</span>
<span id="cb49-18">    cursor.execute("SELECT pg_advisory_unlock(%s)", (ADV_LOCK_UID,))</span>
<span id="cb49-19">  File "/ak-root/venv/lib/python3.12/site-packages/psycopg/cursor.py", line 732, in execute</span>
<span id="cb49-20">    raise ex.with_traceback(None)</span>
<span id="cb49-21">psycopg.errors.InFailedSqlTransaction: current transaction is aborted, commands ignored until end of transaction block</span></code></pre></div>
<p>I think this is because there is no container dependecies or the like set up, so the authentik_worker starts before postgres is finished doing it’s thing. To test, I deployed the databases first, and then started the worker and server containers. Sure enough, authentik then deploys properly, without erroring.</p>
<p>To get around this, I need to add dependencies to my containers. To do that, I need to use podman’s systemd integration. Since it’s not appropriate for this section (since it will apply to many other services), I am continuing in podman systemd integration</p>
<section id="configuration" class="level3">
<h3 class="anchored" data-anchor-id="configuration">Configuration</h3>
<p>Yeah, there’s a lot of stuff to configure. Single-Sign-On is very, very complex.</p>
<p>I started out by adding a single user, my main user under Directory &gt; Users, called “moonpiedumplings”.</p>
<p>This user is usable via</p>
<section id="applications" class="level4">
<h4 class="anchored" data-anchor-id="applications">Applications</h4>
</section>
<section id="invitations" class="level4">
<h4 class="anchored" data-anchor-id="invitations">Invitations</h4>
<p>Authentik has a feature called “invitations”, where it can generate a one or multiple time usable link that people can use to self register.</p>
<p>The goal here is that <strong>all</strong> my users are stored within authentik, and no services have any local users. I can use invites to</p>
<p>Here are the docs on invitations: <a href="https://docs.goauthentik.io/docs/user-group-role/user/invitations" class="uri">https://docs.goauthentik.io/docs/user-group-role/user/invitations</a></p>
</section>
<section id="teraform" class="level4">
<h4 class="anchored" data-anchor-id="teraform">Teraform</h4>
<p>Authentik has a terraform provider: <a href="https://registry.terraform.io/providers/goauthentik/authentik/latest/docs" class="uri">https://registry.terraform.io/providers/goauthentik/authentik/latest/docs</a></p>
<p>But I don’t think I’m going to use it, as that’s yet another layer of complexity.</p>
</section>
</section>
</section>
<section id="forgejo" class="level2">
<h2 class="anchored" data-anchor-id="forgejo">Forgejo</h2>
<p>I started by finding forgejo’s docker installation guides: <a href="https://forgejo.org/docs/next/admin/installation-docker/" class="uri">https://forgejo.org/docs/next/admin/installation-docker/</a></p>
<p>However, there is another problem:</p>
<p>Although forgejo supports <a href="https://forgejo.org/docs/next/admin/installation-docker/#rootless">rootless</a>, it seems to expect a userid and groupid of 1000:1000, which is not the user I am running it as. Similar to Authentik, I will have to create the pod with userns mapping.</p>
<p>I basically copied the Authentik deployment, and got it deployed.</p>
<p><img src="https://moonpiedumplings.github.io/projects/build-server-3/images/openidforge.jpeg" class="img-fluid"></p>
<p>So it seems that, when forgejo is first created, the initial user that registrates will be the “admin” user, able to administrate the site. I can’t add the oauth2 from the openid.</p>
<p>I created an admin account, and am given an interface to add an oauth2 provider, but I’m wondering if there is some way to do this via configuration files, instead of from the GUI.</p>
</section>
<section id="bitwardenvaultwarden" class="level2">
<h2 class="anchored" data-anchor-id="bitwardenvaultwarden">Bitwarden/Vaultwarden</h2>
<p>I want to self host a password manager, and I have selected <a href="https://github.com/dani-garcia/vaultwarden">vaultwarden</a>, the open source version of bitwarden.</p>
<p>Like other services, I don’t want vaultwarden to have any of it’s own users, and instead to connect to Authentik via LDAP or Oauth2.</p>
<p>However, I quickly realized a problem: Password managers (when properly architectured), encrypt the password database via a master password… if Vaultwarden is authneticating users via LDAP, then how will it get the master password?</p>
<p>I found a few solutions</p>
<ul>
<li><a href="https://github.com/dani-garcia/vaultwarden/wiki/Syncing-users-from-LDAP" class="uri">https://github.com/dani-garcia/vaultwarden/wiki/Syncing-users-from-LDAP</a></li>
</ul>
<p>This seems more doable, but it doesn’t sync passwords, merely automates invites to vaultwarden.</p>
<ul>
<li><a href="https://github.com/bitwarden/directory-connector" class="uri">https://github.com/bitwarden/directory-connector</a></li>
</ul>
<p>I don’t understand how this software works fully yet, but it seems ot sync vaultwarden users with LDAP.</p>
<p>Here are some docs: <a href="https://bitwarden.com/help/ldap-directory/" class="uri">https://bitwarden.com/help/ldap-directory/</a></p>
<p>This seems to a be better, but more complex to use. I think it syncs passwords as well, but I don’t know yet.</p>
</section>
</section>
<section id="presearch-for-future-pieces" class="level1">
<h1>Presearch for future pieces</h1>
<section id="kubernetes" class="level2">
<h2 class="anchored" data-anchor-id="kubernetes">Kubernetes</h2>
<p>()</p>
<div class="sourceCode" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb50-1">podmaner@thoth:~$ podman kube generate authentik_pod</span>
<span id="cb50-2">spec:</span>
<span id="cb50-3">  automountServiceAccountToken: false</span>
<span id="cb50-4">  containers:</span>
<span id="cb50-5">  ....</span>
<span id="cb50-6">  ....</span>
<span id="cb50-7">  hostUsers: false</span>
<span id="cb50-8">  hostname: authentik_pod</span>
<span id="cb50-9"> </span></code></pre></div>
<p>This isn’t quite right. <code>hostUsers: false</code> means to <em>not</em> use user namespaces, which I am using right now in podman. See the [kubernetes docs]</p>
</section>
<section id="openstack-notes" class="level2">
<h2 class="anchored" data-anchor-id="openstack-notes">Openstack Notes</h2>
<p>I will probably get to this later on.</p>
<p>Rather than trying to do an openstack native implemenation of a public ipv6 addresses for virtual machines on a private ip address, I can simply have my router set up a “private” ipv6 subnet, and then VPN (or an <a href="https://en.wikipedia.org/wiki/Layer_2_Tunneling_Protocol">L2TP</a>, which does not come with encryption). Then, I can do a 1 to 1 NAT, or something of the sort, but without any address translation. By putting VM’s on this subnet, I can give them public ipv6 addresses. This is simpler, and compatible with more than just openstack.</p>
<p>Something like this is definitely possible.</p>
<p><a href="https://superuser.com/questions/887745/routing-a-particular-subnet-into-a-vpn-tunnel" class="uri">https://superuser.com/questions/887745/routing-a-particular-subnet-into-a-vpn-tunnel</a></p>
<p><a href="https://serverfault.com/questions/608517/how-to-route-traffic-from-private-network-to-openvpn-subnet-and-back" class="uri">https://serverfault.com/questions/608517/how-to-route-traffic-from-private-network-to-openvpn-subnet-and-back</a></p>
<p><a href="https://superuser.com/questions/1162231/route-public-subnet-over-vpn" class="uri">https://superuser.com/questions/1162231/route-public-subnet-over-vpn</a></p>


</section>
</section>

 ]]></description>
  <category>linux</category>
  <guid>https://moonpiedumplings.github.io/projects/build-server-3/</guid>
  <pubDate>Wed, 17 Jan 2024 08:00:00 GMT</pubDate>
</item>
<item>
  <title>Packaging quarto using nix</title>
  <link>https://moonpiedumplings.github.io/projects/quarto-via-nix/</link>
  <description><![CDATA[ 




<section id="update-2024-1-15" class="level1">
<h1>Update 2024-1-15</h1>
<p>Bug. See here: <a href="https://github.com/NixOS/nixpkgs/issues/256074" class="uri">https://github.com/NixOS/nixpkgs/issues/256074</a></p>
<p>Because of this, I returned to the vendored version of pandoc to fix this:</p>
<details>
<summary>
Show code
</summary>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode nix code-with-copy"><code class="sourceCode nix"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span></span>
<span id="cb1-2">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> &lt;nixpkgs&gt; <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{};</span></span>
<span id="cb1-3"></span>
<span id="cb1-4">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">python3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.python311<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-5">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pythonDeps</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> ps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> </span>
<span id="cb1-6">        jupyter <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#notebook qtconsole jupyter_console</span></span>
<span id="cb1-7">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># nbconvert</span></span>
<span id="cb1-8">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ipykernel ipywidgets</span></span>
<span id="cb1-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># matplotlib</span></span>
<span id="cb1-10">        pip</span>
<span id="cb1-11"></span>
<span id="cb1-12">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb1-13">     <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">quarto</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.quarto.overrideAttrs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">oldAttrs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rec</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-14">         <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">preFixup</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb1-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          wrapProgram $out/bin/quarto \</span></span>
<span id="cb1-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            --prefix PATH : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>pkgs.lib.makeBinPath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> pkgs.deno <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> \</span></span>
<span id="cb1-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            --prefix QUARTO_ESBUILD : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>pkgs.esbuild<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin/esbuild \</span></span>
<span id="cb1-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            --prefix QUARTO_DART_SASS : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>pkgs.dart<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>sass<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin/dart-sass \</span></span>
<span id="cb1-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            --prefix QUARTO_PYTHON : "</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>pkgs.python3.withPackages pythonDeps<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin/python3" \</span></span>
<span id="cb1-20"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          ''</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-21">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">installPhase</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb1-22"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            runHook preInstall</span></span>
<span id="cb1-23"></span>
<span id="cb1-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            mkdir -p $out/bin $out/share</span></span>
<span id="cb1-25"></span>
<span id="cb1-26"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            mv bin/* $out/bin</span></span>
<span id="cb1-27"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            mv share/* $out/share</span></span>
<span id="cb1-28"></span>
<span id="cb1-29"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            runHook postInstall</span></span>
<span id="cb1-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        ''</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-31">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb1-32"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span></span>
<span id="cb1-33">    pkgs.mkShell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-34">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PYTHONPATH</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>pkgs.python3.withPackages pythonDeps<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin/python3"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-35">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">QUARTO_PYTHON</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>pkgs.python3.withPackages pythonDeps<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin/python3"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-36">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">QUARTO_PANDOC</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>quarto<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin/tools/pandoc"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-37">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> pkgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> </span>
<span id="cb1-38">            nodePackages_latest.npm</span>
<span id="cb1-39">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>python3.withPackages pythonDeps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb1-40">            quarto</span>
<span id="cb1-41">            texlive.combined.scheme-full</span>
<span id="cb1-42">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb1-43">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</details>
<p>And with this, this little bug is fixed.</p>
<p>However, there is another issue where quarto does not properly detect the version of jupyter installed in the nix environment.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1">[nix-shell:~/vscode/moonpiedumplings.github.io]$ quarto check</span>
<span id="cb2-2"></span>
<span id="cb2-3">....</span>
<span id="cb2-4"></span>
<span id="cb2-5">[✓] Checking Python 3 installation....OK</span>
<span id="cb2-6">      Version: 3.11.6</span>
<span id="cb2-7">      Path: /nix/store/aa115421digfydv0j6w1ad33f822z2sz-python3-3.11.6-env/bin/python3.11</span>
<span id="cb2-8">      Jupyter: (None)</span>
<span id="cb2-9"></span>
<span id="cb2-10">      Jupyter is not available in this Python installation.</span>
<span id="cb2-11">      Install with python3 -m pip install jupyter</span></code></pre></div>
<p>Despite the fact that it is installed.</p>
<p>Despite the fact that it is installed.</p>
<p>Nevermind, after updating my nixpkgs, this issue was fixed:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb3-1">[✓] Checking Python 3 installation....OK</span>
<span id="cb3-2">      Version: 3.11.7</span>
<span id="cb3-3">      Path: /nix/store/37hbd3y9qfv6nfqg5rh4r27kxlfwrnx5-python3-3.11.7-env/bin/python3.11</span>
<span id="cb3-4">      Jupyter: 5.7.1</span>
<span id="cb3-5">      Kernels: python3</span></code></pre></div>
</section>
<section id="quarto-and-pandoc-were-updated-in-nixpkgs" class="level1">
<h1>Quarto and pandoc were updated in nixpkgs!</h1>
<p>I’ve been following the <a href="https://matrix.to/#/#haskell:nixos.org">matrix channel for haskell and nixpkgs</a>, and they’ve been working on this for some time now, since I first wrote this article. But recently, they updated the relevant haskell packages, and the quarto version in nixpkgs-unstable is now the latest version.</p>
</section>
<section id="original-article-below" class="level1">
<h1>Original Article Below</h1>
<p>Skip to the conclusion if you want to know how to use the efforts of my hard work, although it only works on x86_64 linux.</p>
</section>
<section id="what-is-quarto" class="level1">
<h1>What is quarto?</h1>
<p>To explain quarto, I first have to explain jupyter notebooks, and quarto’s predecessor, fastpages.</p>
<p><a href="https://github.com/fastai/fastpages">Fastpages</a> is a blogging platform built on jekyll, a static site generator. Static sites are websites that do not connect to a backend server, the user’s browser does all the rendering. Static site generators do all the hard work of creating these, by converting a very human readable format, like markdown, to pretty looking html, which is what browsers render.</p>
<p>Fastpages adds onto the features of jekyll, by adding support for jupyter notebooks. Jupyter is a technology that allows users to combine code, multimedia, and text into a single document, for any purposes that one might use it. It’s usually popular for data science, as code is used to generate diagrams, but I really like it for testing snippets of code, as you can have multiple pieces of code in one document, and then run and debug them independently of eachother. Fastpagess can convert all of this, even automatically running code and creating any interactive elements, and then putting it all up on the internet as a static site.</p>
<p>Fastpages is also deprecated. On the github page, which is archived, it recommends you switch to quarto.</p>
<p>Quarto adds more features on top of fastpages, while also removing some features. Fastpages is primarily designed for blogging, whereas quarto also has support for generating books, pdf’s, and websites.</p>
<p>However, quarto lacks some features, as it uses it’s own static site generator, rather than jekyll. The biggest and most noticable one, is the Liquid template language that my computer science teacher uses to dynamically render his schedule page.</p>
<p>But for my purposes, quarto works fine. This blogpost you are reading, was generated using quarto.</p>
</section>
<section id="what-is-nix" class="level1">
<h1>What is nix?</h1>
<p>Nix is multiple things. Nix is a linux distribution, an package repository, a package manager, a programming language, and a configuration as code system.</p>
<p>Right now, I am trying to use it as a package manager — specifically, to give myself the quarto tool.</p>
<p>I’ve selected nix because it focuses on reproducible builds, across Mac, and Linux and x86_64, and arm64. This enables a multitude of devices to get packages with an identical configuration to me.</p>
</section>
<section id="using-nix" class="level1">
<h1>Using Nix</h1>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode nix code-overflow-wrap code-with-copy"><code class="sourceCode nix"><span id="cb4-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> &lt;nixpkgs&gt; <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> :</span>
<span id="cb4-2">    pkgs.mkShell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-3">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> pkgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> python310Full quarto jupyter pandoc deno <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb4-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>This is a sample <code>shell.nix</code> file. If you run the <code>nix-shell</code> command line tool while in the same working directory, or using the filename as an argument, it will use this bit of nix code to create an shell environment for you.</p>
<p>Nix is a functional programming langauge. Unlike a language like python or java, where everything is an object, in nix, everything is a function. The colon <code>:</code> declares the arguments for a function. The <code>?</code> declares a default argument for the variable, pkgs, to be used in the function. This is important, because without this declarion, the program does now know where to get packages from.</p>
<p>The above shell.nix works great. However, it installs an older version of quarto, 1.2, as only an older version of quarto is packaged in the nixpkgs repository. I want the newest version, 1.3.</p>
<p>Here is the code used to create the quarto package, called a derivation:</p>
<details>
<summary>
Show derivation
</summary>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode nix code-overflow-wrap code-with-copy"><code class="sourceCode nix"><span id="cb5-1"></span>
<span id="cb5-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">stdenv</span></span>
<span id="cb5-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">lib</span></span>
<span id="cb5-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pandoc</span></span>
<span id="cb5-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">esbuild</span></span>
<span id="cb5-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">deno</span></span>
<span id="cb5-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">fetchurl</span></span>
<span id="cb5-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nodePackages</span></span>
<span id="cb5-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">rWrapper</span></span>
<span id="cb5-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">rPackages</span></span>
<span id="cb5-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">extraRPackages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span></span>
<span id="cb5-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">makeWrapper</span></span>
<span id="cb5-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">python3</span></span>
<span id="cb5-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">extraPythonPackages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> ps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span></span>
<span id="cb5-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>:</span>
<span id="cb5-16"></span>
<span id="cb5-17">stdenv.mkDerivation <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rec</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-18">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pname</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"quarto"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-19">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">version</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1.2.475"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-20">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">src</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fetchurl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-21">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/quarto-dev/quarto-cli/releases/download/v</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/quarto-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-linux-amd64.tar.gz"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-22">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sha256</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sha256-oyKjDlTKt2fIzirOqgNRrpuM7buNCG5mmgIztPa28rY="</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-23">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb5-24"></span>
<span id="cb5-25">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nativeBuildInputs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb5-26">    makeWrapper</span>
<span id="cb5-27">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb5-28"></span>
<span id="cb5-29">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">patches</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb5-30">    <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">./fix-deno-path.patch</span></span>
<span id="cb5-31">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb5-32"></span>
<span id="cb5-33">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">postPatch</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb5-34"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    # Compat for Deno &gt;=1.26</span></span>
<span id="cb5-35"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    substituteInPlace bin/quarto.js \</span></span>
<span id="cb5-36"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      --replace 'Deno.setRaw(stdin.rid, ' 'Deno.stdin.setRaw(' \</span></span>
<span id="cb5-37"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      --replace 'Deno.setRaw(Deno.stdin.rid, ' 'Deno.stdin.setRaw('</span></span>
<span id="cb5-38"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  ''</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-39"></span>
<span id="cb5-40">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dontStrip</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-41"></span>
<span id="cb5-42">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">preFixup</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb5-43"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    wrapProgram $out/bin/quarto \</span></span>
<span id="cb5-44"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      --prefix PATH : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>lib.makeBinPath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> deno <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> \</span></span>
<span id="cb5-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      --prefix QUARTO_PANDOC : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>pandoc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin/pandoc \</span></span>
<span id="cb5-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      --prefix QUARTO_ESBUILD : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>esbuild<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin/esbuild \</span></span>
<span id="cb5-47"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      --prefix QUARTO_DART_SASS : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>nodePackages.sass<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin/sass \</span></span>
<span id="cb5-48"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      --prefix QUARTO_R : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>rWrapper.override <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> rPackages.rmarkdown <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span> extraRPackages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin/R \</span></span>
<span id="cb5-49"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      --prefix QUARTO_PYTHON : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>python3.withPackages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> ps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> jupyter ipython <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>extraPythonPackages ps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin/python3</span></span>
<span id="cb5-50"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  ''</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-51"></span>
<span id="cb5-52">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">installPhase</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb5-53"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      runHook preInstall</span></span>
<span id="cb5-54"></span>
<span id="cb5-55"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      mkdir -p $out/bin $out/share</span></span>
<span id="cb5-56"></span>
<span id="cb5-57"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      rm -r bin/tools</span></span>
<span id="cb5-58"></span>
<span id="cb5-59"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      mv bin/* $out/bin</span></span>
<span id="cb5-60"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      mv share/* $out/share</span></span>
<span id="cb5-61"></span>
<span id="cb5-62"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      runHook preInstall</span></span>
<span id="cb5-63"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  ''</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-64"></span>
<span id="cb5-65">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">meta</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> lib<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-66">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">description</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Open-source scientific and technical publishing system built on Pandoc"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-67">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">longDescription</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb5-68"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        Quarto is an open-source scientific and technical publishing system built on Pandoc.</span></span>
<span id="cb5-69"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        Quarto documents are authored using markdown, an easy to write plain text format.</span></span>
<span id="cb5-70"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    ''</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-71">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">homepage</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://quarto.org/"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-72">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">changelog</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/quarto-dev/quarto-cli/releases/tag/v</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-73">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">license</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> licenses.gpl2Plus<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-74">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">maintainers</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> maintainers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> mrtarantoga <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb5-75">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">platforms</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x86_64-linux"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb5-76">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sourceProvenance</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> sourceTypes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> binaryNativeCode binaryBytecode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb5-77">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb5-78"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</details>
<p>I don’t want to bore you with details, but in short, it downloads an older version of quarto than the newest.</p>
</section>
<section id="packaging-quarto" class="level1">
<h1>Packaging quarto</h1>
<p>Nix is very poorly documented. The recommended way of getting help with nix is to ask for help on the discord. So that is what I did. The first thing I asked was how to get a newer version of quarto:</p>
<p>I started out by asking how to update the version of the quarto package. I started out to do so on my own, by cloning the nixpkgs github repo, and attempting to build nixpkgs, but I couldn’t figure out how to build it at first, which is when I asked.</p>
<p><img src="https://moonpiedumplings.github.io/projects/quarto-via-nix/quartodiscord/firstask.png" class="img-fluid"></p>
<p>Which didn’t work, because I did not want to download the whole nixpkgs. I wanted to store the nix derivation to build. The answer: use an ovveride:</p>
<p>I was then told to use the overrideAttrs function, which overrides specific attributes, essentially variables, of the derivation, another type of function, used to build the program.</p>
<p>My first attempt was not too good.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode nix code-overflow-wrap code-with-copy"><code class="sourceCode nix"><span id="cb6-1"></span>
<span id="cb6-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> &lt;nixpkgs&gt; <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> :</span>
<span id="cb6-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> </span>
<span id="cb6-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">quarto</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.quarto.overrideAttrs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">oldAttrs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rec</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-5">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">version</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1.3.361"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb6-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span></span>
<span id="cb6-8">    pkgs.mkShell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-9">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> pkgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> python310Full quarto jupyter pandoc deno mkpasswd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb6-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>A simple shell.nix that replaced the <code>version</code> attribute of quarto. I shared this excitedly, thinking I had figured this out on my own, only to be told that this change was purely cosmetic, and the new version of quarto wasn’t actually installed. And they were right.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode default code-overflow-wrap code-with-copy"><code class="sourceCode default"><span id="cb7-1">[nix-shell:~/vscode/quartotest]$ which quarto</span>
<span id="cb7-2">/nix/store/9qy0kpll3r755c6i0717405dilhffdrd-quarto-1.3.361/bin/quarto</span></code></pre></div>
<p>It looks right, until you check deeper:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode default code-overflow-wrap code-with-copy"><code class="sourceCode default"><span id="cb8-1">[nix-shell:~/vscode/quartotest]$ quarto --version</span>
<span id="cb8-2">1.2.475</span></code></pre></div>
<p>So a deeper override was needed. I needed to override the <code>src</code> attribute, which determines where to download the files used to package the application.</p>
<details>
<summary>
Second attempt!
</summary>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode nix code-overflow-wrap code-with-copy"><code class="sourceCode nix"><span id="cb9-1"></span>
<span id="cb9-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> &lt;nixpkgs&gt; <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> :</span>
<span id="cb9-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> </span>
<span id="cb9-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">quarto</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.quarto.overrideAttrs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">oldAttrs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rec</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb9-5">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">version</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1.3.361"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-6">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">src</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fetchurl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb9-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/quarto-dev/quarto-cli/releases/download/v</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/quarto-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-linux-amd64.tar.gz"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-8">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sha256</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sha256-VEYUEI4xzQPXlyTbCThAW2npBCZNPDJ5x2cWnkNz7RE="</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-9">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb9-10">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb9-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span></span>
<span id="cb9-12">    pkgs.mkShell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb9-13">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> pkgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> python310Full quarto jupyter pandoc deno mkpasswd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb9-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</details>
<p>But this errored as well.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode default code-overflow-wrap code-with-copy"><code class="sourceCode default"><span id="cb10-1">~/vscode/quartotest master !4 ?1 ❯ nix-shell                                                                                                                         2m 56s</span>
<span id="cb10-2">error: undefined variable 'fetchurl'</span>
<span id="cb10-3"></span>
<span id="cb10-4">       at /home/moonpie/vscode/quartotest/shell.nix:5:19:</span>
<span id="cb10-5"></span>
<span id="cb10-6">            4|             version = "1.3.361";</span>
<span id="cb10-7">            5|             src = fetchurl {</span>
<span id="cb10-8">             |                   ^</span>
<span id="cb10-9">            6|     url = "https://github.com/quarto-dev/quarto-cli/releases/download/v${version}/quarto-${version}-lin</span></code></pre></div>
<p>I was confused? Why did this error? I had copied exactly what was in the derivation used to build the package?</p>
<p>Later, I figured out why. When a package is built, the dependencies are declared in the beginning of the package:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode nix code-overflow-wrap code-with-copy"><code class="sourceCode nix"><span id="cb11-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> </span>
<span id="cb11-2">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Dependencies_Here</span></span>
<span id="cb11-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> : stdenv.mkDerivation.restofpackage</span></code></pre></div>
<p>In nix, every single thing is a function. When creation a function in nix, the curly brackets before the function declare the arguments that the function will take:</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode nix code-overflow-wrap code-with-copy"><code class="sourceCode nix"><span id="cb12-1">function = <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">arg1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">arg2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> : functionhere</span></code></pre></div>
<p>But when creating a package, this syntax plays another role. The arguments of the function act as a dependency list, by declaring what packages are necessary to build the derivation. This prevents the build from being tainted by anything that is not explicitly declared. However, because overrides are not the same as derivations, they act differently.</p>
<p>But to get around this error when using the override function:</p>
<details>
<summary>
Success!
</summary>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode nix code-overflow-wrap code-with-copy"><code class="sourceCode nix"><span id="cb13-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> &lt;nixpkgs&gt; <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> :</span>
<span id="cb13-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> </span>
<span id="cb13-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">quarto</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.quarto.overrideAttrs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">oldAttrs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rec</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb13-4">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">version</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1.3.361"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-5">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">src</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.fetchurl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb13-6">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/quarto-dev/quarto-cli/releases/download/v</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/quarto-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-linux-amd64.tar.gz"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sha256</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sha256-vvnrIUhjsBXkJJ6VFsotRxkuccYOGQstIlSNWIY5nuE="</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-8">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb13-9">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb13-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span></span>
<span id="cb13-11">    pkgs.mkShell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb13-12">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> pkgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> python310Full quarto jupyter pandoc deno mkpasswd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb13-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</details>
<p>And it worked:</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode default code-overflow-wrap code-with-copy"><code class="sourceCode default"><span id="cb14-1">[nix-shell:/tmp/test]$ quarto --version</span>
<span id="cb14-2">1.3.361</span></code></pre></div>
<p>Except it didn’t. When I actually tried to render my project:</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode default code-overflow-wrap code-with-copy"><code class="sourceCode default"><span id="cb15-1">[nix-shell:~/vscode/quartotest]$ quarto render</span>
<span id="cb15-2">[1/4] about.qmd</span>
<span id="cb15-3">Could not find data file templates/styles.citations.html</span></code></pre></div>
<p>Since this file couldn’t be found on my system, I tried to find it on the internet.</p>
<p>And find it I did, in the data-files section of the <a href="https://hackage.haskell.org/package/pandoc-3.1/pandoc.cabal">information about the pandoc 3.1 package</a></p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode default code-overflow-wrap code-with-copy"><code class="sourceCode default"><span id="cb16-1">data-files:</span>
<span id="cb16-2">                 -- templates</span>
<span id="cb16-3">                 data/templates/styles.html</span>
<span id="cb16-4">                 data/templates/styles.citations.html</span></code></pre></div>
<p>First, I checked what version of the pandoc that Nix had in their repositories. They only had 2.1.9, which was too old for the version of quarto I had.</p>
<p>But just in case, <a href="https://github.com/quarto-dev/quarto-cli/discussions/5754">I asked on the github discussions page for quarto</a>. And yes, quarto 1.3, the version I wanted, did require pandoc 3.0, which nix did not have packaged.</p>
<p>Except it did, although the package wasn’t in the dependencies. So I first tried to install it independently, using the <code>nix-shell -p package tool</code></p>
<details>
<summary>
Except I got an error
</summary>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode default code-overflow-wrap code-with-copy"><code class="sourceCode default"><span id="cb17-1">~/vscode/test ❯ nix-shell -p haskellPackages.pandoc_3_1_2</span>
<span id="cb17-2">this derivation will be built:</span>
<span id="cb17-3">  /nix/store/63pnk32wsdczfk3nkl071w9y69yy5wmi-pandoc-3.1.2.drv</span>
<span id="cb17-4">building '/nix/store/63pnk32wsdczfk3nkl071w9y69yy5wmi-pandoc-3.1.2.drv'...</span>
<span id="cb17-5">setupCompilerEnvironmentPhase</span>
<span id="cb17-6">Build with /nix/store/4wjl91hrizxghwqy18a1337gq2y9mh40-ghc-9.2.7.</span>
<span id="cb17-7">unpacking sources</span>
<span id="cb17-8">unpacking source archive /nix/store/7ncxphrr3nff9jb3j4w9ksl6ggznqhm6-pandoc-3.1.2.tar.gz</span>
<span id="cb17-9">source root is pandoc-3.1.2</span>
<span id="cb17-10">setting SOURCE_DATE_EPOCH to timestamp 1000000000 of file pandoc-3.1.2/xml-light/Text/Pandoc/XML/Light/Types.hs</span>
<span id="cb17-11">patching sources</span>
<span id="cb17-12">compileBuildDriverPhase</span>
<span id="cb17-13">setupCompileFlags: -package-db=/build/tmp.yaRUozaznX/setup-package.conf.d -j16 +RTS -A64M -RTS -threaded -rtsopts</span>
<span id="cb17-14">[1 of 1] Compiling Main             ( /nix/store/4mdp8nhyfddh7bllbi7xszz7k9955n79-Setup.hs, /build/tmp.yaRUozaznX/Main.o )</span>
<span id="cb17-15">Linking Setup ...</span>
<span id="cb17-16">configuring</span>
<span id="cb17-17">configureFlags: --verbose --prefix=/nix/store/7983f3r6gpgvf17dn1k2c05wma708xdn-pandoc-3.1.2 --libdir=$prefix/lib/$compiler --libsubdir=$abi/$libname --datadir=/nix/store/zdc55i48g6hpbwckiwk6s6iraf30hh99-pandoc-3.1.2-data/share/ghc-9.2.7 --with-gcc=gcc --package-db=/build/tmp.yaRUozaznX/package.conf.d --ghc-options=-j16 +RTS -A64M -RTS --disable-split-objs --enable-library-profiling --profiling-detail=exported-functions --disable-profiling --enable-shared --disable-coverage --enable-static --disable-executable-dynamic --enable-tests --disable-benchmarks --enable-library-vanilla --disable-library-for-ghci --ghc-option=-split-sections -f-trypandoc --extra-lib-dirs=/nix/store/4g9phbpakh51bbw2n391vipz9r5z56kw-ncurses-6.4/lib --extra-lib-dirs=/nix/store/mnq0hqsqivdbaqzmzc287l0z9zw8dp15-libffi-3.4.4/lib --extra-lib-dirs=/nix/store/0ssnwyy41aynhav7jr4dz1y01lfzi86f-gmp-with-cxx-6.2.1/lib</span>
<span id="cb17-18">Using Parsec parser</span>
<span id="cb17-19">Configuring pandoc-3.1.2...</span>
<span id="cb17-20">Setup: Encountered missing or private dependencies:</span>
<span id="cb17-21">doctemplates &gt;=0.11 &amp;&amp; &lt;0.12,</span>
<span id="cb17-22">gridtables &gt;=0.1 &amp;&amp; &lt;0.2,</span>
<span id="cb17-23">jira-wiki-markup &gt;=1.5.1 &amp;&amp; &lt;1.6,</span>
<span id="cb17-24">mime-types &gt;=0.1.1 &amp;&amp; &lt;0.2,</span>
<span id="cb17-25">pandoc-types &gt;=1.23 &amp;&amp; &lt;1.24,</span>
<span id="cb17-26">texmath &gt;=0.12.7 &amp;&amp; &lt;0.13</span>
<span id="cb17-27"></span>
<span id="cb17-28">error: builder for '/nix/store/63pnk32wsdczfk3nkl071w9y69yy5wmi-pandoc-3.1.2.drv' failed with exit code 1</span></code></pre></div>
</details>
<p>Except all the dependencies that the error message wanted, existed in nixpkgs.</p>
<p>Here’s <a href="https://search.nixos.org/packages?channel=22.11&amp;show=haskellPackages.doctemplates_0_10_0_2&amp;from=0&amp;size=50&amp;sort=relevance&amp;type=packages&amp;query=doctemplates">doctemplates</a></p>
<p>Here’s <a href="https://search.nixos.org/packages?channel=22.11&amp;show=haskellPackages.doctemplates_0_10_0_2&amp;from=0&amp;size=50&amp;sort=relevance&amp;type=packages&amp;query=doctemplates">gridtables</a></p>
<p>And so on. It was like, even though pandoc required these packages, it couldn’t see them. They all had the format packagename_version, as opposed to simply packagename, which would be an older package.</p>
<p>So I asked on discord, again.</p>
<p><img src="https://moonpiedumplings.github.io/projects/quarto-via-nix/quartodiscord/pandocnobbzintro.png" class="img-fluid"></p>
<p>This one user, NobbZ, helps people so much that people joke that he <em>is</em> the documentation.</p>
<p>I tried their solution, and it didn’t work. Apparently, this solution was designed for the newer feature of nix, flakes, which I wasn’t using.</p>
<p>But with some adjustment, I managed to figure out how to use the <code>override</code> feature on my own, with the same solution that NobbZ sent me seconds later:</p>
<details>
<summary>
Trying to get override working
</summary>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode nix code-overflow-wrap code-with-copy"><code class="sourceCode nix"><span id="cb18-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> &lt;nixpkgs&gt; <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> :</span>
<span id="cb18-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span></span>
<span id="cb18-3">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">quarto</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.quarto.overrideAttrs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">oldAttrs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rec</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-4">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">version</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1.3.361"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-5">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">src</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.fetchurl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-6">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/quarto-dev/quarto-cli/releases/download/v</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/quarto-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-linux-amd64.tar.gz"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-7">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sha256</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sha256-vvnrIUhjsBXkJJ6VFsotRxkuccYOGQstIlSNWIY5nuE="</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb18-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb18-10">   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* pandoc = pkgs.haskellPackages.callCabal2nix "pandoc" (fetchTarball {</span></span>
<span id="cb18-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        url = "https://github.com/jgm/pandoc/archive/refs/tags/3.1.2.tar.gz";</span></span>
<span id="cb18-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        sha256 = "1h928w4ghbxg5whq7d9nkrfll2abvmbkc45adfgv35rfhcpkiiv9";</span></span>
<span id="cb18-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    }) {};*/</span></span>
<span id="cb18-14">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">doctemplates</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.haskellPackages.doctemplates_0_11<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-15">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">gridtables</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.haskellPackages.gridtables_0_1_0_0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-16">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">jira-wiki-markup</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.haskellPackages.jira<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>wiki<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>markup_1_5_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-17">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">mime-types</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.haskellPackages.mime<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>types_0_1_1_0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-18">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pandoc-types</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.haskellPackages.pandoc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>types_1_23<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-19">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">texmath</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.haskellPackages.texmath_0_12_7_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-20">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pandoc</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.haskellPackages.pandoc_3_1_2.override <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">inherit</span> doctemplates gridtables jira-wiki-markup mime-types pandoc-types texmath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;};</span></span>
<span id="cb18-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span></span>
<span id="cb18-22">    pkgs.mkShell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-23">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> pkgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> python310Full quarto jupyter pandoc deno mkpasswd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb18-24">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</details>
<p>Except this errors:</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode default code-overflow-wrap code-with-copy"><code class="sourceCode default"><span id="cb19-1">Warning:</span>
<span id="cb19-2">    This package indirectly depends on multiple versions of the same package. This is very likely to cause a compile failure.</span>
<span id="cb19-3">      package http-client (http-client-0.7.13.1-52kzOBAMbxmJrzoQZgatPf) requires mime-types-0.1.0.9-Gdz1G1mhqziCfo3C8KZHz7</span>
<span id="cb19-4">      package pandoc (pandoc-3.1.2) requires mime-types-0.1.1.0-4FUch8wD40c6kQtGdyJOSM</span>
<span id="cb19-5">      package texmath (texmath-0.12.7.1-BbrGid5okuSI4hfeGBAcF8) requires pandoc-types-1.22.2.1-1cCcarshT2W3DaxppqWytd</span>
<span id="cb19-6">      package commonmark-pandoc (commonmark-pandoc-0.2.1.3-OwUzhyyJ0cDzxfYXzbAci) requires pandoc-types-1.22.2.1-1cCcarshT2W3DaxppqWytd</span>
<span id="cb19-7">      package citeproc (citeproc-0.8.1-LP74PTBZCEoHiNCfXfUYdM) requires pandoc-types-1.22.2.1-1cCcarshT2W3DaxppqWytd</span>
<span id="cb19-8">      package pandoc (pandoc-3.1.2) requires pandoc-types-1.23-AC7tSm0fcRIGMZsmro9kaK</span>
<span id="cb19-9">      package pandoc (pandoc-3.1.2) requires pandoc-types-1.23-AC7tSm0fcRIGMZsmro9kaK</span>
<span id="cb19-10">** abort because of serious configure-time warning from Cabal</span>
<span id="cb19-11">error: builder for '/nix/store/ibawyigbdn9bs1gs9hc0mgzqraqfxhy0-pandoc-3.1.2.drv' failed with exit code 1</span></code></pre></div>
<p>Essentially, a dependency error. Doctemplates also required a package that wasn’t under the default of <code>packagename</code>, but rather <code>packagename_version</code>.</p>
<p>Another user proceeded to chime in with their solution:</p>
<details>
<summary>
See cdepillabout’s solution
</summary>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode nix code-overflow-wrap code-with-copy"><code class="sourceCode nix"><span id="cb20-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span></span>
<span id="cb20-2">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> &lt;nixpkgs&gt; <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{};</span></span>
<span id="cb20-3"></span>
<span id="cb20-4">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pandoc</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.haskellPackages.pandoc_3_1_2.overrideScope <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">hfinal</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">hprev</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-5">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">doctemplates</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.doctemplates_0_11<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-6">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">gridtables</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.gridtables_0_1_0_0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">jira-wiki-markup</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.jira<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>wiki<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>markup_1_5_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-8">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">mime-types</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.mime<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>types_0_1_1_0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-9">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pandoc-types</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.pandoc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>types_1_23<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-10">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">texmath</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.texmath_0_12_7_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-11">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb20-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span></span>
<span id="cb20-13">  pkgs.mkShell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-14">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>pandoc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb20-15">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</details>
<p>And this worked! Except it didn’t.</p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode default code-overflow-wrap code-with-copy"><code class="sourceCode default"><span id="cb21-1">[nix-shell:~/vscode/quartotest]$ pandoc</span>
<span id="cb21-2">bash: pandoc: command not found</span>
<span id="cb21-3"></span>
<span id="cb21-4">[nix-shell:~/vscode/quartotest]$ which pandoc</span>
<span id="cb21-5">which: no pandoc in (/nix/store/kbcrs84s1x8yd5bp1nq6q6ihda8nd2lp-bash-interactive-5.2-p15/bin:/nix/store/a9q4y7vw1fgs990bs5mpd3p50mc0iz27-python3-3.10.11/bin:/nix/store/nh8iz5l2zn5nbk19qxdw575a5fhfcajw-quarto-1.3.361/bin:/nix/store/ar2lzr4kr4pi1zgx3w8hl6fkny3bql53-python3.10-notebook-6.5.2/bin:/nix/store/ai5lxg5vzjsfk9zkyn65ndq81na2mm5c-python3.10-babel-2.12.1/bin:/nix/store/95cxzy2hpizr23343b8bskl4yacf4b3l-python3-3.10.11/bin:/nix/store/5ii8sm9yh01ny05bl1wjdv6pkdjb8bw0-python3.10-jupyter-core-5.2.0/bin:/nix/store/pkgr71n4dy7h9lp00paf6k3llfa95ig0-python3.10-Send2Trash-1.8.1b0/bin:/nix/store/x1kk4hlx0zl12igvr6v0pk2cq2720fbh-python3.10-jupyter_client-8.0.3/bin:/nix/store/9icvaw0dgk7258m564xlh513nz6xis1m-python3.10-nbformat-5.7.3/bin:/nix/store/6svh49hf9pq5hwavgyb642v5a0pjnn4a-python3.10-jsonschema-4.17.3/bin:/nix/store/15jn0r39wg0ripjzjfxj9arcv53qxck9-python3.10-nbclassic-0.5.2/bin:/nix/store/jjy30kw6pw2mq54ig6lrm84ds91a9snf-python3.10-ipython-8.11.0/bin:/nix/store</span></code></pre></div>
<p>Apparently, in pandoc 3.0, the binary and the library have been split into two seperate packages. In nixpkgs, the library can be found in the haskellPackages.pandoc_3_1_2, and the binary can be found in haskellPackages.pandoc-cli.</p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode default code-overflow-wrap code-with-copy"><code class="sourceCode default"><span id="cb22-1">nix-shell -p haskellPackages.pandoc-cli</span>
<span id="cb22-2"></span>
<span id="cb22-3">Setup: Encountered missing or private dependencies:</span>
<span id="cb22-4">doctemplates &gt;=0.11 &amp;&amp; &lt;0.12, pandoc &gt;=3.0</span>
<span id="cb22-5">...</span>
<span id="cb22-6">error: builder for '/nix/store/hzzqnffj08r9qc0xi3b4ydi7w91dn4m0-pandoc-server-0.1.drv' failed with exit code 1</span>
<span id="cb22-7">error: 1 dependencies of derivation '/nix/store/arbq7vgw539xyd4l0y5x3jyhhra30v91-pandoc-cli-0.1.1.drv' failed to build</span></code></pre></div>
<p>The pandoc-cli package is broken, for the exact same error that the pandoc library won’t compile for.</p>
<details>
<summary>
So I try my own override:
</summary>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode nix code-overflow-wrap code-with-copy"><code class="sourceCode nix"><span id="cb23-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> &lt;nixpkgs&gt; <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> :</span>
<span id="cb23-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span></span>
<span id="cb23-3">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">quarto</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.quarto.overrideAttrs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">oldAttrs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rec</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-4">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">version</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1.3.361"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-5">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">src</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.fetchurl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-6">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/quarto-dev/quarto-cli/releases/download/v</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/quarto-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-linux-amd64.tar.gz"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-7">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sha256</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sha256-vvnrIUhjsBXkJJ6VFsotRxkuccYOGQstIlSNWIY5nuE="</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb23-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb23-10">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pandoc</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.haskellPackages.pandoc_3_1_2.overrideScope <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">hfinal</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">hprev</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-11">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">doctemplates</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.doctemplates_0_11<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-12">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">gridtables</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.gridtables_0_1_0_0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-13">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">jira-wiki-markup</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.jira<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>wiki<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>markup_1_5_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-14">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">mime-types</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.mime<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>types_0_1_1_0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-15">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pandoc-types</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.pandoc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>types_1_23<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-16">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">texmath</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.texmath_0_12_7_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-17">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb23-18">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pandoc-cli</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.haskellPackages.pandoc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>cli.overrideScope <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">hfinal</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">hprev</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-19">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">hslua-core</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.hslua<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>core_2_3_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-20">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">lua</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.lua_2_3_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-21">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb23-22"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span></span>
<span id="cb23-23">    pkgs.mkShell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-24">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> pkgs.python310Full quarto pkgs.jupyter pandoc pandoc-cli pkgs.deno <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb23-25">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</details>
<p>But this also errors:</p>
<details>
<summary>
Show error
</summary>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode default code-overflow-wrap code-with-copy"><code class="sourceCode default"><span id="cb24-1">Using Parsec parser</span>
<span id="cb24-2">Configuring tasty-hslua-1.0.2...</span>
<span id="cb24-3"></span>
<span id="cb24-4">Setup: Encountered missing or private dependencies:</span>
<span id="cb24-5">hslua-core &gt;=2.0 &amp;&amp; &lt;2.3</span>
<span id="cb24-6"></span>
<span id="cb24-7">error: builder for '/nix/store/nmhz8xnc24xw86q573v515n3q8m9l0y5-tasty-hslua-1.0.2.drv' failed with exit code 1</span>
<span id="cb24-8">error: 1 dependencies of derivation '/nix/store/8q4ni7s2am50xbbbkcdjk85szyvq3jk8-hslua-2.2.1.drv' failed to build</span>
<span id="cb24-9">error: 1 dependencies of derivation '/nix/store/hcysycpqkqv4kd3qmkwzyi7pkaqszqyy-hslua-marshalling-2.2.1.drv' failed to build</span>
<span id="cb24-10">error: 1 dependencies of derivation '/nix/store/h4c32n03d305njipsiw4rzc8rq52l2bc-hslua-packaging-2.2.1.drv' failed to build</span>
<span id="cb24-11">error: 1 dependencies of derivation '/nix/store/y655vw1bdq8a9j818k16y7228nlsf86y-hslua-cli-1.4.1.drv' failed to build</span>
<span id="cb24-12">error: 1 dependencies of derivation '/nix/store/xkkp4cj1yfwjpczc6k7y08gxdqdbfh4n-pandoc-2.19.2.drv' failed to build</span>
<span id="cb24-13">error: 1 dependencies of derivation '/nix/store/sc44mnc1ngxfxi7h3f6qrrvnvldla4w3-pandoc-cli-0.1.1.drv' failed to build</span>
<span id="cb24-14">~/vscode/quartotest master !4 ?9 ❯                                                                                        </span></code></pre></div>
</details>
<p>But the hslua-core version I want was packaged in nixpkgs, similar to doctemplates, or gridtables. So I did a further override.</p>
<details open="">
<summary>
Show/hide
</summary>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode nix code-overflow-wrap code-with-copy"><code class="sourceCode nix"><span id="cb25-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> &lt;nixpkgs&gt; <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> :</span>
<span id="cb25-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span></span>
<span id="cb25-3">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">quarto</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.quarto.overrideAttrs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">oldAttrs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rec</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb25-4">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">version</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1.3.361"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-5">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">src</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.fetchurl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb25-6">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/quarto-dev/quarto-cli/releases/download/v</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/quarto-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-linux-amd64.tar.gz"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-7">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sha256</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sha256-vvnrIUhjsBXkJJ6VFsotRxkuccYOGQstIlSNWIY5nuE="</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb25-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb25-10">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pandoc</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.haskellPackages.pandoc_3_1_2.overrideScope <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">hfinal</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">hprev</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb25-11">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">doctemplates</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.doctemplates_0_11<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-12">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">gridtables</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.gridtables_0_1_0_0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-13">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">jira-wiki-markup</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.jira<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>wiki<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>markup_1_5_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-14">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">mime-types</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.mime<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>types_0_1_1_0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-15">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pandoc-types</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.pandoc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>types_1_23<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-16">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">texmath</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.texmath_0_12_7_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-17">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">tasty-hslua</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.tasty<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>hslua_1_1_0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-18">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">hslua-marshalling</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.hslua<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>marshalling_2_3_0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-19">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">hslua-aeson</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.hslua<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>aeson_2_3_0_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-20">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">hslua</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.hslua_2_3_0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-21">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb25-22">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pandoc-cli</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.haskellPackages.pandoc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>cli.overrideScope <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">hfinal</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">hprev</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb25-23">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">hslua-core</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.hslua<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>core_2_3_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-24">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">lua</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.lua_2_3_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-25">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">tasty-hslua</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.tasty<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>hslua_1_1_0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-26">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">hslua-marshalling</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.hslua<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>marshalling_2_3_0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-27">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">hslua-aeson</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.hslua<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>aeson_2_3_0_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-28">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">hslua</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.hslua_2_3_0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-29">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb25-30"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span></span>
<span id="cb25-31">    pkgs.mkShell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb25-32">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> pkgs.python310Full quarto pkgs.jupyter pandoc pandoc-cli pkgs.deno <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb25-33">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</details>
<p>Which still errors:</p>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode default code-overflow-wrap code-with-copy"><code class="sourceCode default"><span id="cb26-1">Using Parsec parser</span>
<span id="cb26-2">Configuring hslua-typing-0.1.0...</span>
<span id="cb26-3"></span>
<span id="cb26-4">Setup: Encountered missing or private dependencies:</span>
<span id="cb26-5">hslua-core &gt;=2.3 &amp;&amp; &lt;2.4, hslua-marshalling &gt;=2.3 &amp;&amp; &lt;2.4</span>
<span id="cb26-6"></span>
<span id="cb26-7">error: builder for '/nix/store/kbmfxjy0ycwwg6r6zsp9q9v1pfkmggnw-hslua-typing-0.1.0.drv' failed with exit code 1</span>
<span id="cb26-8">error: 1 dependencies of derivation '/nix/store/nj4smnyrkaf52qx98r1wa0r1gdnjbwxk-hslua-2.3.0.drv' failed to build</span></code></pre></div>
<p>I quickly realized, that the updated set of haskell packages in nixpkgs, is broken all the way down. I found a relevant <a href="https://github.com/NixOS/nixpkgs/issues/221165">github issue</a>. In this issue, somene had modified the derivation of the haskellPackages, to get pandoc-cli to work.</p>
<p>I used their fork of nixpkgs to give myself pandoc-cli.</p>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode default code-overflow-wrap code-with-copy"><code class="sourceCode default"><span id="cb27-1">~/vscode/quartotest master +3 !1 ❯ nix-shell -p haskellPackages.pandoc-cli -I nixpkgs=https://github.com/seam345/nixpkgs/archive/89e6e477c8357a087e863db562d2fa8d9fe5ba29.tar.gz</span>
<span id="cb27-2">[nix-shell:~/vscode/quartotest]$ pandoc --version</span>
<span id="cb27-3">pandoc 3.1</span>
<span id="cb27-4">Features: +server +lua</span>
<span id="cb27-5">Scripting engine: Lua 5.4</span>
<span id="cb27-6">User data directory: /home/moonpie/.local/share/pandoc</span>
<span id="cb27-7">Copyright (C) 2006-2023 John MacFarlane. Web:  https://pandoc.org</span>
<span id="cb27-8">This is free software; see the source for copying conditions. There is no</span>
<span id="cb27-9">warranty, not even for merchantability or fitness for a particular purpose.</span></code></pre></div>
<p>This actually worked, and I got pandoc-cli with the 3.0 version of pandoc. However, I couldn’t get quarto to use pandoc-cli rather than the normal pandoc version, so quarto still wasn’t working.</p>
<p>Later, cdepillabout chimed in again. Here is their solution:</p>
<details open="">
<summary>
Show/hide
</summary>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode nix code-overflow-wrap code-with-copy"><code class="sourceCode nix"><span id="cb28-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span></span>
<span id="cb28-2">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nixpkgs-src</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">fetchTarball</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb28-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># nixpkgs-unstable as of 2023-05-31</span></span>
<span id="cb28-4">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/NixOS/nixpkgs/archive/58c85835512b0db938600b6fe13cc3e3dc4b364e.tar.gz"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-5">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sha256</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0bkhaiaczj25s6hji2k9pm248jhfbiaqcfcsfk92bbi7kgzzzpif"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-6">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb28-7"></span>
<span id="cb28-8">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">my-overlay</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">final</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">prev</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb28-9"></span>
<span id="cb28-10">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pandoc_1_3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb28-11">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span></span>
<span id="cb28-12">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">inherit</span> (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">final</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">haskell</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">lib</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">compose</span>) <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">disableCabalFlag</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">markUnbroken</span>;</span>
<span id="cb28-13">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span></span>
<span id="cb28-14">      final.lib.pipe</span>
<span id="cb28-15">        final.haskellPackages.pandoc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>cli</span>
<span id="cb28-16">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb28-17">          markUnbroken</span>
<span id="cb28-18">          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>disableCabalFlag <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lua"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb28-19">          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">p</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> p.overrideScope <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">hfinal</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">hprev</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb28-20">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">doctemplates</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.doctemplates_0_11<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-21">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">gridtables</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.gridtables_0_1_0_0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-22">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">hslua-cli</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">null</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-23">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">jira-wiki-markup</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.jira<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>wiki<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>markup_1_5_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-24">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">mime-types</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.mime<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>types_0_1_1_0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-25">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pandoc</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.pandoc_3_1_2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-26">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pandoc-lua-engine</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">null</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-27">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pandoc-server</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> markUnbroken hprev.pandoc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>server<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-28">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pandoc-types</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.pandoc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>types_1_23<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-29">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">texmath</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hprev.texmath_0_12_7_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-30">          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}))</span></span>
<span id="cb28-31">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb28-32"></span>
<span id="cb28-33">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">quarto_1_3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb28-34">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span></span>
<span id="cb28-35">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">quarto-version</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1.3.361"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-36">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span></span>
<span id="cb28-37">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>final.quarto.override <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pandoc</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> final.pandoc_1_3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">})</span>.overrideAttrs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">oldAttrs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb28-38">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">version</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> quarto<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>version<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-39">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">src</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> final.fetchurl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb28-40">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/quarto-dev/quarto-cli/releases/download/v</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>quarto<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/quarto-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>quarto<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-linux-amd64.tar.gz"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-41">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sha256</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sha256-vvnrIUhjsBXkJJ6VFsotRxkuccYOGQstIlSNWIY5nuE="</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-42">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb28-43">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb28-44">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb28-45"></span>
<span id="cb28-46">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> nixpkgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>src <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">overlays</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> my-overlay <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb28-47"></span>
<span id="cb28-48"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span></span>
<span id="cb28-49"></span>
<span id="cb28-50">pkgs.quarto_1_3</span></code></pre></div>
</details>
<p>Although I modified it a bit, to be</p>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode nix code-overflow-wrap code-with-copy"><code class="sourceCode nix"><span id="cb29-1">...</span>
<span id="cb29-2">in</span>
<span id="cb29-3">pkgs.mkShell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-4">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>pkgs.quarto_1_3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb29-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>Because it is the mkShell package that creates the shell environment.</p>
<p>This solution works, and gets me quarto 1.3, and also replaces the default dependency of quarto, on pandoc 2.1.9, with one on pandoc-cli.</p>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode default code-overflow-wrap code-with-copy"><code class="sourceCode default"><span id="cb30-1">[nix-shell:~/vscode/quartotest]$ quarto pandoc --version</span>
<span id="cb30-2">pandoc 3.1.2</span>
<span id="cb30-3">Features: +server -lua</span>
<span id="cb30-4">Scripting engine: none</span>
<span id="cb30-5">User data directory: /home/moonpie/.local/share/pandoc</span>
<span id="cb30-6">Copyright (C) 2006-2023 John MacFarlane. Web:  https://pandoc.org</span>
<span id="cb30-7">This is free software; see the source for copying conditions. There is no</span>
<span id="cb30-8">warranty, not even for merchantability or fitness for a particular purpose.</span></code></pre></div>
<p>However, it has a caveat. It compiles pandoc without lua support, as those packages where the ones that were broken in nixpkgs.</p>
<p>But apparently, quarto needs lua suppport.</p>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode default code-overflow-wrap code-with-copy"><code class="sourceCode default"><span id="cb31-1">[nix-shell:~/vscode/quartotest]$ quarto render</span>
<span id="cb31-2">[1/9] about.qmd</span>
<span id="cb31-3">This version of pandoc has been compiled without Lua support.</span></code></pre></div>
<p>So yeah. That doesn’t work.</p>
<p>But meanwhile, the quarto team responded to a question I asked on their github discussion page. I had asked if quarto requires either the pandoc binary, or the pandoc library.</p>
<p>They replied, and said that a pandoc binary, is actually included inside the tarball and the packages they have created. As part of the build system, the package is fairly self reliant, not needing much in terms of external dependencies.</p>
<p>So that’s what I did.</p>
<p>I modified the derivation so that it uses the built in pandoc, rather than replacing it with an external one.</p>
<details open="">
<summary>
Show/hide
</summary>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode nix code-overflow-wrap code-with-copy"><code class="sourceCode nix"><span id="cb32-1"></span>
<span id="cb32-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> &lt;nixpkgs&gt; <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> :</span>
<span id="cb32-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> </span>
<span id="cb32-4">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pandoc</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">null</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-5"></span>
<span id="cb32-6">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">extraRPackages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[];</span></span>
<span id="cb32-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">extraPythonPackages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> ps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[];</span></span>
<span id="cb32-8"></span>
<span id="cb32-9"></span>
<span id="cb32-10">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">quarto</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>pkgs.quarto.overrideAttrs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">oldAttrs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rec</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-11">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">version</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1.3.361"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-12">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">src</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.fetchurl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-13">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/quarto-dev/quarto-cli/releases/download/v</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/quarto-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-linux-amd64.tar.gz"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-14">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sha256</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sha256-vvnrIUhjsBXkJJ6VFsotRxkuccYOGQstIlSNWIY5nuE="</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-15">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb32-16">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">patches</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[];</span></span>
<span id="cb32-17">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">preFixup</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb32-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            wrapProgram $out/bin/quarto \</span></span>
<span id="cb32-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            --prefix PATH : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>pkgs.lib.makeBinPath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> pkgs.deno <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> \</span></span>
<span id="cb32-20"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            --prefix QUARTO_PANDOC : $out/bin/tools/pandoc \</span></span>
<span id="cb32-21"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            --prefix QUARTO_ESBUILD : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>pkgs.esbuild<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin/esbuild \</span></span>
<span id="cb32-22"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            --prefix QUARTO_DART_SASS : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>pkgs.nodePackages.sass<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin/sass \</span></span>
<span id="cb32-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            --prefix QUARTO_R : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>pkgs.rWrapper.override <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> pkgs.rPackages.rmarkdown <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span> extraRPackages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin/R \</span></span>
<span id="cb32-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            --prefix QUARTO_PYTHON : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>pkgs.python3.withPackages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> ps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> jupyter ipython <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>extraPythonPackages ps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin/python3</span></span>
<span id="cb32-25"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        ''</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-26">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">installPhase</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb32-27"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            runHook preInstall</span></span>
<span id="cb32-28"></span>
<span id="cb32-29"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            mkdir -p $out/bin $out/share</span></span>
<span id="cb32-30"></span>
<span id="cb32-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            mv bin/* $out/bin</span></span>
<span id="cb32-32"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            mv share/* $out/share</span></span>
<span id="cb32-33"></span>
<span id="cb32-34"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            runHook preInstall</span></span>
<span id="cb32-35"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            ''</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-36">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}))</span>.override <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">inherit</span> pandoc extraPythonPackages extraRPackages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;};</span></span>
<span id="cb32-37"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span></span>
<span id="cb32-38">    pkgs.mkShell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-39"></span>
<span id="cb32-40">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> pkgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> python310Full quarto jupyter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb32-41">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</details>
<p>And this works:</p>
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode default code-overflow-wrap code-with-copy"><code class="sourceCode default"><span id="cb33-1">[nix-shell:/tmp/test]$ quarto pandoc --version</span>
<span id="cb33-2">pandoc 3.1.1</span>
<span id="cb33-3">Features: +server +lua</span>
<span id="cb33-4">Scripting engine: Lua 5.4</span>
<span id="cb33-5">User data directory: /home/moonpie/.local/share/pandoc</span>
<span id="cb33-6">Copyright (C) 2006-2023 John MacFarlane. Web:  https://pandoc.org</span>
<span id="cb33-7">This is free software; see the source for copying conditions. There is no</span>
<span id="cb33-8">warranty, not even for merchantability or fitness for a particular purpose.</span>
<span id="cb33-9"></span>
<span id="cb33-10">[nix-shell:/tmp/test]$ quarto render</span>
<span id="cb33-11">[1/4] about.qmd</span>
<span id="cb33-12">[2/4] posts/post-with-code/index.qmd</span>
<span id="cb33-13">[3/4] posts/welcome/index.qmd</span>
<span id="cb33-14">[4/4] index.qmd</span>
<span id="cb33-15"></span>
<span id="cb33-16">Output created: _site/index.html</span>
<span id="cb33-17"></span>
<span id="cb33-18"></span>
<span id="cb33-19">[nix-shell:/tmp/test]$ </span></code></pre></div>
<p>Except not really:</p>
<div class="sourceCode" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode default code-overflow-wrap code-with-copy"><code class="sourceCode default"><span id="cb34-1">[nix-shell:/tmp/test]$ quarto check</span>
<span id="cb34-2"></span>
<span id="cb34-3">[✓] Checking versions of quarto binary dependencies...</span>
<span id="cb34-4">      Pandoc version 3.1.1: OK</span>
<span id="cb34-5">ERROR: TypeError: Invalid Version: 1.62.1 compiled with dart2js 2.19.6</span>
<span id="cb34-6"></span>
<span id="cb34-7">TypeError: Invalid Version: 1.62.1 compiled with dart2js 2.19.6</span>
<span id="cb34-8">    at new SemVer (file:///nix/store/bbb70ala41gczl37hmcfy1fx6dldw57l-quarto-1.3.361/bin/quarto.js:48564:19)</span>
<span id="cb34-9">    at Range.test (file:///nix/store/bbb70ala41gczl37hmcfy1fx6dldw57l-quarto-1.3.361/bin/quarto.js:48974:23)</span>
<span id="cb34-10">    at satisfies (file:///nix/store/bbb70ala41gczl37hmcfy1fx6dldw57l-quarto-1.3.361/bin/quarto.js:49191:18)</span>
<span id="cb34-11">    at checkVersion (file:///nix/store/bbb70ala41gczl37hmcfy1fx6dldw57l-quarto-1.3.361/bin/quarto.js:104009:14)</span>
<span id="cb34-12">    at checkVersions (file:///nix/store/bbb70ala41gczl37hmcfy1fx6dldw57l-quarto-1.3.361/bin/quarto.js:104035:5)</span>
<span id="cb34-13">    at async check (file:///nix/store/bbb70ala41gczl37hmcfy1fx6dldw57l-quarto-1.3.361/bin/quarto.js:103989:13)</span>
<span id="cb34-14">    at async Command.fn (file:///nix/store/bbb70ala41gczl37hmcfy1fx6dldw57l-quarto-1.3.361/bin/quarto.js:104212:5)</span>
<span id="cb34-15">    at async Command.execute (file:///nix/store/bbb70ala41gczl37hmcfy1fx6dldw57l-quarto-1.3.361/bin/quarto.js:8437:13)</span>
<span id="cb34-16">    at async quarto (file:///nix/store/bbb70ala41gczl37hmcfy1fx6dldw57l-quarto-1.3.361/bin/quarto.js:127540:5)</span>
<span id="cb34-17">    at async file:///nix/store/bbb70ala41gczl37hmcfy1fx6dldw57l-quarto-1.3.361/bin/quarto.js:127558:9</span></code></pre></div>
<p>So I did some experimenting. First, I replaced all the dependencies with the versions that came with the pandoc package, and then I didn’t get this error with the <code>quarto check</code> command, which checks the installation of quarto, python, pandoc, and R. I then removed the dependencies on by one, to see which one broke it. It ended up being <code>dart-sass</code>.</p>
<p>So I tried again:</p>
<details>
<summary>
Show shell.nix
</summary>
<div class="sourceCode" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode nix code-overflow-wrap code-with-copy"><code class="sourceCode nix"><span id="cb35-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> &lt;nixpkgs&gt; <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> :</span>
<span id="cb35-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> </span>
<span id="cb35-3">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pandoc</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">null</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb35-4"></span>
<span id="cb35-5">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">extraRPackages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[];</span></span>
<span id="cb35-6">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">extraPythonPackages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> ps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[];</span></span>
<span id="cb35-7"></span>
<span id="cb35-8"></span>
<span id="cb35-9">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">quarto</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>pkgs.quarto.overrideAttrs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">oldAttrs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rec</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb35-10">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">version</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1.3.361"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb35-11">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">src</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.fetchurl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb35-12">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/quarto-dev/quarto-cli/releases/download/v</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/quarto-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-linux-amd64.tar.gz"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb35-13">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sha256</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sha256-vvnrIUhjsBXkJJ6VFsotRxkuccYOGQstIlSNWIY5nuE="</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb35-14">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb35-15">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">patches</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[];</span></span>
<span id="cb35-16">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">preFixup</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb35-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            wrapProgram $out/bin/quarto \</span></span>
<span id="cb35-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            --prefix PATH : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>pkgs.lib.makeBinPath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> pkgs.deno <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> \</span></span>
<span id="cb35-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            --prefix QUARTO_PANDOC : $out/bin/tools/pandoc \</span></span>
<span id="cb35-20"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            --prefix QUARTO_ESBUILD : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>pkgs.esbuild<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin/esbuild \</span></span>
<span id="cb35-21"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            --prefix QUARTO_DART_SASS : $out/bin/tools/dart-sass/sass \</span></span>
<span id="cb35-22"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            --prefix QUARTO_R : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>pkgs.rWrapper.override <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> pkgs.rPackages.rmarkdown <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span> extraRPackages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin/R \</span></span>
<span id="cb35-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            --prefix QUARTO_PYTHON : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>pkgs.python3.withPackages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> ps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> jupyter ipython <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>extraPythonPackages ps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin/python3</span></span>
<span id="cb35-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        ''</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb35-25">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">installPhase</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb35-26"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            runHook preInstall</span></span>
<span id="cb35-27"></span>
<span id="cb35-28"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            mkdir -p $out/bin $out/share</span></span>
<span id="cb35-29"></span>
<span id="cb35-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            mv bin/* $out/bin</span></span>
<span id="cb35-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            mv share/* $out/share</span></span>
<span id="cb35-32"></span>
<span id="cb35-33"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            runHook preInstall</span></span>
<span id="cb35-34"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            ''</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb35-35">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}))</span>.override <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">inherit</span> pandoc extraPythonPackages extraRPackages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;};</span></span>
<span id="cb35-36"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span></span>
<span id="cb35-37">    pkgs.mkShell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb35-38"></span>
<span id="cb35-39">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> pkgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> python310Full quarto jupyter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb35-40">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</details>
<p>And this works. The only thing that goes wrong is it gives me a warning when I use the preview function.</p>
<p><code>WARNING: Specified QUARTO_PYTHON '/nix/store/xs35q9yb940cxsy1y0qcs84239zmd2jn-python3-3.10.11-env/bin/python3:/bin/python' does not exist.</code></p>
<p>I’ve found no wayh to get rid of this warning, and since it is just a warning, I will ignore it. Here is my new shell.nix.</p>
<details>
<summary>
Show shell.nix
</summary>
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode nix code-overflow-scroll code-with-copy"><code class="sourceCode nix"><span id="cb36-1"></span>
<span id="cb36-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> &lt;nixpkgs&gt; <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> :</span>
<span id="cb36-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> &lt;nixpkgs&gt; <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> :</span>
<span id="cb36-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> </span>
<span id="cb36-5">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pandoc</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">null</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-6"></span>
<span id="cb36-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">extraRPackages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[];</span></span>
<span id="cb36-8">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">extraPythonPackages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> ps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[];</span></span>
<span id="cb36-9"></span>
<span id="cb36-10"></span>
<span id="cb36-11">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">quarto</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>pkgs.quarto.overrideAttrs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">oldAttrs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rec</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-12">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">version</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1.3.361"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-13">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">src</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.fetchurl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-14">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/quarto-dev/quarto-cli/releases/download/v</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/quarto-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-linux-amd64.tar.gz"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-15">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sha256</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sha256-vvnrIUhjsBXkJJ6VFsotRxkuccYOGQstIlSNWIY5nuE="</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-16">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb36-17">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">buildInputs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> pkgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> python3 jupyter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb36-18">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">preFixup</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb36-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            wrapProgram $out/bin/quarto \</span></span>
<span id="cb36-20"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            --prefix PATH : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>pkgs.lib.makeBinPath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> pkgs.deno <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> \</span></span>
<span id="cb36-21"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            --prefix QUARTO_PANDOC : $out/bin/tools/pandoc \</span></span>
<span id="cb36-22"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            --prefix QUARTO_ESBUILD : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>pkgs.esbuild<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin/esbuild \</span></span>
<span id="cb36-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            --prefix QUARTO_DART_SASS : $out/bin/tools/dart-sass/sass \</span></span>
<span id="cb36-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            --prefix QUARTO_R : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>pkgs.rWrapper.override <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> pkgs.rPackages.rmarkdown <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span> extraRPackages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin/R \</span></span>
<span id="cb36-25"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            --prefix QUARTO_PYTHON : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>pkgs.python3<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin/python3</span></span>
<span id="cb36-26"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        ''</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-27">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">installPhase</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb36-28"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            echo "this is the quarto python </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>pkgs.python3.withPackages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> ps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> jupyter ipython <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>extraPythonPackages ps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin/python"</span></span>
<span id="cb36-29"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            runHook preInstall</span></span>
<span id="cb36-30"></span>
<span id="cb36-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            mkdir -p $out/bin $out/share</span></span>
<span id="cb36-32"></span>
<span id="cb36-33"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            mv bin/* $out/bin</span></span>
<span id="cb36-34"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            mv share/* $out/share</span></span>
<span id="cb36-35"></span>
<span id="cb36-36"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            runHook preInstall</span></span>
<span id="cb36-37"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            ''</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-38">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}))</span>.override <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">inherit</span> pandoc extraPythonPackages extraRPackages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;};</span></span>
<span id="cb36-39"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span></span>
<span id="cb36-40">    pkgs.mkShell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-41"></span>
<span id="cb36-42">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> pkgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> python310Full quarto jupyter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb36-43">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</details>
<p>However, this is messy. Fitting an entire set of overrides into a single shell.nix file is definitely not the neatest way to do this. And there are some other flaws, like things that aren’t necessary as a dependency. Fortunately, there is a neater way.</p>
<p>The nix <code>callPackage</code> function allows for a nix function to call it’s own derivation. Rather than using an override, I can write my own derivation and use the <code>callPackage</code> fucnction to call upon it.</p>
<p>Here is my derivation:</p>
<details>
<summary>
Show derivation:
</summary>
<div class="sourceCode" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode nix code-overflow-wrap code-with-copy"><code class="sourceCode nix"><span id="cb37-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">stdenv</span></span>
<span id="cb37-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">lib</span></span>
<span id="cb37-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">esbuild</span></span>
<span id="cb37-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">deno</span></span>
<span id="cb37-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">fetchurl</span></span>
<span id="cb37-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nodePackages</span></span>
<span id="cb37-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">rWrapper</span></span>
<span id="cb37-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">rPackages</span></span>
<span id="cb37-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">extraRPackages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span></span>
<span id="cb37-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">makeWrapper</span></span>
<span id="cb37-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">python3</span></span>
<span id="cb37-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">extraPythonPackages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> ps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span></span>
<span id="cb37-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>:</span>
<span id="cb37-14"></span>
<span id="cb37-15">stdenv.mkDerivation <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rec</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb37-16">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pname</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"quarto"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb37-17">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">version</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1.3.361"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb37-18">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">src</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fetchurl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb37-19">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/quarto-dev/quarto-cli/releases/download/v</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/quarto-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-linux-amd64.tar.gz"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb37-20">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sha256</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sha256-vvnrIUhjsBXkJJ6VFsotRxkuccYOGQstIlSNWIY5nuE="</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb37-21">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb37-22"></span>
<span id="cb37-23">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nativeBuildInputs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb37-24">    makeWrapper</span>
<span id="cb37-25">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb37-26"></span>
<span id="cb37-27">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">patches</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb37-28">    <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">./fix-deno-path.patch</span></span>
<span id="cb37-29">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb37-30"></span>
<span id="cb37-31">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">postPatch</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb37-32"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    # Compat for Deno &gt;=1.26</span></span>
<span id="cb37-33"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    substituteInPlace bin/quarto.js \</span></span>
<span id="cb37-34"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      --replace 'Deno.setRaw(stdin.rid, ' 'Deno.stdin.setRaw(' \</span></span>
<span id="cb37-35"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      --replace 'Deno.setRaw(Deno.stdin.rid, ' 'Deno.stdin.setRaw('</span></span>
<span id="cb37-36"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  ''</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb37-37"></span>
<span id="cb37-38">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dontStrip</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb37-39"></span>
<span id="cb37-40">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">preFixup</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb37-41"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            wrapProgram $out/bin/quarto \</span></span>
<span id="cb37-42"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            --prefix PATH : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>lib.makeBinPath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> deno <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> \</span></span>
<span id="cb37-43"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            --prefix QUARTO_PANDOC : $out/bin/tools/pandoc \</span></span>
<span id="cb37-44"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            --prefix QUARTO_ESBUILD : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>esbuild<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin/esbuild \</span></span>
<span id="cb37-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            --prefix QUARTO_DART_SASS : $out/bin/tools/dart-sass/sass \</span></span>
<span id="cb37-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            --prefix QUARTO_R : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>rWrapper.override <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> rPackages.rmarkdown <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span> extraRPackages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin/R \</span></span>
<span id="cb37-47"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            --prefix QUARTO_PYTHON : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>python3<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin/python3</span></span>
<span id="cb37-48"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    ''</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb37-49"></span>
<span id="cb37-50">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">installPhase</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb37-51"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            runHook preInstall</span></span>
<span id="cb37-52"></span>
<span id="cb37-53"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            mkdir -p $out/bin $out/share</span></span>
<span id="cb37-54"></span>
<span id="cb37-55"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            mv bin/* $out/bin</span></span>
<span id="cb37-56"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            mv share/* $out/share</span></span>
<span id="cb37-57"></span>
<span id="cb37-58"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            runHook preInstall</span></span>
<span id="cb37-59"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            ''</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb37-60"></span>
<span id="cb37-61">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">meta</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> lib<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb37-62">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">description</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Open-source scientific and technical publishing system built on Pandoc"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb37-63">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">longDescription</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb37-64"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        Quarto is an open-source scientific and technical publishing system built on Pandoc.</span></span>
<span id="cb37-65"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        Quarto documents are authored using markdown, an easy to write plain text format.</span></span>
<span id="cb37-66"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    ''</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb37-67">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">homepage</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://quarto.org/"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb37-68">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">changelog</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/quarto-dev/quarto-cli/releases/tag/v</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb37-69">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">license</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> licenses.gpl2Plus<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb37-70">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">maintainers</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> maintainers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> mrtarantoga <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb37-71">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">platforms</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x86_64-linux"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb37-72">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sourceProvenance</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> sourceTypes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> binaryNativeCode binaryBytecode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb37-73">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb37-74"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</details>
<p>And here is the shell.nix that summons this package:</p>
<div class="sourceCode" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode nix code-overflow-wrap code-with-copy"><code class="sourceCode nix"><span id="cb38-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span></span>
<span id="cb38-2">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> &lt;nixpkgs&gt; <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{};</span></span>
<span id="cb38-3">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">quarto</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.callPackage <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">./env/quarto.nix</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{};</span></span>
<span id="cb38-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span></span>
<span id="cb38-5">    pkgs.mkShell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-6">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> pkgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> python310Full quarto jupyter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb38-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="conclusion-and-how-to-use" class="level1">
<h1>Conclusion and How to Use</h1>
<p>Now, users who have cloned the <a href="https://github.com/moonpidumplings/quartotest">repo for this blog</a>, can simply install nix, and run <code>nix-shell</code> in the root directory of the repo in order for them to get quarto, python, and jupyter, the dependencies I rely on for this project. Because of the way nix, works it is easy to modify my <code>shell.nix</code>, and add more dependencies, like R or more extra language support via juptyer kernels.</p>
<p>My usual workflow is to open a terminal in this git repo, and type <code>nix-shell</code>, and then <code>code .</code>, which gives me vscode with quarto (I have the quarto vscode extension installed), python, and jupyter.</p>
<p>I realized in hindsight that this only works on x86_64 linux, because my derivation works by taking the quarto x86_64 linux binary and packaging it using nix. But I did learn a lot about writing derivations through this, which I can apply to other things.</p>
</section>
<section id="try-2-creating-a-multi-architechture-and-multi-os-package" class="level1">
<h1>Try 2, creating a multi architechture and multi OS package</h1>
<p>Very frustrating, quarto has no compilation instructions in the readme. However, thankfully, use github actions to do testing, and builds of the applications, which means that the build steps are technically public, just not immediately apparent.</p>
<p><img src="https://moonpiedumplings.github.io/projects/quarto-via-nix/images/ghactions.png" class="img-fluid"></p>
<p>Github actions works by reading a .yml file for the instuctions on what do do, and this file can be found in the github actions menu, as <a href="https://github.com/quarto-dev/quarto-cli/actions/runs/5286090611/workflow">workflow file</a>.</p>
<p>I don’t need the whole thing, however, just the tarball building steps.</p>
<details>
<summary>
Show steps
</summary>
<div class="sourceCode" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode yaml code-overflow-wrap code-with-copy"><code class="sourceCode yaml"><span id="cb39-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">obs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb39-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">configure</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb39-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runs-on</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ubuntu-latest</span></span>
<span id="cb39-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">outputs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb39-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">version</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{steps.config.outputs.version}}.${{ steps.config.outputs.build_number}}</span></span>
<span id="cb39-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">version_base</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{steps.config.outputs.version}}</span></span>
<span id="cb39-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tag_name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> v${{steps.config.outputs.version}}.${{ steps.config.outputs.build_number }}</span></span>
<span id="cb39-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">release</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> v${{steps.config.outputs.version}}.${{ steps.config.outputs.build_number }}</span></span>
<span id="cb39-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">changes</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ steps.config.outputs.changes }}</span></span>
<span id="cb39-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">if</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> github.event_name != 'schedule' || (github.event_name == 'schedule' &amp;&amp; github.repository == 'quarto-dev/quarto-cli')</span></span>
<span id="cb39-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb39-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Install libc6-div</span></span>
<span id="cb39-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">run</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> sudo apt-get install libc6-dev</span></span>
<span id="cb39-14"></span>
<span id="cb39-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> actions/checkout@v3</span></span>
<span id="cb39-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb39-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fetch-depth</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb39-18"></span>
<span id="cb39-19"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> config</span></span>
<span id="cb39-20"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> config</span></span>
<span id="cb39-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">        run</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb39-22">          source ./configuration</span>
<span id="cb39-23">          CHANGES=</span>
<span id="cb39-24">          # CHANGES=$(git log $(git describe --tags --abbrev=0)..HEAD --oneline)</span>
<span id="cb39-25">          # Escape \n, \r to preserve multiline variable</span>
<span id="cb39-26">          # See https://github.community/t/set-output-truncates-multiline-strings/16852/2</span>
<span id="cb39-27">          # CHANGES="${CHANGES//'%'/'%25'}"</span>
<span id="cb39-28">          # CHANGES="${CHANGES//$'\n'/'%0A'}"</span>
<span id="cb39-29">          # CHANGES="${CHANGES//$'\r'/'%0D'}"</span>
<span id="cb39-30">          # echo "changes=$CHANGES" &gt;&gt; $GITHUB_OUTPUT</span>
<span id="cb39-31">          QUARTO_BUILD_NUMBER=$(($QUARTO_BUILD_RUN_OFFSET + $GITHUB_RUN_NUMBER))</span>
<span id="cb39-32">          echo "version=$QUARTO_VERSION" &gt;&gt; $GITHUB_OUTPUT</span>
<span id="cb39-33">          echo "changes=$CHANGES" &gt;&gt; $GITHUB_OUTPUT</span>
<span id="cb39-34">          echo "build_number=$QUARTO_BUILD_NUMBER" &gt;&gt; $GITHUB_OUTPUT</span>
<span id="cb39-35"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Upload Artifact</span></span>
<span id="cb39-36"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> actions/upload-artifact@v3</span></span>
<span id="cb39-37"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb39-38"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> News</span></span>
<span id="cb39-39"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">path</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ./news/changelog-${{steps.config.outputs.version}}.md</span></span>
<span id="cb39-40"></span>
<span id="cb39-41"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make-source-tarball</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb39-42"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runs-on</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ubuntu-latest</span></span>
<span id="cb39-43"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">needs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">configure</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb39-44"></span>
<span id="cb39-45"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb39-46"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> actions/checkout@v3</span></span>
<span id="cb39-47"></span>
<span id="cb39-48"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Make Tarball</span></span>
<span id="cb39-49"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">        run</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb39-50">          tar -zcvf  quarto-${{needs.configure.outputs.version}}.tar.gz *</span>
<span id="cb39-51"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Upload Artifact</span></span>
<span id="cb39-52"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> actions/upload-artifact@v3</span></span>
<span id="cb39-53"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb39-54"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Source</span></span>
<span id="cb39-55"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">path</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ./quarto-${{needs.configure.outputs.version}}.tar.gz</span></span>
<span id="cb39-56"></span>
<span id="cb39-57"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make-tarball</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb39-58"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runs-on</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ubuntu-latest</span></span>
<span id="cb39-59"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">needs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">configure</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb39-60"></span>
<span id="cb39-61"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb39-62"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> actions/checkout@v3</span></span>
<span id="cb39-63"></span>
<span id="cb39-64"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Configure</span></span>
<span id="cb39-65"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">        run</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb39-66">          ./configure.sh</span>
<span id="cb39-67"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Prepare Distribution</span></span>
<span id="cb39-68"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">        run</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb39-69">          pushd package/src/</span>
<span id="cb39-70">          ./quarto-bld prepare-dist --set-version ${{needs.configure.outputs.version}} --log-level info</span>
<span id="cb39-71">          popd</span>
<span id="cb39-72"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Make Tarball</span></span>
<span id="cb39-73"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">        run</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb39-74">          pushd package/</span>
<span id="cb39-75">          mv pkg-working quarto-${{needs.configure.outputs.version}}</span>
<span id="cb39-76">          tar -cvf  quarto-${{needs.configure.outputs.version}}-linux-amd64.tar quarto-${{needs.configure.outputs.version}}</span>
<span id="cb39-77">          gzip quarto-${{needs.configure.outputs.version}}-linux-amd64.tar</span>
<span id="cb39-78">          mv quarto-${{needs.configure.outputs.version}} pkg-working</span>
<span id="cb39-79">          popd</span>
<span id="cb39-80"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Upload Artifact</span></span>
<span id="cb39-81"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> actions/upload-artifact@v3</span></span>
<span id="cb39-82"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb39-83"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Deb Zip</span></span>
<span id="cb39-84"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">path</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ./package/quarto-${{needs.configure.outputs.version}}-linux-amd64.tar.gz</span></span>
<span id="cb39-85"></span>
<span id="cb39-86"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make-arm64-tarball</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb39-87"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runs-on</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ubuntu-latest</span></span>
<span id="cb39-88"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">needs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">configure</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb39-89"></span>
<span id="cb39-90"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb39-91"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> actions/checkout@v3</span></span>
<span id="cb39-92"></span>
<span id="cb39-93"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Configure</span></span>
<span id="cb39-94"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">        run</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb39-95">          ./configure.sh</span>
<span id="cb39-96"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Prepare Distribution</span></span>
<span id="cb39-97"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">        run</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb39-98">          pushd package/src/</span>
<span id="cb39-99">          ./quarto-bld prepare-dist --set-version ${{needs.configure.outputs.version}} --arch aarch64 --log-level info</span>
<span id="cb39-100">          popd</span>
<span id="cb39-101"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Make Tarball</span></span>
<span id="cb39-102"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">        run</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb39-103">          pushd package/</span>
<span id="cb39-104">          mv pkg-working quarto-${{needs.configure.outputs.version}}</span>
<span id="cb39-105">          tar -cvf  quarto-${{needs.configure.outputs.version}}-linux-arm64.tar quarto-${{needs.configure.outputs.version}}</span>
<span id="cb39-106">          gzip quarto-${{needs.configure.outputs.version}}-linux-arm64.tar</span>
<span id="cb39-107">          mv quarto-${{needs.configure.outputs.version}} pkg-working</span>
<span id="cb39-108">          popd</span>
<span id="cb39-109"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Upload Artifact</span></span>
<span id="cb39-110"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> actions/upload-artifact@v3</span></span>
<span id="cb39-111"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb39-112"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Deb Arm64 Zip</span></span>
<span id="cb39-113"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">path</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ./package/quarto-${{needs.configure.outputs.version}}-linux-arm64.tar.gz</span></span></code></pre></div>
</details>
<p>So to convert github actions into somethign easier to read:</p>
<p>AMD64 build:</p>
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode default code-overflow-wrap code-with-copy"><code class="sourceCode default"><span id="cb40-1">source ./configuration</span>
<span id="cb40-2">./configure.sh</span>
<span id="cb40-3">pushd package/src/ # pushd is like a more advnaced version of cd</span>
<span id="cb40-4">/quarto-bld prepare-dist --set-version ${{needs.configure.outputs.   version}} --log-level info </span>
<span id="cb40-5">popd</span>
<span id="cb40-6">pushd package/</span>
<span id="cb40-7">mv pkg-working quarto-${{needs.configure.outputs.version}}</span>
<span id="cb40-8">tar -cvf  quarto-${{needs.configure.outputs.version}}-linux-amd64.tar quarto-${{needs.configure.outputs.version}}</span>
<span id="cb40-9">gzip quarto-${{needs.configure.outputs.version}}-linux-amd64.tar</span>
<span id="cb40-10">mv quarto-${{needs.configure.outputs.version}} pkg-working</span>
<span id="cb40-11">popd</span></code></pre></div>
<p>And then based on the github actions, the generated tarball is located at <code>./package/quarto-${{needs.configure.outputs.version}}-linux-amd64.tar.gz</code></p>
<p>ARM64 build (very similar steps):</p>
<div class="sourceCode" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode default code-overflow-wrap code-with-copy"><code class="sourceCode default"><span id="cb41-1">./configure.sh</span>
<span id="cb41-2">pushd package/src/</span>
<span id="cb41-3">./quarto-bld prepare-dist --set-version ${{needs.configure.outputs.version}} --arch aarch64 --log-level info</span>
<span id="cb41-4">popd</span>
<span id="cb41-5">pushd package/</span>
<span id="cb41-6">mv pkg-working quarto-${{needs.configure.outputs.version}}</span>
<span id="cb41-7">tar -cvf  quarto-${{needs.configure.outputs.version}}-linux-arm64.tar quarto-${{needs.configure.outputs.version}}</span>
<span id="cb41-8">gzip quarto-${{needs.configure.outputs.version}}-linux-arm64.tar</span>
<span id="cb41-9">mv quarto-${{needs.configure.outputs.version}} pkg-working</span>
<span id="cb41-10">popd</span></code></pre></div>
<p>And then based on the github actions, the generated file is located at <code>./package/quarto-${{needs.configure.outputs.version}}-linux-arm64.tar.gz</code></p>
<p>I downloaded these files from releases, and they appear to be extremely similar. The quarto “binary” is a bash script that includes a check for architechture. So the only difference is in the configure step, which seems to download a different architechture.</p>
<p>However, when experimenting with trying to compile quarto on my phone (arm) using termux, I get an error. <code>deno: cannot execute: required file not found</code>. So far, googling this error has gotten me nowhere. I may have to create an arm vm to test later.</p>


</section>

 ]]></description>
  <category>nix</category>
  <category>quarto</category>
  <guid>https://moonpiedumplings.github.io/projects/quarto-via-nix/</guid>
  <pubDate>Mon, 15 Jan 2024 08:00:00 GMT</pubDate>
</item>
<item>
  <title>Ansible: Defined is not Truthy</title>
  <link>https://moonpiedumplings.github.io/playground/ansible-truthy/</link>
  <description><![CDATA[ 




<p>I was creating some ansible playbooks recently, and I came across an interesting issue.</p>
<p>In my variable definition file, this:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>vars/main.yml</strong></pre>
</div>
<div class="sourceCode" id="cb1" data-filename="vars/main.yml" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test_var</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # This is a test var</span></span></code></pre></div>
</div>
<p>When evaluating whether or not it was defined:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Print test var</span></span>
<span id="cb2-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ansible.builtin.debug</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">var</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> test_var</span></span>
<span id="cb2-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Is null defined</span></span>
<span id="cb2-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ansible.builtin.debug</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">msg</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test_var is defined"</span></span>
<span id="cb2-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">when</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> test_var is defined</span></span></code></pre></div>
<p>This would actually evaluate to true:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb3-1">TASK [Print test var] ************************************************************************************************************************************</span>
<span id="cb3-2">ok: [localhost] =&gt; {</span>
<span id="cb3-3">    "test_var": null</span>
<span id="cb3-4">}</span>
<span id="cb3-5"></span>
<span id="cb3-6">TASK [Is null defined] ***********************************************************************************************************************************</span>
<span id="cb3-7">ok: [localhost] =&gt; {</span>
<span id="cb3-8">    "msg": "test_var is defined"</span>
<span id="cb3-9">}</span></code></pre></div>
<p>So apparently, null is defined. This is a somewhat weird behavior.</p>
<p>Apparently, it’s only when variables are completly unset, unmentioned in any files, that a variable is not considered defined.</p>
<p>However, even if variables are not defined, then the value of <code>null</code> is still considerd to be <a href="https://stackoverflow.com/a/39984051">falsey</a></p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> What about truthyism?</span></span>
<span id="cb4-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ansible.builtin.debug</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb4-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">msg</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test_var is truthy"</span></span>
<span id="cb4-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">when</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> test_var</span></span>
<span id="cb4-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> What about the bool filter</span></span>
<span id="cb4-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ansible.builtin.debug</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb4-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">msg</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test var passes the bool"</span></span>
<span id="cb4-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">when</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> test_var | bool</span></span></code></pre></div>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb5-1">TASK [What about truthyism?] *****************************************************************************************************************************</span>
<span id="cb5-2">skipping: [localhost]</span>
<span id="cb5-3"></span>
<span id="cb5-4">TASK [What about the bool filter] ************************************************************************************************************************</span>
<span id="cb5-5">skipping: [localhost]</span></code></pre></div>
<p>And these tasks are skipped, because <code>null</code> is falsey, and doesn’t satisfy the when statements.</p>
<p>What about an empty string?</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">empty_string</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span></code></pre></div>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> What about a length filter?</span></span>
<span id="cb7-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ansible.builtin.debug</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb7-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">msg</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"empty_string passes the length filter"</span></span>
<span id="cb7-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">when</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> empty_string | length &gt; 0</span></span>
<span id="cb7-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Print empty_string</span></span>
<span id="cb7-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ansible.builtin.debug</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb7-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">var</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> empty_string</span></span>
<span id="cb7-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Is empty_string defined</span></span>
<span id="cb7-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ansible.builtin.debug</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb7-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">msg</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"empty_string is defined"</span></span>
<span id="cb7-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">when</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> empty_string is defined</span></span>
<span id="cb7-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> What about truthyism?</span></span>
<span id="cb7-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ansible.builtin.debug</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb7-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">msg</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"empty_string is truthy"</span></span>
<span id="cb7-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">when</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> empty_string</span></span>
<span id="cb7-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> What about the bool filter</span></span>
<span id="cb7-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ansible.builtin.debug</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb7-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">msg</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"empty_string passes the bool"</span></span>
<span id="cb7-19"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">when</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> empty_string | bool</span></span>
<span id="cb7-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Empty string truthy in assert?</span></span>
<span id="cb7-21"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ansible.builtin.assert</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb7-22"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">that</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> empty_string</span></span></code></pre></div>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb8-1">TASK [What about a length filter?] ***********************************************************************************************************************</span>
<span id="cb8-2">skipping: [localhost]</span>
<span id="cb8-3"></span>
<span id="cb8-4">TASK [Print empty_string] ********************************************************************************************************************************</span>
<span id="cb8-5">ok: [localhost] =&gt; {</span>
<span id="cb8-6">    "empty_string": ""</span>
<span id="cb8-7">}</span>
<span id="cb8-8"></span>
<span id="cb8-9">TASK [Is empty_string defined] ***************************************************************************************************************************</span>
<span id="cb8-10">ok: [localhost] =&gt; {</span>
<span id="cb8-11">    "msg": "empty_string is defined"</span>
<span id="cb8-12">}</span>
<span id="cb8-13"></span>
<span id="cb8-14">TASK [What about truthyism?] *****************************************************************************************************************************</span>
<span id="cb8-15">skipping: [localhost]</span>
<span id="cb8-16"></span>
<span id="cb8-17">TASK [What about the bool filter] ************************************************************************************************************************</span>
<span id="cb8-18">skipping: [localhost]</span>
<span id="cb8-19"></span>
<span id="cb8-20">TASK [Empty string truthy in assert?] ********************************************************************************************************************</span>
<span id="cb8-21">fatal: [localhost]: FAILED! =&gt; {</span>
<span id="cb8-22">    "assertion": "empty_string",</span>
<span id="cb8-23">    "changed": false,</span>
<span id="cb8-24">    "evaluated_to": false,</span>
<span id="cb8-25">    "msg": "Assertion failed"</span>
<span id="cb8-26">}</span>
<span id="cb8-27">...ignoring</span></code></pre></div>
<p>So an empty_string is considered defined, falsey, and unlike a <code>null</code> value, it can also be passed through the length filter, to get falsey.</p>
<p>What about completely unset? Not bothering to mention a variable in any files?</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb9-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Is variable truthy</span></span>
<span id="cb9-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ansible.builtin.debug</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb9-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">msg</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unset is truthy?"</span></span>
<span id="cb9-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">when</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> unset</span></span>
<span id="cb9-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ignore_errors</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb9-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Uset variable defined?</span></span>
<span id="cb9-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ansible.builtin.debug</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb9-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">msg</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unset is defined"</span></span>
<span id="cb9-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">when</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> unset is defined</span></span></code></pre></div>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb10-1">TASK [Empty string truthy in assert?] ********************************************************************************************************************</span>
<span id="cb10-2">fatal: [localhost]: FAILED! =&gt; {</span>
<span id="cb10-3">    "assertion": "empty_string",</span>
<span id="cb10-4">    "changed": false,</span>
<span id="cb10-5">    "evaluated_to": false,</span>
<span id="cb10-6">    "msg": "Assertion failed"</span>
<span id="cb10-7">}</span>
<span id="cb10-8">...ignoring</span>
<span id="cb10-9"></span>
<span id="cb10-10">TASK [Is variable truthy] ********************************************************************************************************************************</span>
<span id="cb10-11">fatal: [localhost]: FAILED! =&gt; {"msg": "The conditional check 'unset' failed. The error was: error while evaluating conditional (unset): 'unset' is undefined. 'unset' is undefined\n\nThe error appears to be in '/stuff/playbook.yml': line 53, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n      ignore_errors: true\n    - name: Is variable truthy\n      ^ here\n"}</span>
<span id="cb10-12">...ignoring</span>
<span id="cb10-13"></span>
<span id="cb10-14">TASK [Uset variable defined?] ****************************************************************************************************************************</span>
<span id="cb10-15">skipping: [localhost]</span></code></pre></div>
<p>So this is an interesting phenomenon. Trying to check a completely undefined variable for truthyness doesn’t work.</p>
<p>What about an is defined, and a check for truthyness? For my specific usecase, I have an ansible role that generates a variable, that some roles may rely on. If the first role isn’t run or run out of order, things could break.</p>
<p>I want an <code>ansible.builtin.assert</code>, which essentially checks some conditions, and fails, stopping the playbook if they are not met. How can I check if a variable is defined first, and then truthy? Now, a check for truthyism will still fail, but without the assert catching the error, the error message won’t be as explicit.</p>
<p>I created a variable called <code>notunset</code>, and set it to “stuff”, and ran some similar tests.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb11-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Notunset variable defined?</span></span>
<span id="cb11-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ansible.builtin.debug</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb11-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">msg</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unset is defined"</span></span>
<span id="cb11-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">when</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> notunset is defined</span></span>
<span id="cb11-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Notunset variable defined and truthy?</span></span>
<span id="cb11-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ansible.builtin.assert</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb11-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">that</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> notunset is defined and notunset | bool</span></span>
<span id="cb11-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ignore_errors</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span></code></pre></div>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb12-1">TASK [Is notunset variable truthy] ***********************************************************************************************************************</span>
<span id="cb12-2">ok: [localhost] =&gt; {</span>
<span id="cb12-3">    "msg": "notunset is truthy?"</span>
<span id="cb12-4">}</span>
<span id="cb12-5"></span>
<span id="cb12-6">TASK [Notunset variable defined?] ************************************************************************************************************************</span>
<span id="cb12-7">ok: [localhost] =&gt; {</span>
<span id="cb12-8">    "msg": "unset is defined"</span>
<span id="cb12-9">}</span>
<span id="cb12-10"></span>
<span id="cb12-11">TASK [Notunset variable defined and truthy?] *************************************************************************************************************</span>
<span id="cb12-12">fatal: [localhost]: FAILED! =&gt; {</span>
<span id="cb12-13">    "assertion": "notunset is defined and notunset | bool",</span>
<span id="cb12-14">    "changed": false,</span>
<span id="cb12-15">    "evaluated_to": false,</span>
<span id="cb12-16">    "msg": "Assertion failed"</span>
<span id="cb12-17">}</span>
<span id="cb12-18">...ignoring</span></code></pre></div>
<p>Huh. Why does this fail?</p>
<p>A little modification though, and it succeeds:</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb13-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Notunset variable defined and truthy?</span></span>
<span id="cb13-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ansible.builtin.assert</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb13-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">that</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> notunset is defined and notunset</span></span>
<span id="cb13-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ignore_errors</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span></code></pre></div>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb14-1">TASK [Notunset variable defined and truthy?] *************************************************************************************************************</span>
<span id="cb14-2">ok: [localhost] =&gt; {</span>
<span id="cb14-3">    "changed": false,</span>
<span id="cb14-4">    "msg": "All assertions passed"</span>
<span id="cb14-5">}</span></code></pre></div>
<p>When doing a little more testing, this interacts properly with assert with undefined, null, and empty strings, properly turning them into falsey and truthy values.</p>
<p>Another thing to note is the <code>default filter</code>. When a variable is undefined, it will assign it a default value.</p>
<p>Interestingly, this also considers null to be undefined. When working with the <code>test_var</code>, which defined but never assigned a value (<code>null</code>):</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb15-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> How about the default filter?</span></span>
<span id="cb15-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ansible.builtin.debug</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb15-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">msg</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{{ test_var | default('test_var is not defined') }}"</span></span></code></pre></div>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb16-1">TASK [How about the default filter?] *********************************************************************************************************************</span>
<span id="cb16-2">ok: [localhost] =&gt; {</span>
<span id="cb16-3">    "msg": ""</span>
<span id="cb16-4">}</span></code></pre></div>
<p>Null is considered defined again, as shown here.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb17-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">when</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> variable | default(False)</span></span></code></pre></div>
<p>Creates an elegant way to check if a variable exists, and set it to a False otherwise. This is the final solution I’ve settled on, for when I can’t guarantee variables are defined (including <code>null</code> or an empty list/string)</p>



 ]]></description>
  <category>linux</category>
  <category>ansible</category>
  <category>devops</category>
  <guid>https://moonpiedumplings.github.io/playground/ansible-truthy/</guid>
  <pubDate>Sat, 06 Jan 2024 08:00:00 GMT</pubDate>
</item>
<item>
  <title>CCDC Environment setup</title>
  <link>https://moonpiedumplings.github.io/guides/ccdc-env/</link>
  <description><![CDATA[ 




<p>This will be the guide(s) on how to set up your environment for CCDC playing, and development of related scripts + testing them.</p>
<section id="windows" class="level1">
<h1>Windows</h1>
<p>This requires Windows 11. With Windows 10, there is no nested virtaulization in Windows Subsystem for Linux (WSL), preventing the use of the relevant vagrant machines.</p>
<p>Although there are workarounds, allowing you to use virtualbox in WSL or the like, they are not worth the effort it requires to support them.</p>
<section id="chocolatey" class="level2">
<h2 class="anchored" data-anchor-id="chocolatey">Chocolatey</h2>
<p><a href="https://chocolatey.org/install#individual">Install chocolatey here</a></p>
<p>Using chocolatey, install several packages we need for play/development. If you already have an app installed, you don’t need to install it with chocolatey.</p>
<p>In an <strong>administrative powershell or cmd session</strong>, run:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb1-1">choco install -y firefox wezterm vscode</span></code></pre></div>
<section id="wezterm" class="level3">
<h3 class="anchored" data-anchor-id="wezterm">Wezterm</h3>
<p>Install wezterm from either chocolatey or the <a href="https://wezfurlong.org/wezterm/install/windows.html">official website</a> (using the setup.)</p>
<p>On a vm, I get an error about the opengl version being incompatible when I attempt to launch wezterm. I have to launch it with `wezterm –config “prefer_egl=true”.</p>
<p>To launch the ubuntu session, you can right click on the new tab, and then a menu will appear, from which you can select Ubuntu.</p>
</section>
</section>
<section id="ubuntuwsl-in-windows" class="level2">
<h2 class="anchored" data-anchor-id="ubuntuwsl-in-windows">Ubuntu/WSL in Windows</h2>
<p>You need to have Windows 11 installed, in order for nested virtualization within WSL to work. If you are not on Windows 10, then you need to either upgrade, or work within a linux distribution.</p>
<p>As long as you Windows 10 May 2020 Update (version 2004), you can install wsl with a single command. Otherwise, you have to follow some <a href="https://learn.microsoft.com/en-us/windows/wsl/install-manual">painful steps</a></p>
<p>In an elevated powershell window:</p>
<p><code>wsl --install</code></p>
<p>Reboot the system.</p>
<p>Then, launch wsl with <code>wsl</code> from powershell or cmd.</p>
<p>It’s going to ask you for some prompts. Because this is a development environment, focusing on speed rather than security, I recommend an easy to type username and password.</p>
<p>Edit the sudoers file:</p>
<p>To edit the sudo file, you can use <code>sudo visudo</code> to edit it safely. This command while check the sudoers file for errors, rather than instantly breaking sudo upon a misconfiguration.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/etc/sudoers</strong></pre>
</div>
<div class="sourceCode" id="cb2" data-filename="/etc/sudoers" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1"># Change the portion of the file referring to env_reset to look like this:</span>
<span id="cb2-2"># Put an "!" in front of env_reset, and comment out the part referring to secure path</span>
<span id="cb2-3"></span>
<span id="cb2-4">Defaults        !env_reset</span>
<span id="cb2-5">Defaults        mail_badpass</span>
<span id="cb2-6">#Defaults       secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" </span>
<span id="cb2-7"></span>
<span id="cb2-8"></span>
<span id="cb2-9"></span>
<span id="cb2-10"># Change the portion of the file that refers to the sudo group to look like this:</span>
<span id="cb2-11"></span>
<span id="cb2-12">%sudo ALL=(ALL:ALL) NOPASSWD: ALL</span></code></pre></div>
</div>
<p>Either reboot, or restart the wsl virtual machine.</p>
<p>To restart the WSL vm, from <strong>powershell</strong> or <strong>cmd</strong>:</p>
<p>Install docker and docker-compose (and curl and git, other tools we will need later):</p>
<p><code>sudo apt update &amp;&amp; sudo apt upgrade</code></p>
<p><code>sudo apt install docker.io docker-compose curl git openssh-client wget virt-manager</code></p>
<p>You might have to reboot here, before the next step will work. Maybe.</p>
<p><code>sudo usermod -aG docker $USER # Run docker without sudo</code></p>
<p><code>sudo usermod -aG libvirt $USER # Run libvirt vms without sudo</code></p>
<p>Rebooting the wsl instance will log you in and out, enabling you to use docker, without sudo, and after you launch virt-manager once, you can access it from the windows gui.</p>
</section>
</section>
<section id="linux" class="level1">
<h1>Linux</h1>
<p>Linux has many distributions, so I will include vague steps that will work everywhere, rather than precise steps that only work on one distro, like the above Windows/WSL steps, which are designed to work on Ubuntu. If you have an Ubuntu or Debian based distro for your linux, then those steps likely work.</p>
<p>Edit the sudoers file:</p>
<p>To edit the sudo file, you can use <code>sudo visudo</code> to edit it safely. This command while check the sudoers file for errors, rather than instantly breaking sudo upon a misconfiguration.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/etc/sudoers</strong></pre>
</div>
<div class="sourceCode" id="cb3" data-filename="/etc/sudoers" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb3-1"># Change the portion of the file referring to env_reset to look like this:</span>
<span id="cb3-2"># Put an "!" in front of env_reset, and comment out the part referring to secure path</span>
<span id="cb3-3"></span>
<span id="cb3-4">Defaults        !env_reset</span>
<span id="cb3-5">Defaults        mail_badpass</span>
<span id="cb3-6">#Defaults       secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" </span></code></pre></div>
</div>
<p>You can also set sudo to not require a password, if you so wish. However, this varies based on distributions.</p>
<p>Install:</p>
<ul>
<li>Equivalent of base development packages for your distro. Usually a metapackage containing git, compilers like gcc, and build tools like make.</li>
<li>ssh and related packages. (If sshfs and scp are packaged, get them as well)</li>
<li>curl and wget</li>
<li>Libvirt and virt-manager (add your user to the libvirtd group so that you don’t need sudo to manage virtual machines)</li>
<li>Docker (add your user to the docker group so you don’t need sudo to manage docker containers)</li>
<li>Firefox</li>
</ul>
<p><strong>Wezterm:</strong></p>
<p><a href="https://wezfurlong.org/wezterm/install/linux.html">Wezterm has official installation instructions</a>. I don’t recommend flatpak, because sandboxing may cause weird behaviors.</p>
<p><strong>Vscode:</strong></p>
<p><a href="https://code.visualstudio.com/docs/setup/linux">Microsoft has an official guide about installing vscode</a>. I recommend you add the microsoft repo for your distro if available, and get from there, so that your package manager can update vscode alongside everything else.</p>
</section>
<section id="macos" class="level1">
<h1>Macos</h1>
<p>Install homebrew from <a href="https://brew.sh/">the official website</a></p>
<p>Steps needed:</p>
<ul>
<li>Install vscode in a way that it’s in your $PATH.
<ul>
<li>Does brew do this?</li>
<li><a href="https://code.visualstudio.com/docs/setup/mac">Microsoft’s documentation</a></li>
</ul></li>
<li>Nix (see below)</li>
<li>Libvirt
<ul>
<li><a href="https://libvirt.org/macos.html">Official docs recommend brew</a> - but does this method integrate properly</li>
<li><a href="https://www.arthurkoziel.com/running-virt-manager-and-libvirt-on-macos/">Spice not supported</a> - is this outdated?</li>
</ul></li>
<li>Virtualbox</li>
<li><a href="https://www.virtualbox.org/wiki/Downloads">Official site</a></li>
<li>No arm version?</li>
<li>Vmware fusion — No.&nbsp;Paid software, and is a different vagrant provider.</li>
<li>Wezterm:
<ul>
<li><a href="https://formulae.brew.sh/cask/wezterm#default">Brew cask</a></li>
<li><a href="https://wezfurlong.org/wezterm/install/macos.html">Official website</a> (also recommends brew)</li>
</ul></li>
</ul>
</section>
<section id="all-operating-systems" class="level1">
<h1>All Operating Systems</h1>
<section id="nix" class="level2">
<h2 class="anchored" data-anchor-id="nix">Nix</h2>
<p>In macos terminal, in linux, or in WSL, install nix (tool used to manage our development environments):</p>
<p>Do not run these commands with sudo.</p>
<p><code>curl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix | sh -s -- install</code></p>
<p>Restart your shell. Simply close and reopen the terminal.</p>
<p>Also, ensure the nix service is enabled by the</p>
<p>Update the nix channels:</p>
<p><code>nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs</code></p>
<p><code>nix-channel --update</code></p>
<p>Install the zellij terminal multiplexer:</p>
<p><code>nix profile install nixpkgs#zellij</code></p>
</section>
<section id="vscode" class="level2">
<h2 class="anchored" data-anchor-id="vscode">Vscode</h2>
<p>Install these vscode extensions, and their dependencies (should be pulled automatically):</p>
<ul>
<li><a href="https://marketplace.visualstudio.com/items?itemName=redhat.ansible">Ansible</a></li>
<li><a href="https://marketplace.visualstudio.com/items?itemName=quarto.quarto">Quarto</a></li>
<li>If using vscode with WSL, then <a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-wsl">WSL</a></li>
</ul>
<p>Personal preference, but I like to <a href="https://stackoverflow.com/a/74409136">disable acceptance of the autocomplete suggestion on enter</a>. This can be particularly annoying in languages like ansible or python, where you have to hit enter to go to the next line.</p>
</section>
</section>
<section id="playing-and-developing" class="level1">
<h1>Playing and Developing</h1>
<section id="playing" class="level2">
<h2 class="anchored" data-anchor-id="playing">Playing</h2>
<p><code>git clone https://github.com/CSUN-CCDC/CCDC-2023</code></p>
<p>When in the root of this git repo, you can run <code>nix-shell</code> to get a full development environment. It includes tools like ansible, ansible checking, vagrant, and more.</p>
</section>
</section>
<section id="for-developers-only" class="level1 hidden">
<h1>For developers only</h1>
<p>These are personal notes, for myself and anyone else who wants to work on this guide.</p>
<p><a href="https://github.com/ppggff/vagrant-qemu">Qemu provider</a>? That should work on everything, although I can’t find speed benchmarks for pure qemu/qemu + TCG (windows 10). Will this take advantage of HVF (hardware accelerated cpu instructions) on Mac?</p>
<p>I tested something a little bit, but it was so slow that SSH timed out. This doesn’t seem to be feasible.</p>
<p>Libvirt on macos: <a href="https://libvirt.org/macos.html" class="uri">https://libvirt.org/macos.html</a></p>
<p>Nested virtualization in wsl (working on 11):</p>
<p><a href="https://www.paralint.com/2022/11/find-new-modified-and-unversioned-subversion-files-on-windows">Run an hardware accelerated Fuchsia emulator on WSL2</a></p>
<p><a href="https://docs.docker.com/desktop/wsl/" class="uri">https://docs.docker.com/desktop/wsl/</a></p>
<p>Virtualbox and hyperv at the same time is a bit tricky, so you might have to follow <a href="https://stackoverflow.com/a/69896662">this stackoverflow answer</a></p>
<p><a href="https://code.visualstudio.com/docs/remote/wsl-tutorial" class="uri">https://code.visualstudio.com/docs/remote/wsl-tutorial</a></p>
<p><a href="https://learn.microsoft.com/en-us/windows/wsl/tutorials/wsl-vscode" class="uri">https://learn.microsoft.com/en-us/windows/wsl/tutorials/wsl-vscode</a></p>
</section>



 ]]></description>
  <category>linux</category>
  <guid>https://moonpiedumplings.github.io/guides/ccdc-env/</guid>
  <pubDate>Wed, 15 Nov 2023 08:00:00 GMT</pubDate>
</item>
<item>
  <title>Linux and Programming Related Twitch Streamers</title>
  <link>https://moonpiedumplings.github.io/blog/twitch/</link>
  <description><![CDATA[ 




<p>I like to watch people program on twitch. Seeing people suffer with code reminds me that I am not alone.</p>
<p>I may be missing a few, so I will add them onto this list as I find them.</p>
<p>In addition to that, the notes on their content and OS are as of when I last watched them, so they may be inaccurate. If people stop being programmers, then I will take them offline.</p>
<p>In no particular order, here the ones I’ve seen around:</p>
<table class="table">
<thead>
<tr class="header">
<th>Streamer</th>
<th>Content</th>
<th>Linux User?</th>
<th>Misc Notes</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><a href="https://www.twitch.tv/het_tanis">het_tanis</a></td>
<td>Teaches linux, k8s devops, and ansible related things on stream.</td>
<td>Windows as desktop, but uses xenserver (kinda unorthodox choice IMO) as a VM host for linux machines of every type</td>
<td>Killercoda courses can be found <a href="https://killercoda.com/het-tanis">here</a></td>
</tr>
<tr class="even">
<td><a href="https://www.twitch.tv/cidermcdread">cidermcdread</a></td>
<td>Just Chatting, Baldur’s Gate, other various games.</td>
<td>Nixos</td>
<td>Also discusses philosophical and political topics in a very engaging manner</td>
</tr>
<tr class="odd">
<td><a href="https://www.twitch.tv/chrissiecodes">chrissiecodes</a></td>
<td>Python development, often for stream related features</td>
<td>Ubuntu in WSL</td>
<td>Very active and knowledgable chat which is fun to be in.</td>
</tr>
<tr class="even">
<td><a href="https://www.twitch.tv/trshpuppy">trshpuppy</a></td>
<td>python, javascript, and CTF’s/hacking</td>
<td>Windows, but Kali in a VM</td>
<td></td>
</tr>
<tr class="odd">
<td><a href="https://www.twitch.tv/hedge_in">hedge_in</a></td>
<td>Low level operating system and machine learning</td>
<td>No</td>
<td>Often is studying these topics on stream for class</td>
</tr>
<tr class="even">
<td><a href="https://www.twitch.tv/pwncollege">pwncollege</a></td>
<td>Various college clacsses in the cybersecurity curriculum of Arizona State University</td>
<td>Various teachers some of whom probably use linux, but the format the classes are in does not let me see or ask</td>
<td></td>
</tr>
<tr class="odd">
<td><a href="https://www.twitch.tv/cyberkaida">cyberkaida</a></td>
<td>Low level operating programming, python. Reverse engineering</td>
<td>Macos, but does work for linux like on the rasperry pi</td>
<td></td>
</tr>
<tr class="even">
<td><a href="https://www.twitch.tv/lcolonq">lcolonq</a></td>
<td>Rust programming, or whatever language emacs uses.</td>
<td>Nixos</td>
<td><p>Uses emacs window manager as his main wm.</p>
<p>Wrote his own vtuber rendering engine, which renders to ascii art in the terminal.</p></td>
</tr>
<tr class="odd">
<td><a href="https://www.twitch.tv/badcop_">badcop_</a></td>
<td>Gamejams, showing off content and programming for. Stream related features.</td>
<td>WSL</td>
<td></td>
</tr>
<tr class="even">
<td><a href="https://www.twitch.tv/theyagich">theyagich</a></td>
<td>Gamedev in Godot</td>
<td>Manjaro</td>
<td></td>
</tr>
<tr class="odd">
<td><a href="https://www.twitch.tv/cybersteffie">cybersteffie</a></td>
<td>Seems to be doing IRL more often recently, but has done programming work on stream</td>
<td>WSL</td>
<td></td>
</tr>
<tr class="even">
<td><a href="https://www.twitch.tv/ambivalentbunnie">ambivalentbunnie</a></td>
<td>Often studies for high level machine learning and data science classes on stream</td>
<td>No</td>
<td></td>
</tr>
<tr class="odd">
<td><a href="https://www.twitch.tv/expiredpopsicle">ExpiredPopsicle</a></td>
<td>Gamdev/vtuber dev in godot. Also plays modded doom.</td>
<td>Debian Stable</td>
<td></td>
</tr>
<tr class="even">
<td><a href="https://www.twitch.tv/rw_grim">rw_grim</a></td>
<td>Work on open source source multi chat client <a href="https://pidgin.im/">pidgin</a></td>
<td>Debian Unstable, sometimes experimental</td>
<td></td>
</tr>
<tr class="odd">
<td><a href="https://www.twitch.tv/hexadigital">hexadigital</a></td>
<td>Various games</td>
<td>Manjaro on Desktop, Debian on server</td>
<td>Does not talk, but does chat</td>
</tr>
<tr class="even">
<td><a href="https://www.twitch.tv/quantumapprentice">quantumapprentice</a></td>
<td>various programming projects</td>
<td>Alternates between Linux Mint and Windows</td>
<td></td>
</tr>
<tr class="odd">
<td><a href="https://www.twitch.tv/thealtf4stream">TheAltF4Stream</a></td>
<td>Cloud, Devops, Kubernetes</td>
<td>Mac on desktop</td>
<td></td>
</tr>
<tr class="even">
<td><a href="https://www.twitch.tv/melkey">Melkey</a></td>
<td>Web/Fullstack. ML/AI</td>
<td>Ubuntu I think, but I will have to confirm</td>
<td></td>
</tr>
<tr class="odd">
<td><a href="https://www.twitch.tv/enlynn_">enlynn_</a></td>
<td>Various programming</td>
<td>Endeavor OS</td>
<td></td>
</tr>
<tr class="even">
<td><a href="https://www.twitch.tv/purplelf">purplelf</a></td>
<td>Works at Gumroad, where she does Ruby and React, on stream</td>
<td>Nobara</td>
<td></td>
</tr>
<tr class="odd">
<td><a href="https://www.twitch.tv/anthonywritescode">anthonywritescode</a></td>
<td>Python developer</td>
<td>Current Ubuntu LTS in a virtual machine</td>
<td></td>
</tr>
<tr class="even">
<td><a href="https://www.twitch.tv/elvensourcerer">elvensourcerer</a></td>
<td>Develops QT in python</td>
<td>Nixos</td>
<td></td>
</tr>
<tr class="odd">
<td><a href="https://www.twitch.tv/lastmiles">lastmiles</a></td>
<td>Various things in Linux and FreeBSD. Setting up Cuda in a Bhyve VM running linux when I was last there.</td>
<td>FreeBSD 15 (as of 1/18/2024).</td>
<td></td>
</tr>
<tr class="even">
<td><a href="https://www.twitch.tv/shrutivtuber">shrutivtuber</a></td>
<td>Learning rust on stream</td>
<td>Arch Linux</td>
<td></td>
</tr>
<tr class="odd">
<td><a href="https://www.twitch.tv/kodder">kodder</a></td>
<td>Various devops and system admin things</td>
<td>Regolith on Pop_OS! on desktop, Proxmox on the one server I saw</td>
<td>Said he was gonna stream once a week on sunday</td>
</tr>
<tr class="even">
<td><a href="https://www.twitch.tv/0xfaraday">0xfaraday</a></td>
<td>Go and python programming for cybersecurity related tools</td>
<td>Kali Linux in a VM, I’m assuming windows on host</td>
<td>Has participated as a blue teamer in <a href="https://www.nationalccdc.org/">CCDC</a></td>
</tr>
<tr class="odd">
<td><a href="https://www.youtube.com/@TheZabbly">Zabbly (YT)</a></td>
<td>Develops <a href="https://github.com/lxc/incus">Incus</a> on stream</td>
<td>Either Ubuntu or Debian, they’re never live when I have time to ask</td>
<td></td>
</tr>
<tr class="even">
<td><a href="https://www.youtube.com/@AsahiLina">Asahi Lina (YT)</a></td>
<td>Develops various things on stream, including <a href="https://asahilinux.org/">Asahi Linux</a></td>
<td>Asahi Linux</td>
<td></td>
</tr>
<tr class="odd">
<td><a href="https://www.twitch.tv/ategondev">ategondev</a></td>
<td>Games jams and gamedev</td>
<td>Windows</td>
<td>Moderates and develops for the <a href="https://programming.dev">programming.dev</a> lemmy instance.</td>
</tr>
</tbody>
</table>



 ]]></description>
  <guid>https://moonpiedumplings.github.io/blog/twitch/</guid>
  <pubDate>Thu, 02 Nov 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>CCDC Learning Resources</title>
  <link>https://moonpiedumplings.github.io/guides/ccdc-learning/</link>
  <description><![CDATA[ 




<p>This document was designed for our CSUN CCDC team, but since it’s useful, I am putting it on my personal blog as well.</p>
<p>Prerequisites:</p>
<ul>
<li>Creating a <a href="https://en.wikipedia.org/wiki/Virtual_machine">virtual machine</a>. Install the <a href="https://www.virtualbox.org/">virtualbox</a> software, and download the <a href="https://www.osboxes.org/linux-mint/">linux mint image from osboxes.org</a>. With this, the activities in the below resources will be a lot more interactive.</li>
<li>Github account. Join our CSUN-CCDC organization</li>
</ul>
<section id="linux" class="level1">
<h1>Linux</h1>
<section id="guided" class="level2">
<h2 class="anchored" data-anchor-id="guided">Guided</h2>
<p>Some resources to get started on your linux journey.</p>
<p><a href="https://linuxjourney.com/" class="uri">https://linuxjourney.com/</a></p>
<p>Linuxjourney is a very good guide, but it has some stuff not relevant to what we are doing.</p>
<p>You don’t need to networking nomad, but you do need to do grasshopper and journeyman.</p>
<p>Out of the stuff on those two programs, skip:</p>
<ul>
<li>Text-fu</li>
<li>Text-fu advanced</li>
</ul>
<p>We will probably either be using nano or automation/scripting to edit files.</p>
<ul>
<li><p>Boot processes</p></li>
<li><p>From init, skip anything not relevant to systemd. No one uses upstart or systemv anymore.</p></li>
</ul>
</section>
</section>
<section id="ansible" class="level1">
<h1>Ansible:</h1>
<p><a href="https://www.youtube.com/playlist?list=PLT98CRl2KxKEUHie1m24-wkyHpEsa4Y70">this video series</a> by learnlinuxtv.</p>
<p>Follow along using your virtual machine. You can setup ssh, or you can have an inventory of <code>localhost</code> to run playbooks on the same machine as you are currently on.</p>
<p>Once you have experimented with ansible enough, you can also experiment with running our ansible playbooks.</p>
</section>
<section id="windows" class="level1">
<h1>Windows</h1>
<section id="active-directory" class="level2">
<h2 class="anchored" data-anchor-id="active-directory">Active Directory</h2>
<p><a href="https://www.youtube.com/watch?v=zyud11pz40s">A cat explains active directory</a></p>
<p>High level overview, covering some of the history and many of the concepts behind active directory.</p>
<p><a href="https://www.youtube.com/watch?v=7kWdCzswPIc">A cat explains kerberos</a></p>
<p>I have not watched yet, but based on the above video, which mentions how active directory includes kerberos, it is probably relevant.</p>
<p><a href="https://learn.microsoft.com/en-us/training/modules/introduction-to-ad-ds/">Microsoft’s Intro to AD</a></p>
<p><a href="https://github.com/Orange-Cyberdefense/GOAD">GOAD - Game of Active Direcotyr</a></p>
<p>This is a highly insecure active directory which can be auto deployed to hyperv, proxmox, virtualbox, or azure. It uses a mix of ansible, terraform, and packer to provision and deploy.</p>


</section>
</section>

 ]]></description>
  <category>linux</category>
  <guid>https://moonpiedumplings.github.io/guides/ccdc-learning/</guid>
  <pubDate>Sat, 28 Oct 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Containers (that run on linux)</title>
  <link>https://moonpiedumplings.github.io/talks/containers/</link>
  <description><![CDATA[ 




<p>The layer8 Cybersecurity club as Cal State Northridge asked me to do a talk on linux containers (not to be confused with <a href="https://en.wikipedia.org/wiki/LXC">LXC</a>).</p>
<p>In this presentation, I talk a bit about the history of containers, types, and the various ways you can run a container on a system.</p>
<p>I recorded it, although the recording isn’t very good. In addition to that, the slides are also public, and they are <a href="../../talks/containers/revealjs.html">linked here</a></p>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/w2vRWGVOs1E" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>



 ]]></description>
  <category>linux</category>
  <guid>https://moonpiedumplings.github.io/talks/containers/</guid>
  <pubDate>Mon, 23 Oct 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Being an internet helper</title>
  <link>https://moonpiedumplings.github.io/blog/helping/</link>
  <description><![CDATA[ 




<p><em>The below is my “literacy narrative essay”, for an english class</em></p>
<p>I was so close to hacking this system. Using a USB thumb drive as a boot device, I booted a different operating system on the computer, which originally ran windows. I then used some digital tools to enable the local administrator account, in a passwordless mode. When I removed the USB thumb drive, and restarted the machine, it returned to the innocuous login prompt, asking me to sign in with my school credentials. I ignored that, and signed into the admin account instead. I’m in.</p>
<p>It was a different kind of puzzle. But just like any other puzzle, I solved it for the gratification, rather than there being some end goal. Eventually, the computer’s were reset, and all my hard work was lost.</p>
<p>Later, when my computer was becoming too slow, I felt an itch in the back of my mind again. A new puzzle.</p>
<p>How do I make my computer faster?</p>
<p>I was tinkering already, and I had some ideas of how to make it faster, but I needed reassurance. Unfortunately, not all puzzles can be solved alone. I ended up asking for help on the internet.</p>
<p>Although 4 years ago, and the post has since been deleted, although not by me, I still remember what I asked for. I wanted to know how to replace the lowest level of software on my computer, the operating system, going from the slower Windows that is available on most devices by default, to the more difficult to use, but faster, Linux. However, I did not want to break the existing Windows install, and I also wanted to have “save points” of my linux installation, so that I could tinker and then restore my system to a previous state, giving my system some resilience.</p>
<p>The users were patient, and kind, and although they didn’t hold my hand for the entire process, they pointed me in the right directions, teaching me terminology and pointing me to resources that I could use to help myself. Eventually, I managed to solve that puzzle, and some variations of the changes I made, I do on all computers I own today.</p>
<p>After I ran out of puzzles to solve, I began solving other people’s puzzles. I would watch the forums religiously, viewing the newest posts first, so I could contribute before someone else. Sometimes, things were easy, and it was simply a case of a newer user not knowing what to search for, and I could point them in the right direction. For example, people would often ask if their hardware is compatible with Linux, so I would point them to a site that extensively documents hardware compatibility. With every reply thanking me, I felt immense gratification.</p>
<p>Of course, things wouldn’t always be as simple as that. Often, users weren’t simply seeking to do something, but to understand something as well. In this case where existing resources weren’t enough, I had to explain step by step.</p>
<p>One user was curious about how Linux software distribution works. What makes it different from Windows, or Mac, they asked? As painful as it was to type from my phone, I presented the unbiased reality of how Linux software management is objectively superior. Because some things, you have to explain personally, and you can’t point people to external resources.</p>
<p>Very often, new users don’t know how to ask for help, and you have to request for more information from them. For some reason, people often have trouble running games on Linux, but they won’t mention what game they are trying to play? I don’t understand how people understand how to get help if they don’t give enough information, but asking for help isn’t really something that comes intuitively to people.</p>
<p>Of course, once I know what game they play, I can give more detailed help. One time, there was a user who had nothing but a chromebook, but desired to get more performance out of it so that they could play one of my favorite games. Over the course of several days via purely discord text chats, I helped this person with installing Linux and installing the game on an unsupported device and operating system. But despite all that, their efforts didn’t bear much fruit, and they ended up giving up.</p>
<p>Although frustrating to see someone give up, it happens sometimes. On the other end, I’ve had to give up on cases as well. In one online community I followed, there was a constant influx of users asking similar or even the same questions. Although many people, including me, first started out by answering them, eventually the community got tired and sometimes even hostile to such users.</p>
<p>On the internet, “Help Vampires” are one type of person that appears in forums. This term refers to people who are unwilling to do the bare minimum of research, or put any effort into any problem. An infrequent occurrence on the internet, It’s difficult to help someone if they don’t help themselves. In many cases, it’s impossible.</p>
<p>A similar thing happened when a user was attempting to play a video game on Linux, and got an error about the kernel (the lowest lowest level of software, part of, but also under the operating system) not supporting a feature. Because of this, they were attempting to install a new kernel. However, what I found strange was the error message was requesting a feature that normally is not needed. The actual issue this user was encountering was that they enabled a non-necessary feature in their game launcher.</p>
<p>This is a common occurrence, common enough that there is actually a term for it: the XY problem where a user attempts to get help with their attempted solution, rather than their actual problem. Rather than explaining the whole XY problem, I would usually refer people to this website: https://xyproblem.info/.</p>
<p>In another post, a user asked if anyone has experience with the integration of two pieces of technology, one being a VPN, and the other being a management platform. They gave no other information. What this user was actually asking was: “Is there anybody around with experience with these techs that is willing to look into my problem, including extracting what my actual problem is me because I can’t be bothered to explain it?”</p>
<p>This is another occurrence on the internet that happens frequently enough that there is a term to refer to it, and a website which I refer people to: https://dontasktoask.com. Don’t ask your question, simply ask it to save everybody’s time.</p>
<p>As long as you have technical literacy, giving help to people troubleshooting on the internet is easy. Doing it nearly daily, for 4 years, without being burned out, is not. Many user’s helped out for a short period of time, to give back to the community, before becoming burned out and stopping. There were very few constants, people you could recognize just by their username, because they were that consistent.</p>
<p>I was one of them. Linux gave me a lot. Rather than gaming, I was tinkering. Working with Linux is likely what my job will be. But I didn’t, and still don’t, have the particular skill set to contribute to the Linux community through programming. I do intend to learn, but at the same time, I’ve come to love being a “helper” on the internet. The pleasure I get is threefold, one part for solving a problem, another for helping a stranger, and yet another for giving to this community that was willing to invest in me, back when I was barely a teen and didn’t know much.</p>



 ]]></description>
  <category>linux</category>
  <guid>https://moonpiedumplings.github.io/blog/helping/</guid>
  <pubDate>Mon, 23 Oct 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>A notes format that I can automatically convert to flashcards?</title>
  <link>https://moonpiedumplings.github.io/playground/flashcards/</link>
  <description><![CDATA[ 




<p>My goal is to have a notes format that I can automatically convert to flashcards, for studying.</p>
<p>So quarto has support for a format called <a href="https://quarto.org/docs/presentations/revealjs/">revealjs</a>.</p>
<p>Revealjs is basically presentations, like powerpoint or google slides, but in your browser. Although you can also print them to pdf.</p>
<p>Anyway, I was in need of some flashcards for my class and I wanted to see if I could use revealjs for this.</p>
<p>to create slides, just use a second level header:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## Getting up</span></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">- </span>Turn off alarm</span>
<span id="cb1-4"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">- </span>Get out of bed</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## Going to sleep</span></span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">- </span>Get in bed</span>
<span id="cb1-9"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">- </span>Count sheep</span></code></pre></div>
<p>However, I don’t really want a title, so I can simply have the second level header (<code>##</code>), without a title, and it still creates another slide.</p>
<p>By default, lists are revealed all at once. To change this, in your quarto heading options:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb2-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">revealjs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">incremental</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span></code></pre></div>
<p>Actually, I like content pauses better.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## Slide with a pause</span></span>
<span id="cb3-2"></span>
<span id="cb3-3">content before the pause</span>
<span id="cb3-4"></span>
<span id="cb3-5">. . .</span>
<span id="cb3-6"></span>
<span id="cb3-7">content after the pause</span></code></pre></div>
<p>Now, how can I randomize slide orders?</p>
<p>According to the <a href="https://github.com/hakimel/reveal.js/pull/1506">revealjs pull where this feature was implemented</a>:</p>
<p>I can have a range of slides, something like:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// for everything</span></span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Reveal.configure({ random: true });</span></span>
<span id="cb4-3"></span>
<span id="cb4-4">Reveal<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">configure</span>({</span>
<span id="cb4-5">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">random</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {</span>
<span id="cb4-6">                    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">rangeStart</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-7">                    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">rangeEnd</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span></span>
<span id="cb4-8">                }</span>
<span id="cb4-9">            })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>No wait, quarto has an option to shuffle the slides.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shuffle</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span></code></pre></div>
<p>Now, is there a way to randomize the the list? I want the list options to sometimes have the name, and sometimes have the content, and you have to match which with which.</p>
<p>chatgpt gave me this:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode html code-with-copy"><code class="sourceCode html"><span id="cb6-1"></span>
<span id="cb6-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;!DOCTYPE</span> html<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb6-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">html</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> lang</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"en"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb6-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">head</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb6-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">meta</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> charset</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UTF-8"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb6-6">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">meta</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"viewport"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> content</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"width=device-width, initial-scale=1.0"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb6-7">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">title</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Randomized List on Page Load<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">title</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb6-8"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">head</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb6-9"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">body</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb6-10">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">h1</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Randomized List<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">h1</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb6-11">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ul</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"randomList"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb6-12">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">li</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Item 1<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">li</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb6-13">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">li</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Item 2<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">li</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb6-14">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">li</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Item 3<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">li</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb6-15">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">li</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Item 4<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">li</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb6-16">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">li</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Item 5<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">li</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb6-17">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ul</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb6-18"></span>
<span id="cb6-19">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb6-20">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addEventListener</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DOMContentLoaded"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>() {</span>
<span id="cb6-21">            <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getElementById</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"randomList"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-22">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">children</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>) {</span>
<span id="cb6-23">                list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">appendChild</span>(list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">children</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Math</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-24">            }</span>
<span id="cb6-25">        })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-26">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb6-27"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">body</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb6-28"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">html</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<p>But does it work? :</p>



    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Randomized List on Page Load</title>


    <h1>Randomized List</h1>
    <ul id="randomList">
        <li>Item 1</li>
        <li>Item 2</li>
        <li>Item 3</li>
        <li>Item 4</li>
        <li>Item 5</li>
    </ul>

    <script>
        document.addEventListener("DOMContentLoaded", function() {
            const list = document.getElementById("randomList");
            for (let i = list.children.length; i >= 0; i--) {
                list.appendChild(list.children[Math.random() * i | 0]);
            }
        });
    </script>


<p>But it doesn’t work in revealjs, as revealjs won’t run show thing incrementally.</p>
<p>Rather than lists, can I just have javascript manipulate classes and divs created by pandoc?</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb7-1">::: {#myCustomBlock .custom-class}</span>
<span id="cb7-2">This is a custom block that can be manipulated by JavaScript.</span>
<span id="cb7-3">:::</span></code></pre></div>
<p>This should be able to be changed by pandoc.</p>
<p>And then I can shuffle them with something like:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb8-1">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shuffleBlocks</span>() {</span>
<span id="cb8-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> container <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getElementById</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blocksContainer"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> blocks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Array</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">from</span>(container<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">children</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> blocks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>) {</span>
<span id="cb8-5">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Math</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">floor</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Math</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-6">        [blocks[i]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> blocks[j]] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [blocks[j]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> blocks[i]]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-7">    }</span>
<span id="cb8-8">    container<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">innerHTML</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-9">    blocks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">forEach</span>(block <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> container<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">appendChild</span>(block))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-10">}</span>
<span id="cb8-11"></span>
<span id="cb8-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Shuffle the blocks when the page loads</span></span>
<span id="cb8-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">window</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addEventListener</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DOMContentLoaded"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> shuffleBlocks)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>So to test:</p>
<p>Shuffle blocks:</p>
<div id="blockContainer">
<div class="block">
<p>This is Block 1.</p>
</div>
<div class="block">
<p>This is Block 2.</p>
</div>
<div class="block">
<p>This is Block 3.</p>
</div>
</div>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode html code-with-copy"><code class="sourceCode html"><span id="cb9-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb9-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shuffleBlocks</span>() {</span>
<span id="cb9-3">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> container <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">querySelector</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#blockContainer"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-4">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> blockDivs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Array</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">from</span>(container<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">querySelectorAll</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".block"</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-5">        </span>
<span id="cb9-6">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Shuffle the order of the block divs</span></span>
<span id="cb9-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> blockDivs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>) {</span>
<span id="cb9-8">            <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Math</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">floor</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Math</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-9">            <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> temp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> blockDivs[i]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-10">            blockDivs[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> blockDivs[j]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-11">            blockDivs[j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> temp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-12">        }</span>
<span id="cb9-13">        </span>
<span id="cb9-14">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Append shuffled block divs back to the container</span></span>
<span id="cb9-15">        blockDivs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">forEach</span>(blockDiv <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb9-16">            container<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">appendChild</span>(blockDiv)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-17">        })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-18">    }</span>
<span id="cb9-19"></span>
<span id="cb9-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Shuffle the blocks when the page loads</span></span>
<span id="cb9-21">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">window</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addEventListener</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DOMContentLoaded"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> shuffleBlocks)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-22"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<script>
    function shuffleBlocks() {
        const container = document.querySelector("#blockContainer");
        const blockDivs = Array.from(container.querySelectorAll(".block"));
        
        // Shuffle the order of the block divs
        for (let i = blockDivs.length - 1; i > 0; i--) {
            const j = Math.floor(Math.random() * (i + 1));
            const temp = blockDivs[i];
            blockDivs[i] = blockDivs[j];
            blockDivs[j] = temp;
        }
        
        // Append shuffled block divs back to the container
        blockDivs.forEach(blockDiv => {
            container.appendChild(blockDiv);
        });
    }

    // Shuffle the blocks when the page loads
    window.addEventListener("DOMContentLoaded", shuffleBlocks);
</script>
<p>After many iterations with chatgpt, I finally got it to shuffle content.</p>
<p>Now is there a way to scale this across multiple slides? I don’t want to have to copy and paste this for the every single block. In fact, can I just make a custom html element that shuffles them?</p>
<p>So chatgpt gave me a custom html element class. It gave me a lot, actually, and none of them worked. So I’m giving up on that for now.</p>
<p>However, revealjs does support a grid slide layout, and it groups vertical slides together while randomizing their order, but it also randomizes the horizontal slides as well.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb10-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">revealjs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb10-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">incremental</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb10-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> dark</span></span>
<span id="cb10-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shuffle</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb10-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">navigation-mode</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> grid</span></span></code></pre></div>
<p>Eventually, I gave up on the revealjs format, after I found out that this flashcards app, <a href="https://apps.ankiweb.net/">anki</a></p>
<p>In my research, I found some tools which can convert other formats to anki:</p>
<table class="table">
<thead>
<tr class="header">
<th>Software</th>
<th>Last update?</th>
<th>Packaged?</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><a href="https://github.com/nx10/md2anki">md2anki</a></td>
<td>4 years ago</td>
<td>pypi</td>
</tr>
<tr class="even">
<td><a href="https://github.com/Mochitto/Markdown2Anki">markdown2anki</a></td>
<td>2 weeks ago</td>
<td>pypi</td>
</tr>
<tr class="odd">
<td><a href="https://github.com/lukesmurray/markdown-anki-decks">markdown-anki-decks</a></td>
<td>1 year ago</td>
<td>pypi, but also in nixpkgs</td>
</tr>
</tbody>
</table>
<p>I did some testing. markdown-anki-decks is exceedingly simply, with something like:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"># Deck title</span></span>
<span id="cb11-2"></span>
<span id="cb11-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">## card front</span></span>
<span id="cb11-4"></span>
<span id="cb11-5">card back</span></code></pre></div>
<p>to create a deck.</p>
<p>I also experimented with markdown2anki. It’s way, way more complex. Unlike the previous option, it has many, many options.</p>
<p>To create a simple flashcard:</p>
<p>```{.markdown}</p>



 ]]></description>
  <guid>https://moonpiedumplings.github.io/playground/flashcards/</guid>
  <pubDate>Wed, 04 Oct 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Podman vs Docker</title>
  <link>https://moonpiedumplings.github.io/playground/podman-docker/</link>
  <description><![CDATA[ 




<p>So I’ve been having some trouble, not with docker itself, but the way it interacts with the rest of the system. The big thing is that docker overwrites iptables rules, meaning any other bridges won’t work properly unless you set up iptables rules with the -I DOCKER-USER, which specifically sits in front of docker.</p>
<p>I encountered <a href="https://discuss.linuxcontainers.org/t/lxd-4-12-container-networking-failure-with-docker/10487/9">this issue</a> with linux containers, where the lxc containers did not have networking when docker was installed.</p>
<p>I also encoutered a similar issue when trying to setup NAT, the instructions on the <a href="https://wiki.archlinux.org/title/Internet_sharing#Enable_NAT">arch wiki</a> stated that the steps for machines that had docker installed were different but I did not realize this in my previous research.</p>
<p>The hope is that podman will have no such issue. But does podman have every feature of docker?</p>
<p>The first thing to consider is that podman has a docker-compat setup, where it gives you a compatibility command:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb1-1">[moonpie@cachyos-x8664 containers]$ docker ps</span>
<span id="cb1-2">Emulate Docker CLI using podman. Create /etc/containers/nodocker to quiet msg.</span>
<span id="cb1-3">CONTAINER ID  IMAGE       COMMAND     CREATED     STATUS      PORTS       NAMES</span></code></pre></div>
<p>It’s pretty good. Except:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1">[moonpie@cachyos-x8664 registries.conf.d]$ docker pull jc21/nginx-proxy-manager:latest</span>
<span id="cb2-2">Emulate Docker CLI using podman. Create /etc/containers/nodocker to quiet msg.</span>
<span id="cb2-3">Error: short-name "jc21/nginx-proxy-manager:latest" did not resolve to an alias and no unqualified-search registries are defined in "/etc/containers/registries.conf"</span></code></pre></div>
<p>Unlike docker, podman does not have the &lt;docker.io&gt; as a default registry. You can still pull with <code>docker.io/jc21/nginx-proxy-manager</code>, but it’s inconvinient to change every script and whatnot to be like that.</p>
<p>The Red Hat Enable Sysadmin has a <a href="https://www.redhat.com/sysadmin/manage-container-registries">blog on this</a>. In the “pulling by shortnames” section they changed some podman settings:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/etc/containers/registries.conf</strong></pre>
</div>
<pre class="init" data-filename="/etc/containers/registries.conf"><code>...
...
unqualified-search-registries = ['registry.fedoraproject.org', 'registry.access.redhat.com', 'registry.centos.org', 'docker.io']
...
...</code></pre>
</div>
<p>This makes it so that podman will search for these images when not specificially told a registry.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb4-1">[moonpie@cachyos-x8664 containers]$ docker pull jc21/nginx-proxy-manager</span>
<span id="cb4-2">Emulate Docker CLI using podman. Create /etc/containers/nodocker to quiet msg.</span>
<span id="cb4-3">? Please select an image: </span>
<span id="cb4-4">  ▸ registry.fedoraproject.org/jc21/nginx-proxy-manager:latest</span>
<span id="cb4-5">    registry.access.redhat.com/jc21/nginx-proxy-manager:latest</span>
<span id="cb4-6">    registry.centos.org/jc21/nginx-proxy-manager:latest</span>
<span id="cb4-7">    docker.io/jc21/nginx-proxy-manager:latest</span></code></pre></div>
<p>Wow, this is pretty cool. It gives you an option to select when you have multiple default registries. If you only have one, then it just immediately defaults to that.</p>
<p>Podman also has <a href="https://www.redhat.com/sysadmin/podman-docker-compose">support for docker-compose</a></p>
<p>Once you have the docker compatibility package installed, simply start the podman service/socket, and docker-compose will work.</p>
<p>Except, I am wondering, will docker networks work? Podman seems to do something different, with podman pods, which don’t behave the same way as docker networks.</p>
<p>To test, I have created a simple docker-compose.yml, which has two contianers on the same network:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">version</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'3'</span></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">services</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">alpine_container_1</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> alpine:latest</span></span>
<span id="cb5-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">command</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tail"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-f"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/dev/null"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  # Keeps the container running</span></span>
<span id="cb5-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">networks</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> my_network</span></span>
<span id="cb5-8"></span>
<span id="cb5-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">alpine_container_2</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> alpine:latest</span></span>
<span id="cb5-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">command</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tail"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-f"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/dev/null"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  # Keeps the container running</span></span>
<span id="cb5-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">networks</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> my_network</span></span>
<span id="cb5-14"></span>
<span id="cb5-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">networks</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">my_network</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span></code></pre></div>
<p>It seems to work, but….</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb6-1">[moonpie@cachyos-x8664 podman-docker]$ sudo podman network inspect podman-docker_my_network</span>
<span id="cb6-2">[</span>
<span id="cb6-3">     {</span>
<span id="cb6-4">          "name": "podman-docker_my_network",</span>
<span id="cb6-5">          "id": "0b11ee2d93ccd3427374b667b55dd7c42f12d68d296f6dca2ccad12a491b7e7d",</span>
<span id="cb6-6">          "driver": "bridge",</span>
<span id="cb6-7">          "network_interface": "podman1",</span>
<span id="cb6-8">          "created": "2023-09-03T06:21:14.350164238-07:00",</span>
<span id="cb6-9">          "subnets": [</span>
<span id="cb6-10">               {</span>
<span id="cb6-11">                    "subnet": "10.89.0.0/24",</span>
<span id="cb6-12">                    "gateway": "10.89.0.1"</span>
<span id="cb6-13">               }</span>
<span id="cb6-14">          ],</span>
<span id="cb6-15">          "ipv6_enabled": false,</span>
<span id="cb6-16">          "internal": false,</span>
<span id="cb6-17">          "dns_enabled": true,</span>
<span id="cb6-18">          "labels": {</span>
<span id="cb6-19">               "com.docker.compose.network": "my_network",</span>
<span id="cb6-20">               "com.docker.compose.project": "podman-docker",</span>
<span id="cb6-21">               "com.docker.compose.version": "2.20.3"</span>
<span id="cb6-22">          },</span>
<span id="cb6-23">          "options": {</span>
<span id="cb6-24">               "isolate": "true"</span>
<span id="cb6-25">          },</span>
<span id="cb6-26">          "ipam_options": {</span>
<span id="cb6-27">               "driver": "host-local"</span>
<span id="cb6-28">          }</span>
<span id="cb6-29">     }</span>
<span id="cb6-30">]</span>
<span id="cb6-31">[moonpie@cachyos-x8664 podman-docker]$ </span></code></pre></div>
<p>Whereas, when using <code>docker network inspect</code>:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb7-1">moonpie@office:~$ docker network inspect mine</span>
<span id="cb7-2">[</span>
<span id="cb7-3">    {</span>
<span id="cb7-4">        "Name": "mine",</span>
<span id="cb7-5">        "Id": "73125f7a201062e8561f6d34110c2fdca2a3e21c423998e58da9ded56222a954",</span>
<span id="cb7-6">        "Created": "2023-02-23T03:57:12.249530356Z",</span>
<span id="cb7-7">        "Scope": "local",</span>
<span id="cb7-8">        "Driver": "bridge",</span>
<span id="cb7-9">        "EnableIPv6": false,</span>
<span id="cb7-10">        "IPAM": {</span>
<span id="cb7-11">            "Driver": "default",</span>
<span id="cb7-12">            "Options": {},</span>
<span id="cb7-13">            "Config": [</span>
<span id="cb7-14">                {</span>
<span id="cb7-15">                    "Subnet": "172.18.0.0/16",</span>
<span id="cb7-16">                    "Gateway": "172.18.0.1"</span>
<span id="cb7-17">                }</span>
<span id="cb7-18">            ]</span>
<span id="cb7-19">        },</span>
<span id="cb7-20">        "Internal": false,</span>
<span id="cb7-21">        "Attachable": false,</span>
<span id="cb7-22">        "Ingress": false,</span>
<span id="cb7-23">        "ConfigFrom": {</span>
<span id="cb7-24">            "Network": ""</span>
<span id="cb7-25">        },</span>
<span id="cb7-26">        "ConfigOnly": false,</span>
<span id="cb7-27">        "Containers": {</span>
<span id="cb7-28">            "01af5e2990ba9c4cee41de65500f72bd2a3c8e373bce373be251cf5a7a4549dd": {</span>
<span id="cb7-29">                "Name": "meshcentral",</span>
<span id="cb7-30">                "EndpointID": "c8b101d499a88d7c9ed0d476fa09915018e58fea0e83b24093b2d8768c12c464",</span>
<span id="cb7-31">                "MacAddress": "02:42:ac:12:00:07",</span>
<span id="cb7-32">                "IPv4Address": "172.18.0.7/16",</span>
<span id="cb7-33">                "IPv6Address": ""</span>
<span id="cb7-34">            },</span>
<span id="cb7-35">            "329b7fd59807573522a92c0e006f9cf92d44133a1f4e197d25f666a66bc5241e": {</span>
<span id="cb7-36">                "Name": "v2ray_proxy_1",</span>
<span id="cb7-37">                "EndpointID": "01ff85e55d6f1c9dee40ec09dbc258a1a5d5ad2728d35e3020d52211c076ebb1",</span>
<span id="cb7-38">                "MacAddress": "02:42:ac:12:00:03",</span>
<span id="cb7-39">                "IPv4Address": "172.18.0.3/16",</span>
<span id="cb7-40">                "IPv6Address": ""</span>
<span id="cb7-41">            },</span>
<span id="cb7-42">        },</span>
<span id="cb7-43">        "Options": {},</span>
<span id="cb7-44">        "Labels": {}</span>
<span id="cb7-45">    }</span>
<span id="cb7-46">]</span></code></pre></div>
<p>When using docker to to create networks, it tells you the ip addressed fo the containers in a network. Podman doesn’t do this.</p>
<p>But can the containers interact with eachother?</p>
<p>Yes, they can. While in one container, I could ping the other container. However, I had to get the container ip addresses by creating a shell in the containers, and then running <code>ip a</code> to view the ip addresses first.</p>
<p>Is there any way to view the container ip addresses from outside the container? Not all containers come with a shell builtin, some don’t have it for size purposes, and solely contain what is needed to run whatever application the container is packaging.</p>
<details>
<summary>
Podman inspect
</summary>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb8-1">[root@cachyos-x8664 podman-docker]# podman inspect podman-docker-alpine_container_1-1 </span>
<span id="cb8-2">[</span>
<span id="cb8-3">     {</span>
<span id="cb8-4">          "Id": "eae4cc793f5f86b69e81a785cc32df36718250436d67e1b62037414b1d8e53e7",</span>
<span id="cb8-5">          "Created": "2023-09-03T06:21:14.357752403-07:00",</span>
<span id="cb8-6">          "Path": "tail",</span>
<span id="cb8-7">          "Args": [</span>
<span id="cb8-8">               "-f",</span>
<span id="cb8-9">               "/dev/null"</span>
<span id="cb8-10">          ],</span>
<span id="cb8-11">          "State": {</span>
<span id="cb8-12">               "OciVersion": "1.1.0-rc.3",</span>
<span id="cb8-13">               "Status": "running",</span>
<span id="cb8-14">               "Running": true,</span>
<span id="cb8-15">               "Paused": false,</span>
<span id="cb8-16">               "Restarting": false,</span>
<span id="cb8-17">               "OOMKilled": false,</span>
<span id="cb8-18">               "Dead": false,</span>
<span id="cb8-19">               "Pid": 37035,</span>
<span id="cb8-20">               "ConmonPid": 37033,</span>
<span id="cb8-21">               "ExitCode": 0,</span>
<span id="cb8-22">               "Error": "",</span>
<span id="cb8-23">               "StartedAt": "2023-09-03T06:21:14.742250101-07:00",</span>
<span id="cb8-24">               "FinishedAt": "0001-01-01T00:00:00Z",</span>
<span id="cb8-25">               "Health": {</span>
<span id="cb8-26">                    "Status": "",</span>
<span id="cb8-27">                    "FailingStreak": 0,</span>
<span id="cb8-28">                    "Log": null</span>
<span id="cb8-29">               },</span>
<span id="cb8-30">               "CgroupPath": "/machine.slice/libpod-eae4cc793f5f86b69e81a785cc32df36718250436d67e1b62037414b1d8e53e7.scope",</span>
<span id="cb8-31">               "CheckpointedAt": "0001-01-01T00:00:00Z",</span>
<span id="cb8-32">               "RestoredAt": "0001-01-01T00:00:00Z"</span>
<span id="cb8-33">          },</span>
<span id="cb8-34">          "Image": "7e01a0d0a1dcd9e539f8e9bbd80106d59efbdf97293b3d38f5d7a34501526cdb",</span>
<span id="cb8-35">          "ImageDigest": "sha256:7144f7bab3d4c2648d7e59409f15ec52a18006a128c733fcff20d3a4a54ba44a",</span>
<span id="cb8-36">          "ImageName": "docker.io/library/alpine:latest",</span>
<span id="cb8-37">          "Rootfs": "",</span>
<span id="cb8-38">          "Pod": "",</span>
<span id="cb8-39">          "ResolvConfPath": "/run/containers/storage/overlay-containers/eae4cc793f5f86b69e81a785cc32df36718250436d67e1b62037414b1d8e53e7/userdata/resolv.conf",</span>
<span id="cb8-40">          "HostnamePath": "/run/containers/storage/overlay-containers/eae4cc793f5f86b69e81a785cc32df36718250436d67e1b62037414b1d8e53e7/userdata/hostname",</span>
<span id="cb8-41">          "HostsPath": "/run/containers/storage/overlay-containers/eae4cc793f5f86b69e81a785cc32df36718250436d67e1b62037414b1d8e53e7/userdata/hosts",</span>
<span id="cb8-42">          "StaticDir": "/var/lib/containers/storage/overlay-containers/eae4cc793f5f86b69e81a785cc32df36718250436d67e1b62037414b1d8e53e7/userdata",</span>
<span id="cb8-43">          "OCIConfigPath": "/var/lib/containers/storage/overlay-containers/eae4cc793f5f86b69e81a785cc32df36718250436d67e1b62037414b1d8e53e7/userdata/config.json",</span>
<span id="cb8-44">          "OCIRuntime": "crun",</span>
<span id="cb8-45">          "ConmonPidFile": "/run/containers/storage/overlay-containers/eae4cc793f5f86b69e81a785cc32df36718250436d67e1b62037414b1d8e53e7/userdata/conmon.pid",</span>
<span id="cb8-46">          "PidFile": "/run/containers/storage/overlay-containers/eae4cc793f5f86b69e81a785cc32df36718250436d67e1b62037414b1d8e53e7/userdata/pidfile",</span>
<span id="cb8-47">          "Name": "podman-docker-alpine_container_1-1",</span>
<span id="cb8-48">          "RestartCount": 0,</span>
<span id="cb8-49">          "Driver": "overlay",</span>
<span id="cb8-50">          "MountLabel": "",</span>
<span id="cb8-51">          "ProcessLabel": "",</span>
<span id="cb8-52">          "AppArmorProfile": "",</span>
<span id="cb8-53">          "EffectiveCaps": [</span>
<span id="cb8-54">               "CAP_CHOWN",</span>
<span id="cb8-55">               "CAP_DAC_OVERRIDE",</span>
<span id="cb8-56">               "CAP_FOWNER",</span>
<span id="cb8-57">               "CAP_FSETID",</span>
<span id="cb8-58">               "CAP_KILL",</span>
<span id="cb8-59">               "CAP_NET_BIND_SERVICE",</span>
<span id="cb8-60">               "CAP_SETFCAP",</span>
<span id="cb8-61">               "CAP_SETGID",</span>
<span id="cb8-62">               "CAP_SETPCAP",</span>
<span id="cb8-63">               "CAP_SETUID",</span>
<span id="cb8-64">               "CAP_SYS_CHROOT"</span>
<span id="cb8-65">          ],</span>
<span id="cb8-66">          "BoundingCaps": [</span>
<span id="cb8-67">               "CAP_CHOWN",</span>
<span id="cb8-68">               "CAP_DAC_OVERRIDE",</span>
<span id="cb8-69">               "CAP_FOWNER",</span>
<span id="cb8-70">               "CAP_FSETID",</span>
<span id="cb8-71">               "CAP_KILL",</span>
<span id="cb8-72">               "CAP_NET_BIND_SERVICE",</span>
<span id="cb8-73">               "CAP_SETFCAP",</span>
<span id="cb8-74">               "CAP_SETGID",</span>
<span id="cb8-75">               "CAP_SETPCAP",</span>
<span id="cb8-76">               "CAP_SETUID",</span>
<span id="cb8-77">               "CAP_SYS_CHROOT"</span>
<span id="cb8-78">          ],</span>
<span id="cb8-79">          "ExecIDs": [</span>
<span id="cb8-80">               "8354949b4e0bf728dafa7b3e7b857ccce18e953b0f20473dbb06fe6442bf1d12"</span>
<span id="cb8-81">          ],</span>
<span id="cb8-82">          "GraphDriver": {</span>
<span id="cb8-83">               "Name": "overlay",</span>
<span id="cb8-84">               "Data": {</span>
<span id="cb8-85">                    "LowerDir": "/var/lib/containers/storage/overlay/4693057ce2364720d39e57e85a5b8e0bd9ac3573716237736d6470ec5b7b7230/diff",</span>
<span id="cb8-86">                    "MergedDir": "/var/lib/containers/storage/overlay/bbadcba900462960315aa406866164bd58a12573e76140093563525f595b1732/merged",</span>
<span id="cb8-87">                    "UpperDir": "/var/lib/containers/storage/overlay/bbadcba900462960315aa406866164bd58a12573e76140093563525f595b1732/diff",</span>
<span id="cb8-88">                    "WorkDir": "/var/lib/containers/storage/overlay/bbadcba900462960315aa406866164bd58a12573e76140093563525f595b1732/work"</span>
<span id="cb8-89">               }</span>
<span id="cb8-90">          },</span>
<span id="cb8-91">          "Mounts": [],</span>
<span id="cb8-92">          "Dependencies": [],</span>
<span id="cb8-93">          "NetworkSettings": {</span>
<span id="cb8-94">               "EndpointID": "",</span>
<span id="cb8-95">               "Gateway": "",</span>
<span id="cb8-96">               "IPAddress": "",</span>
<span id="cb8-97">               "IPPrefixLen": 0,</span>
<span id="cb8-98">               "IPv6Gateway": "",</span>
<span id="cb8-99">               "GlobalIPv6Address": "",</span>
<span id="cb8-100">               "GlobalIPv6PrefixLen": 0,</span>
<span id="cb8-101">               "MacAddress": "",</span>
<span id="cb8-102">               "Bridge": "",</span>
<span id="cb8-103">               "SandboxID": "",</span>
<span id="cb8-104">               "HairpinMode": false,</span>
<span id="cb8-105">               "LinkLocalIPv6Address": "",</span>
<span id="cb8-106">               "LinkLocalIPv6PrefixLen": 0,</span>
<span id="cb8-107">               "Ports": {},</span>
<span id="cb8-108">               "SandboxKey": "/run/netns/netns-4a204211-d01a-6d0f-bfd3-bfc34e73885e",</span>
<span id="cb8-109">               "Networks": {</span>
<span id="cb8-110">                    "podman-docker_my_network": {</span>
<span id="cb8-111">                         "EndpointID": "",</span>
<span id="cb8-112">                         "Gateway": "10.89.0.1",</span>
<span id="cb8-113">                         "IPAddress": "10.89.0.2",</span>
<span id="cb8-114">                         "IPPrefixLen": 24,</span>
<span id="cb8-115">                         "IPv6Gateway": "",</span>
<span id="cb8-116">                         "GlobalIPv6Address": "",</span>
<span id="cb8-117">                         "GlobalIPv6PrefixLen": 0,</span>
<span id="cb8-118">                         "MacAddress": "b2:af:b4:78:28:1b",</span>
<span id="cb8-119">                         "NetworkID": "podman-docker_my_network",</span>
<span id="cb8-120">                         "DriverOpts": null,</span>
<span id="cb8-121">                         "IPAMConfig": null,</span>
<span id="cb8-122">                         "Links": null,</span>
<span id="cb8-123">                         "Aliases": [</span>
<span id="cb8-124">                              "podman-docker-alpine_container_1-1",</span>
<span id="cb8-125">                              "alpine_container_1",</span>
<span id="cb8-126">                              "eae4cc793f5f"</span>
<span id="cb8-127">                         ]</span>
<span id="cb8-128">                    }</span>
<span id="cb8-129">               }</span>
<span id="cb8-130">          },</span>
<span id="cb8-131">          "Namespace": "",</span>
<span id="cb8-132">          "IsInfra": false,</span>
<span id="cb8-133">          "IsService": false,</span>
<span id="cb8-134">          "KubeExitCodePropagation": "invalid",</span>
<span id="cb8-135">          "lockNumber": 0,</span>
<span id="cb8-136">          "Config": {</span>
<span id="cb8-137">               "Hostname": "eae4cc793f5f",</span>
<span id="cb8-138">               "Domainname": "",</span>
<span id="cb8-139">               "User": "",</span>
<span id="cb8-140">               "AttachStdin": false,</span>
<span id="cb8-141">               "AttachStdout": false,</span>
<span id="cb8-142">               "AttachStderr": false,</span>
<span id="cb8-143">               "Tty": false,</span>
<span id="cb8-144">               "OpenStdin": false,</span>
<span id="cb8-145">               "StdinOnce": false,</span>
<span id="cb8-146">               "Env": [</span>
<span id="cb8-147">                    "TERM=xterm",</span>
<span id="cb8-148">                    "container=podman",</span>
<span id="cb8-149">                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",</span>
<span id="cb8-150">                    "HOME=/root",</span>
<span id="cb8-151">                    "HOSTNAME=eae4cc793f5f"</span>
<span id="cb8-152">               ],</span>
<span id="cb8-153">               "Cmd": [</span>
<span id="cb8-154">                    "tail",</span>
<span id="cb8-155">                    "-f",</span>
<span id="cb8-156">                    "/dev/null"</span>
<span id="cb8-157">               ],</span>
<span id="cb8-158">               "Image": "docker.io/library/alpine:latest",</span>
<span id="cb8-159">               "Volumes": null,</span>
<span id="cb8-160">               "WorkingDir": "/",</span>
<span id="cb8-161">               "Entrypoint": "",</span>
<span id="cb8-162">               "OnBuild": null,</span>
<span id="cb8-163">               "Labels": {</span>
<span id="cb8-164">                    "com.docker.compose.config-hash": "6418caee2d42d6859badadf595f62af5fc514baebd949edbc3b925c9dd53ecc3",</span>
<span id="cb8-165">                    "com.docker.compose.container-number": "1",</span>
<span id="cb8-166">                    "com.docker.compose.depends_on": "",</span>
<span id="cb8-167">                    "com.docker.compose.image": "sha256:7e01a0d0a1dcd9e539f8e9bbd80106d59efbdf97293b3d38f5d7a34501526cdb",</span>
<span id="cb8-168">                    "com.docker.compose.oneoff": "False",</span>
<span id="cb8-169">                    "com.docker.compose.project": "podman-docker",</span>
<span id="cb8-170">                    "com.docker.compose.project.config_files": "/home/moonpie/vscode/moonpiedumplings.github.io/playground/podman-docker/docker-compose.yml",</span>
<span id="cb8-171">                    "com.docker.compose.project.working_dir": "/home/moonpie/vscode/moonpiedumplings.github.io/playground/podman-docker",</span>
<span id="cb8-172">                    "com.docker.compose.service": "alpine_container_1",</span>
<span id="cb8-173">                    "com.docker.compose.version": "2.20.3"</span>
<span id="cb8-174">               },</span>
<span id="cb8-175">               "Annotations": {</span>
<span id="cb8-176">                    "io.container.manager": "libpod",</span>
<span id="cb8-177">                    "org.opencontainers.image.stopSignal": "15"</span>
<span id="cb8-178">               },</span>
<span id="cb8-179">               "StopSignal": 15,</span>
<span id="cb8-180">               "HealthcheckOnFailureAction": "none",</span>
<span id="cb8-181">               "CreateCommand": [</span>
<span id="cb8-182">                    "/usr/bin/podman",</span>
<span id="cb8-183">                    "--log-level=info",</span>
<span id="cb8-184">                    "system",</span>
<span id="cb8-185">                    "service"</span>
<span id="cb8-186">               ],</span>
<span id="cb8-187">               "Umask": "0000",</span>
<span id="cb8-188">               "Timeout": 0,</span>
<span id="cb8-189">               "StopTimeout": 0,</span>
<span id="cb8-190">               "Passwd": true</span>
<span id="cb8-191">          },</span>
<span id="cb8-192">          "HostConfig": {</span>
<span id="cb8-193">               "Binds": [],</span>
<span id="cb8-194">               "CgroupManager": "systemd",</span>
<span id="cb8-195">               "CgroupMode": "private",</span>
<span id="cb8-196">               "ContainerIDFile": "",</span>
<span id="cb8-197">               "LogConfig": {</span>
<span id="cb8-198">                    "Type": "journald",</span>
<span id="cb8-199">                    "Config": null,</span>
<span id="cb8-200">                    "Path": "",</span>
<span id="cb8-201">                    "Tag": "",</span>
<span id="cb8-202">                    "Size": "0B"</span>
<span id="cb8-203">               },</span>
<span id="cb8-204">               "NetworkMode": "bridge",</span>
<span id="cb8-205">               "PortBindings": {},</span>
<span id="cb8-206">               "RestartPolicy": {</span>
<span id="cb8-207">                    "Name": "",</span>
<span id="cb8-208">                    "MaximumRetryCount": 0</span>
<span id="cb8-209">               },</span>
<span id="cb8-210">               "AutoRemove": false,</span>
<span id="cb8-211">               "VolumeDriver": "",</span>
<span id="cb8-212">               "VolumesFrom": null,</span>
<span id="cb8-213">               "CapAdd": [],</span>
<span id="cb8-214">               "CapDrop": [],</span>
<span id="cb8-215">               "Dns": [],</span>
<span id="cb8-216">               "DnsOptions": [],</span>
<span id="cb8-217">               "DnsSearch": [],</span>
<span id="cb8-218">               "ExtraHosts": [],</span>
<span id="cb8-219">               "GroupAdd": [],</span>
<span id="cb8-220">               "IpcMode": "shareable",</span>
<span id="cb8-221">               "Cgroup": "",</span>
<span id="cb8-222">               "Cgroups": "default",</span>
<span id="cb8-223">               "Links": null,</span>
<span id="cb8-224">               "OomScoreAdj": 0,</span>
<span id="cb8-225">               "PidMode": "private",</span>
<span id="cb8-226">               "Privileged": false,</span>
<span id="cb8-227">               "PublishAllPorts": false,</span>
<span id="cb8-228">               "ReadonlyRootfs": false,</span>
<span id="cb8-229">               "SecurityOpt": [],</span>
<span id="cb8-230">               "Tmpfs": {},</span>
<span id="cb8-231">               "UTSMode": "private",</span>
<span id="cb8-232">               "UsernsMode": "",</span>
<span id="cb8-233">               "ShmSize": 65536000,</span>
<span id="cb8-234">               "Runtime": "oci",</span>
<span id="cb8-235">               "ConsoleSize": [</span>
<span id="cb8-236">                    0,</span>
<span id="cb8-237">                    0</span>
<span id="cb8-238">               ],</span>
<span id="cb8-239">               "Isolation": "",</span>
<span id="cb8-240">               "CpuShares": 0,</span>
<span id="cb8-241">               "Memory": 0,</span>
<span id="cb8-242">               "NanoCpus": 0,</span>
<span id="cb8-243">               "CgroupParent": "",</span>
<span id="cb8-244">               "BlkioWeight": 0,</span>
<span id="cb8-245">               "BlkioWeightDevice": null,</span>
<span id="cb8-246">               "BlkioDeviceReadBps": null,</span>
<span id="cb8-247">               "BlkioDeviceWriteBps": null,</span>
<span id="cb8-248">               "BlkioDeviceReadIOps": null,</span>
<span id="cb8-249">               "BlkioDeviceWriteIOps": null,</span>
<span id="cb8-250">               "CpuPeriod": 0,</span>
<span id="cb8-251">               "CpuQuota": 0,</span>
<span id="cb8-252">               "CpuRealtimePeriod": 0,</span>
<span id="cb8-253">               "CpuRealtimeRuntime": 0,</span>
<span id="cb8-254">               "CpusetCpus": "",</span>
<span id="cb8-255">               "CpusetMems": "",</span>
<span id="cb8-256">               "Devices": [],</span>
<span id="cb8-257">               "DiskQuota": 0,</span>
<span id="cb8-258">               "KernelMemory": 0,</span>
<span id="cb8-259">               "MemoryReservation": 0,</span>
<span id="cb8-260">               "MemorySwap": 0,</span>
<span id="cb8-261">               "MemorySwappiness": 0,</span>
<span id="cb8-262">               "OomKillDisable": false,</span>
<span id="cb8-263">               "PidsLimit": 2048,</span>
<span id="cb8-264">               "Ulimits": [</span>
<span id="cb8-265">                    {</span>
<span id="cb8-266">                         "Name": "RLIMIT_NPROC",</span>
<span id="cb8-267">                         "Soft": 4194304,</span>
<span id="cb8-268">                         "Hard": 4194304</span>
<span id="cb8-269">                    }</span>
<span id="cb8-270">               ],</span>
<span id="cb8-271">               "CpuCount": 0,</span>
<span id="cb8-272">               "CpuPercent": 0,</span>
<span id="cb8-273">               "IOMaximumIOps": 0,</span>
<span id="cb8-274">               "IOMaximumBandwidth": 0,</span>
<span id="cb8-275">               "CgroupConf": null</span>
<span id="cb8-276">          }</span>
<span id="cb8-277">     }</span>
<span id="cb8-278">]</span></code></pre></div>
</details>
<p>I found something, but the output is massive and not easy to read.</p>
<p>The relevant part:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb9-1">"Networks": {</span>
<span id="cb9-2">                    "podman-docker_my_network": {</span>
<span id="cb9-3">                         "EndpointID": "",</span>
<span id="cb9-4">                         "Gateway": "10.89.0.1",</span>
<span id="cb9-5">                         "IPAddress": "10.89.0.2",</span></code></pre></div>
<p>What about rootless? Using the podman-compose I can launch rootless containers. However, according to the <a href="https://wiki.archlinux.org/title/Podman#Additional_dependencies">arch wiki</a> some extra dependencies are required for dns to work.</p>
<p>After installaling:</p>
<p>Rootless test (podman-compose):</p>
<pre class="defualt"><code>/ # ping podman-docker_alpine_container_2_1
PING podman-docker_alpine_container_2_1 (10.89.1.5): 56 data bytes
64 bytes from 10.89.1.5: seq=0 ttl=42 time=0.039 ms</code></pre>
<p>Rootfull test (docker-compose with podman backend):</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb11-1">/ # ping podman-docker-alpine_container_1-1</span>
<span id="cb11-2">PING podman-docker-alpine_container_1-1 (10.89.0.2): 56 data bytes</span>
<span id="cb11-3">64 bytes from 10.89.0.2: seq=0 ttl=42 time=0.044 ms</span></code></pre></div>
<p>So I can’t get the ip, but because dns in the container works, they can find eachother that way. Nice.</p>
<p>Since rootful podman containers using docker-compose work nicely, podman seems more and more appealing to me.</p>
<p>Another feature of podman that appeals to me is the <a href="https://www.howtogeek.com/devops/how-to-enable-podmans-automatic-container-updates/">auto updates</a></p>
<p>And another feature that makes podman appeal to me is the integration podman has with the cockpit web ui for managing linux systems. Because cockpit is made by Red Hat, who also develops podman, they deprecated docker support and now it only supports podman.</p>



 ]]></description>
  <category>linux</category>
  <category>docker</category>
  <guid>https://moonpiedumplings.github.io/playground/podman-docker/</guid>
  <pubDate>Sun, 03 Sep 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Attempting to get secure boot and bootable BTRFS snapshots</title>
  <link>https://moonpiedumplings.github.io/playground/arch-secureboot/</link>
  <description><![CDATA[ 




<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="true" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
If these steps are followed blindly, you risk compromising your security
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse show">
<div class="callout-body-container callout-body">
<p>Do not do what I did unless you have a similar setup to what I have, which is full disk encryption, with /boot/efi being the efi system partition, and the only unencrypted part of the system. This means that everything in /boot, including things like kernels, or grub configurations and supportive files.</p>
</div>
</div>
</div>
<p>I’ve been at this for some time now, so I will document what I have done, and further steps. Essentially, I am trying to do what <a href="https://wejn.org/2021/09/fixing-grub-verification-requested-nobody-cares/">this person</a> <a href="https://web.archive.org/web/20230609152526/https://wejn.org/2021/09/fixing-grub-verification-requested-nobody-cares/">archive</a> has done.</p>
<p>They go more into depth on the setup that we are both using, but essentially, I the only unencrypted part of my system is the grub efi binary. Normally, the kernels and kernel modules are also left unencrypted, and because of that, they must be signed in order to prevent an attacker from modifying them on the hard drive, either by removing the hard drive, or booting another operating system, like by a USB drive. Signing is a process that uses complex math to ensure that the computer can verify the authenticity of a file.</p>
<p>Normally, since the kernels are left unencrypted (and to cut off another avenue of attack on running systems), the kernels are signed in order to ensure that they haven’t been modified. However, in my setup, since only grub is left unencrypted, it’s the only thing that can be signed.</p>
<p>But for some reason, grub still attempts to verify the kernels even when it doesn’t need to. This is my struggle of getting it to <em>not</em> do that.</p>
<p>The first thing I did sign grub. I followed the insturctions on the <a href="https://wiki.archlinux.org/title/Unified_Extensible_Firmware_Interface/Secure_Boot#Assisted_process_with_sbctl">Arch Wiki</a>. Except, rather than signing the kernels, I only signed grub.</p>
<p>I enabled secure boot, and reboted. Grub loaded up, and asked me for my password, but then gave me an error and put me into a rescue shell.</p>
<pre><code>error: prohibited by secure boot policy</code></pre>
<p>So I did some searching around. I found someone with the same issue on the <a href="https://bbs.archlinux.org/viewtopic.php?id=282076">Arch Linux BBS</a>. On that page, someone (reply #4) said that an update of grub (grub version 2.06, to be specific) had a change in policy where grub would refuse to load unsigned font files when in secure mode. This is good. There have been CVE’s (security vulnerabilities/issues) in the past where grub loading a malicious grub.cfg or font file can be exploited to make grub do things it’s not supposed to.</p>
<p>Except one tiny problem: Grub stores all configuration and font files in /boot/grub, which is encrypted in my setup. An attacker would not be able to modify it, so therefore I have no need to verify it. It’s actually a hassle to verify all this stuff, because they are tracked by BTRFS, and will be restored.</p>
<p>After some more research, I decided to install grub with the shim-lock option.</p>
<p>But I got another error:</p>
<pre><code>error: verification requested, but nobody cares: (cryptouid:uidhere/boot/grub/x86_64-efi/normal.mod)</code></pre>
<p>Normal mod was not signed.</p>
<p>Apparently, as long as secure boot it enabled, grub still attempts to verify the files. I did some searching around, before finding <a href="https://wejn.org/2021/09/fixing-grub-verification-requested-nobody-cares/">this article</a>, which I also linked above. They used sed (text finder and replacer) to replace some things in the grub <em>binary</em>.</p>
<pre><code>sed 's/SecureBoot/SecureB00t' grubx64.efi</code></pre>
<p>Except, after I ran this command:</p>
<pre><code>[root@lizard boot]# sbctl verify
Verifying file database and EFI images in /boot/efi...
✓ /boot/efi/EFI/cachyos/grubx64.efi is signed</code></pre>
<p>The grub binary <em>stayed</em> signed. Even after modification. What? Shouldn’t the grub binary being modified, break the signatures? Unless it does (I haven’t rebooted yet), and it’s just that the the sbctl tool doesn’t check whether or not the signatures are valid.</p>
<p>Regardless, I can’t know until I test, and I didn’t bother. I simmply resigned the the grub binary, but it still didn’t work.</p>
<p>I forgot to install grub with the <code>--disable-shim-lock</code> option.</p>
<p>Before this, I nuked the /boot/efi directory to ensure that nothing extraneous was left. For some reason, cachyos (arch based distro I am using), installs grub twice, once at /boot/efi/EFI/boot and another at /boot/efi/EFI/cachyos. Having only one grub binary further simplifies this process.</p>
<p>So my full steps would be (requires root):</p>
<pre><code>grub-install --target=x86_64-efi --efi-directory=/boot/efi --disable-shim-lock
sed -i 's/boot/efi/EFI/cachyos/' grubx64.efi</code></pre>
<p>An unorthodox grub hack, but it works.</p>
<p>If a grub update ever breaks this, or maybe just to futureproof this, then I’ll probably just use Arch’s PKGBUILD, makepkg, and patch tools to patch the <a href="https://github.com/rhboot/grub2/blob/205b7b44bb2a7911f1e8c1ce22d66c111a4b429e/grub-core/kern/efi/sb.c#L42">grub_efi_get_secureboot function of sb.c</a> so that grub always thinks it’s not in secure boot. I think I would only need to change one line, <code>return secureboot</code>, or maybe reset the variable to what I want at the end of the function, but I’m not too familier with C code at the moment. I can read it, given context, but I’ve not written it yet.</p>



 ]]></description>
  <category>linux</category>
  <category>cybersecurity</category>
  <guid>https://moonpiedumplings.github.io/playground/arch-secureboot/</guid>
  <pubDate>Tue, 29 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>The CSUN game room has pretty locked down computers…</title>
  <link>https://moonpiedumplings.github.io/playground/csun-computers/</link>
  <description><![CDATA[ 




<p>My first class at Cal State Northridge (CSUN) happened today.</p>
<p>It was pretty exciting, but after class, I wandered around to stave off boredom. I ended up finding the <a href="https://www.csun.edu/src/games-room">CSUN game room</a>, which was a pretty sick setup. Although one side was a game room with a few pool tables and other table games, and beyond that, couches and game consoles, the other side was setup similar to the <a href="https://en.wikipedia.org/wiki/PC_bang">computer cafe’s</a> which are still popular in South Korea.</p>
<p>Obviously I needed to asses their security. Because of my <a href="../cruise-ship-computers/">experience with the cruise ship computers</a>, I somewhat knew what I needed to do. The windows UI on the machines in the CSUN game room, is locked down.</p>
<p>Rather than the normal window’s interface, it was a proprietary interface specially dedicated to games. I could not even open a browser.</p>
<p>In addition to that, none of the keyboard shortcuts worked. Windows + R (run dialog). Or Windows + E (explorer).</p>
<p>So similar to the cruise ships, my initial goal was to restart the windows UI. For some strange reason, the windows UI is located under the program explorer.exe, which is the same program as the filebrowser. On the cruise ship, finding and launching this program is how I restarted the windows UI.</p>
<p>However, I quickly discovered something interesting. When launching discord through the locked down UI, the edge browser would launch for half a second, and then disappear, the tab closing itself. I launched a new tab before it closed, and edge stayed open…</p>
<p>Once edge was open, the first thing I tried was chromium’s Control + O open file dialog.</p>
<p>However, I couldn’t open things, and more interestingly, the right click, and any other methods of accessing the context menu I tried, were blocked.</p>
<p><img src="https://media.discordapp.net/attachments/1145897518270517291/1145898301032501358/AIL4fc_t_UdiZErKWvs9V5pkh38GP9rMPKZJBQzB5IpeA4UQVR6Z95iY2rHtGl8YSu7HEEZZt9b8QqIRVY7eEKAnf6VWHHIeu07hCVfE1754XbNmZxzvHMXtc6udDudz5cmfwN08MI45gWd7_mVi9a6SonX4nUYGjF9wE8edCBkT8R9z73vjZC9SZIRgCaHMe1WgKMe4Zybsu3YO0Nx5WTN4ucjQTVEfGSkWkt1utbVhTrI2yto6uBkFMKL42nqjJYSAIYR4hROEtefRTo_6M3q9Dihfh1KKIaRHfXnVWaYwwqpV3tITMNDccFO7GO_qAoSAvCEDeizkUS1N82sfN9qhODzPoVrKKO_DUAoU1I9VNaBK0g9dgGzggLFuwx7PGGpIVBoSSxVZpgXOcBsEiOFUYC5nwFD90WLFin8Bhcni-Qh9RrpUt_AthR4zOrgoL1eiDY-uU30VO0cyyBmroNOKbO9ca45N9SoiZWX09H3MKp89tZN4I5vh78JY..png" class="img-fluid"></p>
<p>So I tried to download another file browser. Blocked:</p>
<p><img src="https://media.discordapp.net/attachments/1145897518270517291/1145898644642484284/AIL4fc_O5NomLeCXnydmTtLdmezKLzP75FuMdYnHSuD31jjZcnYb-DqOOD5apK7FdJhWY36cZm7H1nmIP8UalRPjKOoP8hHULeWlJnVL3Hw_XjpewJnT1RDpE7t5Ytu1RoPuj3tAQi5ULoYOg9DGeU52hUYpX7RSHj5GRzK9oLftc7DUYYJKYWjQ12M5ccFTjcH41DOBMgH_oDOoWkxj2nvdIkKooNfnvI-unpIKTEIGED-KCDtEr8EkGFmPuZy4Cod0OsgJdrSAMJTjOguYqznoP10dRBcTnZpYeeXGai6PfiRzzzkaZFCVDe0Rx9LX6PzBjpgAEaNjMsFbcMafVp_ShGwVEeosrsMgNbJBjA426q_6UWAflJdSohLQV28oypsnaHQngst4pwayaPR6oRMVAdYhqlo8Tx2qAEPUk4ZMqeog5yEVX1NTfwLTR_6Zy5qlBzaMF5JVNkUFCO7tKtHifBqFyBQc8s5QYjxgl4txGhDbyP3lJ6HvS79b..png" class="img-fluid"></p>
<p>But interesting, I could click the “open downloads folder” and get the proper windows file browser open. In this file browser, I could simply single click on applications to open them.</p>
<p>I located explorer.exe, the program which launched the windows UI on the cruise ship computers, and…</p>
<p><img src="https://media.discordapp.net/attachments/1145897518270517291/1145904889935962304/AIL4fc9ofWb0xdlHoF1s2IjUWf95XdaFI6k3TBqNgbySg-w0coa1eqFnADRrR0d-9m9NPruhi1CLplD2rSyBfIoVFcuM_NEdzmJ9_TZ7SbnUqCUfDjiEA6ut5MER7x4Pa2PzdadRhSs-1gDRvUXmDae347OfPFavXATHIZMyvObc16wvoEX2cPXL0wz5sA6nptI3I8pbDIPxP0hifIKzU3LMUvu9rsRMnPHRJspyrEGiKrG-FMU9za4JYJ2yQvGSWt9mNzTtxh8gXDcNKqKjj2zADnJDB-nFij3NAhhsUF-HjoTAvRPoBigKhjypkjaH8Id7NgbmTV4UHMMCm8ANOIXmi6a30IZOVhZQnHvwZmy9yOUhlJKyQTnBKkiszGZVZ1C23u8x-9bfPcfrCNm929S8_PHtmIKpb7F0lVk8F9TpKy4RLFRYGSMCHQzxcP8xBgHCNVUkluryZIubG75a9_jVbS6PisinkMl80iargQOsNhHDgsmNqGe2oSWv..png" class="img-fluid"></p>
<p>For whatever reason, launching the explorer.exe program simply results in another instance of the filebrowser launching, rather than the windows UI launching. So I decided to try some other stuff.</p>
<p><img src="https://media.discordapp.net/attachments/1145897518270517291/1145899637899808798/AIL4fc98jpQGgHr4PP0h4xyHlIpMUhFTqbFKr3-hiek0hMcgCGC763GgqUM7g3mI0EVquELg6fP7Gt9dlZc_XGQ5SdOWo1NDt9iio5jMu92lx3Ss1IKI47JBKWG9jhVLqumIyhBB4lOpYE0eq7fLpT9GZLsyP4whc8ZOnPgL40CnthFdhHqgHzlnknJ7iUB8aGIpJZu3CAHFQO4IqMKZw7n9BE4-wBmHdGKZ1gJWoQ5qqSt26vKfeFb6Ts7yljShZ66V_silB5fCV-c3gns7B-I8oV9Gv14nhQA146jHaq4JGsCNAq5TmcMd84GSdYjYFBN8gK0YHJZfvFFCF-2wUkapbiYxOzFn_W59bPqM6wz1tn3IT_E-ZBJwO_-t5mJzMPdw_oIc16DMs9LfpkEYIA1Ixh-uiYb15c4Q5PiuJwJbzqoo1hXFyu4la9bgTAXWQlB6GUhUtbs9M3835ZhN_BSHmU8X3k4zw5JBf44lDVuLN_ZjKS9-jDFw4pwH..png" class="img-fluid"></p>
<p><img src="https://media.discordapp.net/attachments/1145897518270517291/1145900260837822525/AIL4fc-RJj9KtnYLIHmBdE8xVpPPd8oDBTO-oUXgnMcVpuukkMcJmWeEtQqg0rytLC_VC0wdO8Q0VhwXtg5QxKX9F53zEETn7U4VKefN0_yuOjzwT01tZ9FHJUes5gpnVPJtWa5iPDduQK82qMbaiduAIbrM0uy9XJd7czRszFGOKlJbVJyaIa83CIINV436BRfY7EQux5UGdRv8HhwzD-8bbWJE01fGh5dErEPf2IK4EswYq1SjadiZjK4-Wc6fmDyqkwRKO9FFwD-YAp0BEe7N9Cqa8E_cddFuA-57BYVVRQP3JReDk1aaMqRpyBp1whZcypxPd8HEX4LDTF1lKv8rsK24BWjAkYJHrmJA3A2TWRO4qTTzfi84ZLNxVij93M72o5LfAnT2yw_ZMLoMsJnzhBY0bxqpmysRl8jH4e0DF8HazP3CzyMN92YhndibUY2O-LmuW1vEBzRRZq8v1OOntxrb-Myjm-35XUEc2lXgV1onUHd_MgI7nZvz..png" class="img-fluid"></p>
<p>I tried a few things. Powershell, command prompt, registry editor, no dice.</p>
<p>I went down the list of apps in <code>C:\Windows</code>, checking things out, when I found something interesting unblocked:</p>
<p><img src="https://media.discordapp.net/attachments/1145897518270517291/1145900496746451024/AIL4fc9MTmcuuc7a0BIO1_mnefpdZEXsGl23HkEUX2nS3eWkWaQ7ZBL09OlI8KeA6x0KFvPpMB31tN7OrkhSPbp84gUX-1RHUIY2soxA0dIhuM3DwZFVkeMhOc77ZoLFr6zYPQgbFeTPykSYoGFhLuuZtIww7Dyx_rEfzEAVRcpbwx0DkRnECbd-qV5pHzjpRIUQ2Ov_twyLcOzzKu7uWeye2Ie3GeKk2-Rn9X2-rddfvaAKSBNUFK5513XmUx7adbFpdw8pulwlsB-C8mvJXk0P6lC6w0ZyOu8y_d7eCxk3TaX18f2wnku98V71rvnzNCccdvy79ctVvvCnpCXCaHJKuOEUw2qtxskRjcW-LNM92G00SWA6mLdebjTNmWz8ys4Kh1ULrIFVSuFd8Qhy97VyhfxpY_1S4JdI-7nQutGG6pAtp1cSpkD0y86Jc9ogCnpmCmAFeyoev20tevGFWTfF6Mi4ckcSmLVototyjN08l5LJ95HXHaJC-19i..png" class="img-fluid"></p>
<p>The strangest thing about being able to launch this application, window’s “Computer Management” app, located at compmgmt.msc is that it requies administrative privileges to simply launch.</p>
<p>When first bootup, the computer autologins to a default user called “User”. Apparently, the default user was an administrator.</p>
<p>From here, I can get to “task scheduler”. Because I am already an administrator for some reason, I am able to schedule tasks, which can be any abitrary thing.</p>
<p>However, this isn’t really a big deal when it comes to access of this machine itself. All these computers at this pc cafe use image based deployments, and I am presuming these images are immutable so any system changes I make would be reset the moment I log out.</p>
<p>However, with administrative access within the network, I could do things like a Denial-of-Service attack, by eating up bandwidth, or I could seek lateral movement through the network, if the machines aren’t isolated properly.</p>
<p>There were multiple ways this kind of access could have been prevented. Why do the users logged in need administrative access? All they are doing is using discord and playing games, they don’t need administrative access.</p>
<p>Another thing that could have been done is simply preventing me from launching compmgmt.msc, the same way powershell or cmd are prevented.</p>
<p>And finally, they could have used a browser other than edge. The browser on that system is not intended for normal browsing, but rather it’s intended for logging into your online accounts, like Discord or the video game providers. Since that’s the case, why use a fully featured browser that lets you open a file browser? There exist browsers that are far more locked down, and cannot do things like browse files, only open a single webpage — perfect for this usecase.</p>



 ]]></description>
  <category>windows</category>
  <category>cybersecurity</category>
  <guid>https://moonpiedumplings.github.io/playground/csun-computers/</guid>
  <pubDate>Mon, 28 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Getting situated in my dorms</title>
  <link>https://moonpiedumplings.github.io/blog/dorm/</link>
  <description><![CDATA[ 




<p>For my college, I am going to California State University, Northridge (CSUN). In addition to bringing along normal supplies, I also brought my homelab along.</p>
<p><img src="https://media.discordapp.net/attachments/1084930216314556476/1145222722616578148/IMG_20230826_220529.jpg" class="img-fluid"></p>
<p>On the right, is a desktop comuputer, which would be the server I am using for my homelab things.</p>
<p>On top of that, is my router, which I have configured to wireguard vpn into a VPS I am renting. In addition to that, the router will connect via ethernet to campus internet, and then give me internet, which I have found to be suprisingly faster than accessing campus wifi via internet.</p>
<p>To the left, is my laptop, which I have “docked” there. It connects up to my monitor and keyboard:</p>
<p><img src="https://media.discordapp.net/attachments/1084930216314556476/1145222722922745896/IMG_20230826_220522.jpg" class="img-fluid"></p>
<p>However, the ethernet isn’t currently activated. Apparently, you have to submit a maintenence request for them to turn it on. And since the maintenence workers don’t work on weekends, I have to wait until monday.</p>
<p>One thing that would really suck is if it wasn’t just the wifi that used eduroam to authenticate, but also the ethernet.</p>
<p>Eduroam wifi requires special tools to authenticate, and it’s possible that my router may not have these tools installed.</p>
<p>I visited <a href="https://test-ipv6.com" class="uri">https://test-ipv6.com</a> in order to test ipv6 networking:</p>
<p><img src="https://media.discordapp.net/attachments/749116247245062164/1145420511581573210/image.png" class="img-fluid"></p>
<p>I did some futher testing. Both my phone, my laptop, and my other laptop had different public ip addresses. Except they weren’t truly public:</p>
<pre><code>[moonpie@cachyos-x8664 moonpiedumplings.github.io]$ nmap -sV 130.166.192.250
Starting Nmap 7.94 ( https://nmap.org ) at 2023-08-27 11:10 PDT
Note: Host seems down. If it is really up, but blocking our ping probes, try -Pn
Nmap done: 1 IP address (0 hosts up) scanned in 3.07 seconds
[moonpie@cachyos-x8664 moonpiedumplings.github.io]$ nmap -Pn 130.166.192.250
Starting Nmap 7.94 ( https://nmap.org ) at 2023-08-27 11:10 PDT
sits here forever</code></pre>
<p>It seems that, despite the machines having public ip addresses, there is a a firewall in place to prevent any access from the external world. So it isn’t truly a “public” ip address.</p>
<p>The output of <code>ip a</code> agrees with this.</p>
<pre><code>[moonpie@cachyos-x8664 ~]$ ip a
... extraneous stuff omitted for brevity
...
3: wlan0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default qlen 1000
    link/ether 4c:d5:77:2d:b2:6d brd ff:ff:ff:ff:ff:ff
    inet 10.40.66.133/20 brd 10.40.79.255 scope global dynamic noprefixroute wlan0
       valid_lft 26229sec preferred_lft 26229sec
    inet6 fe80::e25c:14be:fd65:8944/64 scope link noprefixroute 
       valid_lft forever preferred_lft forever</code></pre>
<p>So despite having private ip addresses, each and every ip address maps to a public ip address.</p>
<p>Apparently the whole of <a href="https://www.whois.com/whois/130.166.0.0">130.166.0.0/16</a> is owned by CSUN.</p>
<p>This is honestly a tragedy. Entire countries don’t have ipv4, only v6 because the US hoards v4 addresses, like in this case, what could be one or a few NAT’s is instead an ip address for every device.</p>
<p>As for speed:</p>
<p><img src="https://media.discordapp.net/attachments/749116247245062164/1145419395548598433/image.png" class="img-fluid"></p>
<p>Pretty good, but it’s 11 AM when I did this. That’s more than double the speeds I was seeing last night, something around 110 down and 20 up. I may rerun the test again at a more congested time just to make sure.</p>
<p>Overall, the setup is niceish, but not having ethernet working immediately is frustrating.</p>
<p>Alright, a week later I got ethernet working. My router is set up and when I test the speeds on my router internet:</p>
<p><img src="https://moonpiedumplings.github.io/blog/dorm/images/routerspeedtest.jpg" class="img-fluid"></p>
<p>Vs the campus wifi:</p>
<p><img src="https://moonpiedumplings.github.io/blog/dorm/images/eduroamspeedtest.jpg" class="img-fluid"></p>
<p>I’m seeing around double the speeds, as opposed to normal campus wifi.</p>



 ]]></description>
  <category>linux</category>
  <guid>https://moonpiedumplings.github.io/blog/dorm/</guid>
  <pubDate>Sun, 27 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>My Firefox Setup</title>
  <link>https://moonpiedumplings.github.io/blog/firefox/</link>
  <description><![CDATA[ 




<section id="multiple-profiles" class="level1">
<h1>Multiple Profiles</h1>
<p>So Mozilla, the company behind the Firefox web browser, offers a feature called Firefox sync. It enables you to sync your firefox browser, with your mozilla account, to any device.</p>
<p>However, it has a caveat: it can only sync one firefox profile. Firefox profiles, are basically completely different instances on firefox, capable of having every single thing be seperate, down to things like advanced settings.</p>
<p>Generally, what is recommended to do to seperate accounts, is to use <a href="https://support.mozilla.org/en-US/kb/containers">firefox multi account containers</a>. These seperates cookies and logins between sites. This lets people protect their privacy, because sites like Facebook can no longer snoop to see what other sites have also given you a facebook cookie.</p>
<p>However, I found multi account containers very frustrating to use. If you are trying to manage multiple accounts on the same site, on a site that doesn’t let you do that natively (google/gmail do, but microsoft doesn’t), it constantly asks you if you are sure that you want to open this site in this container. In addition to that, it does that for other sites as well, like google search, which makes it very frustrating.</p>
<p>Firefox profiles, don’t have that annoyance, but I also enjoy the greater degree of seperation they give. Because each firefox profile can have completely differenct settings, this means that I can do things like configure one firefox profile for performance, but at the cost of stability. However, my schoolwork profile is configured never to crash, because it needs to be reliable. Multi account containers can’t do that.</p>
<section id="default-applications" class="level2">
<h2 class="anchored" data-anchor-id="default-applications">Default Applications</h2>
<p>Because I use multiple profiles, I would like the option to chose what link each firefox profile opens in.</p>
<p>So far, I’ve tried this command <code>xdg-settings set default-web-browser none.desktop</code>, with the goal of a “choose application” screen appearing that then lets me run <code>firefox -p profilename</code> to open a websit ein a specific profile, but it didn’t work.</p>
<p>I would like to try some further stuff, but if it doesn’t work out, I can just default to the “play” profile which is my profile for personal use and the like</p>
</section>
</section>
<section id="syncthing" class="level1">
<h1>Syncthing</h1>
<p>Because I can’t use the native firefox profiles to sync, I had to find other solutions. Originally, I used the graphical frontend for <a href="https://en.wikipedia.org/wiki/Rsync">rsync</a>, <a href="https://en.wikipedia.org/wiki/Grsync">Grsync</a>, syncing into a usb drive, into the computer, and vice versa, to sync between computers. However, this was extremely slow, because apparently usb flash drive’s suck at transferring many small files.</p>
<p>I later switched to another solution, syncthing. Syncthing can keep folders of two computers synchronized, from anywhere in the world.</p>
<p>But it wasn’t perfect at first. In order to get it to work properly, I had to add the proper <a href="https://docs.syncthing.net/users/firewall.html">firewall rules</a>. Onlydid after this did syncing work.</p>
<p>Another issue I had with it was that it synced the cookies file of firefox. Cookies, are where most sites store the session tokens, a common way of knowing that you are logged in on this device. However, session tokens also present a security risk. All an attacker needs to get access to the login of a site is a session token (stored in the cookies.sqlite file for firefox), which is often stored unencrypted, in areas the currently logged in user can read and write to. (see <a href="https://en.wikipedia.org/wiki/Session_hijacking">session hijacking</a>)</p>
<p>Because my session tokens were being transfered to another machine, google and some other services thought I was getting hacked, and forced me to do lot’s of confirmations, and “yes it’s me.” Annoying, but a reasonable security measure.</p>
<p>So I had to configure syncthing to not sync certain files.</p>
<p><code>*cookies.sqlite*</code>.</p>
<p>This partical <a href="https://en.wikipedia.org/wiki/Glob_(programming)">glob match</a> will exclude firefox’s cookies.sqlite file, and the cookies.sqlite-wal file, which is a journaling file. In computer filesystems, journals record changes that are going to be made to other files or the filesystem before they are made, in order to make data recovery from an abrupt stop, like a crash possible. If the journal is complete, then the computer can simply finish the changes by reading the journal. If the journal is incomplete, then the computer can simply not make the changes, as having an intact cookies.sqlite file is more important than a cookie or two.</p>
<p>Finally, you cannot have both firefox instances running at once. This will cause syncthing to get confused, as it is attempting to make the most recent version of the file propogate, but both computers have the most recent version.</p>
<p>This let to the creation of lots of .sync-conflict files, and firefox giving me a warning: <a href="https://support.mozilla.org/en-US/kb/fix-bookmarks-and-history-will-not-be-functional">The bookmarks and history system will not be functional</a>. I tried deleting the sync conflict files, but nothing changed.</p>
<p>I ended up having to manually repair that firefox profile, by creating a new one and <a href="https://support.mozilla.org/en-US/kb/recovering-important-data-from-an-old-profile#w_copying-files-between-profile-folders">copying the important data over</a></p>
<p>One more thing, made later: You can’t quit firefox with cntrl+q, as this will sometimes leave an unsyncable file. You have to close firefox from the desktop UI, I usually just use KDE Plasma to close everything at once.</p>


</section>

 ]]></description>
  <category>linux</category>
  <guid>https://moonpiedumplings.github.io/blog/firefox/</guid>
  <pubDate>Wed, 09 Aug 2023 07:00:00 GMT</pubDate>
</item>
</channel>
</rss>
