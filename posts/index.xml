<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Jeffrey Fonseca</title>
<link>./posts/</link>
<atom:link href="./posts/index.xml" rel="self" type="application/rss+xml"/>
<description>All posts</description>
<generator>quarto-1.5.56</generator>
<lastBuildDate>Thu, 12 Sep 2024 07:00:00 GMT</lastBuildDate>
<item>
  <title>Server Part 5 — Ovirt is still maintained?!</title>
  <link>./projects/build-server-5/</link>
  <description><![CDATA[ 




<section id="background-goals" class="level1">
<h1>Background &amp; Goals</h1>
<p>Since I got literally no work done on my server, I think it would be prudent to scale down. Rather than opting for a larger option.</p>
<p>In the order I want, here are concrete goals:</p>
<ul>
<li>Syncthing: (I need this in order to sync files between my two laptops)</li>
<li>Oauth2/Openid/Ldap (Kanidm or Authentik)
<ul>
<li>I might switch to <a href="https://kanidm.com/">Kanidm</a> from authentik as my authentication server, as it seems a lot simpler… but it doesn’t seem to support invites</li>
</ul></li>
<li>Virtual Machine host with a web UI that I can give out to others. I’m currently looking at Incus or Ovirt.</li>
</ul>
<p>I recently learned that <a href="https://www.ovirt.org/">Ovirt</a> was still maintained, and it seems to be feature complete. It contains every feature I want, like oauth2 authentication, port security, and a web UI. Although, due to Red Hat abandoning the project, it likely wont’ get beyond feature updates, and instead just get bug and security updates, the software does what I want it to do.</p>
</section>
<section id="software-selection" class="level1">
<h1>Software Selection</h1>
<section id="virtual-machine-manager" class="level2">
<h2 class="anchored" data-anchor-id="virtual-machine-manager">Virtual Machine Manager</h2>
<p>Incus: * <a href="">Authentication</a> - Openid connection * <a href="https://linuxcontainers.org/incus/docs/main/authorization/">Authorization</a> - Openfga authorization - Do I have to create a project for each user? (seems to be no… <a href="https://linuxcontainers.org/incus/docs/main/howto/projects_confine/#confine-projects-to-specific-incus-users">Incus can be configured to dynamically create projects for all users in a specific user group</a>) - What is the difference between the varios levels of authority * <a href="https://linuxcontainers.org/incus/docs/main/explanation/security/#network-security">Port security</a> - Can be overrided on a per instance basis… but how can I make this an unchangable default?</p>
</section>
<section id="authentication" class="level2">
<h2 class="anchored" data-anchor-id="authentication">Authentication</h2>
<p>I’m currently deciding between kanidm and authentik.</p>
<p><a href="https://www.reddit.com/r/selfhosted/comments/wre8ua/authentiktraefikk8sfluxcd_because_documentation/">Here is an authentik on kubernetes with fluxcd guide I foudn</a>.</p>
</section>
</section>
<section id="testing-incus" class="level1">
<h1>Testing Incus</h1>
<p>So, Incus is only packaged in <a href="https://backports.debian.org/Instructions/">Debian backports</a>. The first step is to add those. After that, <code>apt update</code>, <code>apt upgrade</code> and <code>apt install incus-tools incus incus-agent incus-client</code>.</p>
<p>Then, to initialize incus, <a href="https://linuxcontainers.org/incus/docs/main/tutorial/first_steps/">first steps documentation</a>.</p>
</section>
<section id="rke2-try-2" class="level1">
<h1>RKE2 Try 2</h1>
<p>I uninstalled RKE2, but I want to redeploy my services on it again.</p>
<p><a href="https://docs.rke2.io/install/quickstart">Quick start guide</a></p>
<p><code>curl -sfL https://get.rke2.io | sudo sh -</code> (for some reason it crashed and didn’t start when I ran it in a root machinectl session)</p>
<p>I then copied over <code>/etc/rancher/rke2/rke2.yaml</code> to <code>~/.kube/config</code> on my local machine, in order to configure kubernetes from my local machine.</p>
<section id="fluxcd" class="level2">
<h2 class="anchored" data-anchor-id="fluxcd">Fluxcd</h2>
<p>Now, I also realized that git can work over ssh. So I have a git repo, called <code>fleet-charts</code>, located on my server, which I will access from my laptop via ssh.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb1-1">[moonpie@lizard vscode]$ flux bootstrap git --url ssh://moonpie@moonpiedumpl.ing/fleet-charts --branch=main --private-key-file=/home/moonpie/.ssh/moonstack</span>
<span id="cb1-2">► cloning branch "main" from Git repository "ssh://moonpie@moonpiedumpl.ing/fleet-charts"</span>
<span id="cb1-3">⚠️  clone failure: unable to clone: repository not found: git repository: 'ssh://moonpie@moonpiedumpl.ing/fleet-charts'</span>
<span id="cb1-4">⚠️  clone failure: unable to clone: repository not found: git repository: 'ssh://moonpie@moonpiedumpl.ing/fleet-charts'</span>
<span id="cb1-5">✗ failed to clone repository: unable to clone: repository not found: git repository: 'ssh://moonpie@moonpiedumpl.ing/fleet-charts</span></code></pre></div>
<p>I find this odd, because ssh works normally:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1">[moonpie@lizard vscode]$ ssh moonpie@moonpiedumpl.ing -i /home/moonpie/.ssh/moonstack</span>
<span id="cb2-2"></span>
<span id="cb2-3">moonpie@thoth:~$</span></code></pre></div>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb3-1">[moonpie@lizard vscode]$ flux bootstrap git --url ssh://moonpie@moonpiedumpl.ing:22/home/moonpie/fleet-charts --branch=main --private-key-file=/home/moonpie/.ssh/moonstack --verbose</span>
<span id="cb3-2">► cloning branch "main" from Git repository "ssh://moonpie@moonpiedumpl.ing:22/home/moonpie/fleet-charts"</span>
<span id="cb3-3">✔ cloned repository</span>
<span id="cb3-4">► generating component manifests</span>
<span id="cb3-5">✔ generated component manifests</span>
<span id="cb3-6">✔ committed component manifests to "main" ("a69831db70bea88e9ebc9810b78a33831929793c")</span>
<span id="cb3-7">► pushing component manifests to "ssh://moonpie@moonpiedumpl.ing:22/home/moonpie/fleet-charts"</span>
<span id="cb3-8">► installing components in "flux-system" namespace</span></code></pre></div>
<p>So it looks like I must use an absolute path, and cannot use “~” for relative patths. Or maybe I can use the <code>$HOME</code> environment variable.</p>
<p>But I actually don’t like this setup. I <a href="">uninstalled flux</a>, and I want to redeploy it, but wish ssh on a different port instead. I want port 22 on this server to be availble for the forgejo ssh service, rather than to be a the administrative ssh service. I’m going to change ssh to port <code>22022</code> in order to avoid conflicts with other services.</p>
<details>
<summary>
Show install command
</summary>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb4-1">[moonpie@lizard vscode]$ flux bootstrap git --url ssh://moonpie@moonpiedumpl.ing:22022/home/moonpie/fleet-charts --branch=main --private-key-file=/home/moonpie/.ssh/moonstack --verbose</span>
<span id="cb4-2">► cloning branch "main" from Git repository "ssh://moonpie@moonpiedumpl.ing:22022/home/moonpie/fleet-charts"</span>
<span id="cb4-3">✔ cloned repository</span>
<span id="cb4-4">► generating component manifests</span>
<span id="cb4-5">✔ generated component manifests</span>
<span id="cb4-6">✔ component manifests are up to date</span>
<span id="cb4-7">► installing components in "flux-system" namespace</span>
<span id="cb4-8">✔ installed components</span>
<span id="cb4-9">✔ reconciled components</span>
<span id="cb4-10">► determining if source secret "flux-system/flux-system" exists</span>
<span id="cb4-11">► generating source secret</span>
<span id="cb4-12">✔ public key: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCelSERwSNpguy4f2oqrpkPgtq3MT7iKY7fVnofpp72hqdfLH4Z0i34HFy8vXKPL1aKd07HNiMFPujG8E/lE/pb3W5sSNkJPh//YZRz2SlZo7Mh2tkBDLe3Ap8GQgJk/jJHMoCS7YQudT4rAi/vNBuHvMBaFCjXBLqwbaoRBxm5t7hiNFi1I9cSdrIP8v6fubv2VbWV72kiwq/IQeJkURFN9UZJFQ6/Dd6os4ZZg3IEY+EVCpkOyi8d8KnS8fnd8vMk/96jl8mBqRk8ZCsBu6qRbs3HfT6FqCuIgIblxixhrpVmJRJ8cJzMGT5I8deuTPZQ4gPNYYNdxkHW8oztISx0Jql15LtgeJi1iQMwj3ZqIEXPxbgWYZc57jodGvdo7PQTAa3PXOopIJrbmQNi6T2OLwgjidWDgYs7gDJdmAFv52g8zeRh7HyO83yCC7IC1MXodLd9zJinvyBRg5DAdKQnW7zTbcEDsUSGgEI+LQdShRcShmnBzDtJMs2oQujLOaM=</span>
<span id="cb4-13">Please give the key access to your repository: y</span>
<span id="cb4-14">► applying source secret "flux-system/flux-system"</span>
<span id="cb4-15">✔ reconciled source secret</span>
<span id="cb4-16">► generating sync manifests</span>
<span id="cb4-17">✔ generated sync manifests</span>
<span id="cb4-18">✔ committed sync manifests to "main" ("e3f5512df167ca2bc974428cff0dc17787d713f1")</span>
<span id="cb4-19">► pushing sync manifests to "ssh://moonpie@moonpiedumpl.ing:22022/home/moonpie/fleet-charts"</span>
<span id="cb4-20">► applying sync manifests</span>
<span id="cb4-21">✔ reconciled sync configuration</span>
<span id="cb4-22">◎ waiting for GitRepository "flux-system/flux-system" to be reconciled</span>
<span id="cb4-23">✔ GitRepository reconciled successfully</span>
<span id="cb4-24">◎ waiting for Kustomization "flux-system/flux-system" to be reconciled</span>
<span id="cb4-25">✔ Kustomization reconciled successfully</span>
<span id="cb4-26">► confirming components are healthy</span>
<span id="cb4-27">✔ helm-controller: deployment ready</span>
<span id="cb4-28">✔ kustomize-controller: deployment ready</span>
<span id="cb4-29">✔ notification-controller: deployment ready</span>
<span id="cb4-30">✔ source-controller: deployment ready</span>
<span id="cb4-31">✔ all components are healthy</span></code></pre></div>
</details>
<p>And just like that, fluxcd is installed.</p>
<section id="fluxcd-deployment" class="level3">
<h3 class="anchored" data-anchor-id="fluxcd-deployment">Fluxcd Deployment</h3>


</section>
</section>
</section>

 ]]></description>
  <category>linux</category>
  <category>_projects</category>
  <guid>./projects/build-server-5/</guid>
  <pubDate>Thu, 12 Sep 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>The Ultimate Card Game</title>
  <link>./playground/cardgame/</link>
  <description><![CDATA[ 




<section id="game-setuplayout" class="level1">
<h1>Game Setup/Layout</h1>
<p>Traditional Deck + Hand style. How many in a hand? I’m thinking 7.</p>
<p>Players start with no mana, but can spend from life</p>
<p>Life: Players start with 16 life Life can also be used to cast cards, which is basically the only way to cast cards before “factory” type cards are on the field or via 0 or negative cost cards.</p>
<p>During the “block” phase of an attack, the blocking player can either cast 0 (or negative) cost cards, or cast cards using life. This makes cards effectively “instants”, allowing players to bring stuff on the field at the opponent turn, but at some price, as the cards must be either &lt; 0 cost or paid with life.</p>
<p>Cards play in their “stunned” state. AkA: cards cannot attack first turn after playing (Might change if I adjust how cards do damage)</p>
</section>
<section id="card-design" class="level1">
<h1>Card Design</h1>
<p>Round up (?)</p>
<p>Rarity system:</p>
<p>Legendary: 32 + cost</p>
<p>Epic: 16 + cost</p>
<p>Rare: 8 + cost</p>
<p>Common: 4 + cost</p>
<p>30 cards in a deck</p>
<p>Card ratios must be: (minimum 15/30 cards, probably 30)</p>
<p>2 legendaries, 4 epic, 8 rare, and 16 common for 30 total. You can have more, but you must maintain that ratio.</p>
<p>Negative cost cards give player production points to use, in addition to being instants.</p>
<p>Attack/defense:</p>
<p>5 card draws at the beginning of the turn: Can be used instead to the card effect.</p>
<p>Cards:</p>
<hr>
<p>Card name, mana cost</p>
<p>Poorly drawn image</p>
<p>Detail text/keywords</p>
<p>Flavor text</p>
<p>————- Attack Power/Health/Production power</p>
<p>Alternate Card design:</p>
<p>Card Name</p>
<p>Either under or next to name: base costs + addons – (negative production cost increaste) – rarity cost add = mana/production cost</p>
<p>attack/ power, vertically down the left side of the card</p>
<p>(number) Card trait</p>
<p>Flavor text</p>
<p>Card “Shop”</p>
<p>Traits cost Trait Number * N where N is the total amount of traits</p>
<p>Offensive Aspects:</p>
<p>Attack: X Give this card the ability to attack, and 1 + X attack power. Cards need at least one attack to be able to block.</p>
<p>Multi-Target-Attack: X attack more than one target/structure, to a total of 2 + X targets. Each attack/block/hit encounter is treated as an individual encounter — this multiplies damage essentially. Alternative description (same function): this card makes multiple attacks against multiple targets, and recovers health between each attack.</p>
<p>Multi-Blocker-Attack: X This card, when attacking a target, is treated as actually doing 2 + X attacks toward a target. Unblocked attacks go through. Each encounter with a blocker is kept seperate.</p>
<p>Goals: Replace mtg creature tokens, mtg evasion mechanics (keywords flying, horsemanship, unblockable, trample, etc)</p>
<p>https://mtg.fandom.com/wiki/Evasion_ability</p>
<p>AoE: X: 1 + X This cards deals it’s attack damage to 1 + X other blockers.</p>
<p>Idea: AoE has reversed cost. It targets ATK other targets, dealing some calculation of damage.</p>
<p>Totally not banding: Collective attack: Base + X. Allows for pooling of attackers up to 1 + X other attackers. Counts as one attack, even to multi block. Attacking player can choose how the damage is distributed to the cards in the merged attack. Merged attacks share offensive traits.</p>
<p>Double Tap: 1 + ??: Card has does a second attack which happens before the first one in an encounter, doing extra damage. Opponent can pay some porportion of production to remove some proportion of double tap from a card.</p>
<p>Goals: Shield-remove, replace mtg keyword deathtouch.</p>
<p>Defensive Aspects:</p>
<p>Health: Base + X Give this card health trait and 1 + X hit points. (note: If a card has no health, it disappears at the end of a turn).</p>
<p>Multi Block: 1 + X block more than one attacker of a target, per target blocked, up to 2 + X</p>
<p>Multi-Target-Block: 1 + X: Block for more than one card, although only one attacker per target, up to 2 + X (stacks with multi block with</p>
<p>Anti-AoE: Base:1 + X add this cards health power to hower many</p>
<p>Merged Block: Base:1 + X: This card can do a merged block, which is mostly treated as one block. The health of merged blockers is “pooled” where they all share damage. To kill all cards in the merged block, and attacker must outdamage the pool. (Should merged block allow merging of traits?) (and should merged block allow blocking multi-block?)</p>
<p>Idea: No merging of traits. Stacks with other defensive traits. Allows for multi-blocking, of one card, but doesn’t</p>
<p>Collective Block: 1 + X. If multiple cards are blocking one card, they gain a “health” pool, where they all share damage. To kill all cards pooling cards, they must deal enough damage to overcome the “health pool” This card can pool with X cards. Cannot health pool with cards with greater health than itself. Blocking is treated as a merged block, where something like “damage multiplication” can split up the health pool again.</p>
<p>Do I want collective block to merge traits as well?</p>
<p>Shield: X: Card gets a seperate “shield of X hit points. If they are damaged by one attack/encounter, it doesn’t rollover into their HP. Opponent(s) can pay production points to reduce the shield value. Shield points can also be spent to reduce active effects</p>
<p>Goals: Replace mtg keywork indestructuble. Replace clash royale shield mechanic Maybe replace hexproof with a resist spell mechanic?</p>
<p>Misc Aspects:</p>
<p>Integrate: X: X Pay N * N production points to combine this card with another card, stacking all values. Integrated cards count as one card, even when targeted by another integrate card, but the calculation becomes N * (N1 + N2)</p>
<p>Goals: Replace mtg archetype voltron, mtg keywords equip, fortify, enchant, mutate, merge, meld</p>
<p>Problem: Polarity reversal doesn’t effect integrate. Offensive/defensive equivalent? : Debuff</p>
<p>Solution: Pay some amount of production to dissasemble integrated cards. Don’t like, as it kinda defeats the points of “green” decks. Maybe: Opponent can pay production to keep integrate card integrated</p>
<p>Debuff: X: Pay N + N – X points to apply a debuff to a card with value N, where all the aspects of this card are subtracted from that card. Actives and Curses carry over.</p>
<p>How to remove?</p>
<p>Active Traits:</p>
<p>Idea: Cards with active traits can’t block. This forces them to be seperate structures players must defend.</p>
<p>Mana Generation: X: X * N . Generate mana for casting things</p>
<p>Give opponent production points: Goal: replicate elixir golem mechanic from clash royale. Problems: Too weak. Decks which use less or no production won’t be affected by this. Needs an alternate ability along with give opponent production points, such as giving opponent another active.</p>
<p>Idea for both: decrease cost of the fibonacci sequence. This appeals because it has a fixed cost.</p>
<p>Stealth: Base:1 + X Take 1 + X cards off the field… and then put them back on face down in new spots. Stealthed cards are revealed when they take action, attack, or are dealt damage. Stealth can also be used to move around cards during the blocking phase.</p>
<p>Cost:</p>
<p>Goal: Twofold: Obscure cards on board, but also allow to move cards in blocking (or attacking?) phases around. Blue idea, playing with information</p>
<p>Necromancy: Base:1 + X Search 1 + X through the bottom of the deck/graveyard. Cast a cards base cost, rather than their total creation point cost.</p>
<p>Goal: Play the roal of black deck, bringing cards back from the dead. Replace mtg https://mtg.fandom.com/wiki/List_of_Magic_slang#Recursion recursion</p>
<p>Tutor: Cost Base:1 + X, look at the top X cards of your deck and show them to your oppnent. You can cast directly from these cards. Problem: Recursive scry/tutor too op</p>
<p>Goal: Play the role of blue deck, increasing options player has.</p>
<p>Polarity Reversal Base: X: Change offensive abilities to their defensive equivalents defensive and vice versa, of a single card, up to X * N of a single trait</p>
<p>Goal: Buff and nerf at the same time. Can be used to reduce health</p>
<p>Counterspell/reflect: Base:1 + X: You “take control” of 1 + X “spell” aspects targeting individual things. Problem: How will counterspell and react phases work? Do I want this? It adds extra complexity to casting. Idea: Counter either 1 + X damage/protection/production (distributed) or 1 + X spell effects targeting stuff.</p>
<p>Goal: play the role of the blue counterspell, while also allowing them to deny production points</p>
<p>Aspect Enhancement: X: Enhance any aspect of card(s) up to X. Costs (initial aspect cost) + X * N production points.</p>
<p>Gain Life: X: X and pay X production points to do so</p>
<p>Also want active?</p>
<p>Triggers:</p>
<p>Familiar friends: X: When you play a card with similar trait and valuet and value appears, including this specific trigger + active, Do up to 1 + X of an active trait, based on the common traits and values that are shared.</p>
<p>Note: Too op if it includes health, attack, and friends… but is it?</p>
<p>Damage dealt via attacking or blocking (including or excluding overkill): X : X</p>
<p>Damage taken (including or excluding shield?): X : X</p>
<p>Goal: Replace elixir golem clash royale</p>
<p>Card enters play: X: X * N</p>
<p>Instead of card draw: X: X * N</p>
<p>Pay production points: I want this mechanic, but do not know how to balance it</p>
<p>Getting attacked by X cards: X: X</p>
<p>Lifegain: X: X</p>
<p>On card draw:</p>
<p>Curses:</p>
<p>Negative managen/production: Take X mana from the player every turn, or if they can’t provide that, life. In exchaninge, offer X * N card creation points for players to use. Essentially for each negative mana point, they can add one of each trait for each negative manapoint during the turn. Must be paid before the attacking step.op starting slowing down, I switched to a Linux based operating system, in an attempt to make it faster, using knowl</p>
<ul>
<li>Should it die if no mana given?</li>
<li>Or should it take from life?</li>
<li>What about production? Probably not effect actives… but I like the idea of cumulative upkeep for a spell tower.</li>
</ul>
<p>Day/Night: Opponent gains control of this card during their turn, except the card doesn’t have full stats. It only has X stats, X for each trait in place. It also gains X stats in the opposite section of held traits. So 4 hp, but 0 attack, but 2 x becomes 2 hp, 2 attack.</p>
<p>How to handle one time spell cards? * Day/night results in the card staying alive, even when it has 0 or less health * Opponent gets a portion of spell effects * Daynight straight up doesn’t affect actives ← I like this one</p>
<p>May need different name, mtg already has daynight. Traitor? Betrayal? Doublecross? Doubleagent?</p>
<p>Card on field goes to hand, in exchange for a card that has a base cost less than Cost – X base cost. If there is no such card, then this card goes to the graveyard. You can keep the card on the field in exchange for a sacrifice of at least Cost + X * N from your hand or the field, straight to the graveyard.</p>
<ul>
<li>Beginning or end of turn (it would be nice to bounce immediately)</li>
<li>How to have card be persistent?</li>
</ul>
<p>At beginning of turn, or when card is attempted to be played, take it off the field for a card in hand with base value &lt; cost – X, or sacrifice card from field with cost + X?</p>
<p>AKA: some kind of bounce curse</p>
<p>At beginning of turn or before played, take cards on the field that are worth more/less than something off the field and put them back into your hand. If you cannot do this, because of a full hand or because of the</p>
<p>On/before turn, bounce cards value back to hand. If you can’t do that, then bounce this card, exchanging it for something in your hand with less than X. If can’t do that, then graveyard.</p>
<p>Siege/Battle: X: X card is cast as an X health card under an opponents control. They must defend it, if the attacking player manages to kill it, then it becomes the normal card</p>
<ul>
<li>Allow spell damage to kill the battle?</li>
</ul>
<p>Goal: replace siege/battle from mtg</p>
<p>Two ideas:</p>
<p>Half of cards in graveyard go to exile, the other half go to the bottom of the players deck. Either completely random, pseudorandom, or complete player choice. Note: why is this better than multiple rounds? This could also be a seperate gamemode.</p>
<p>Potential keywords:</p>
<p>Recursion: X : X Pay Cost – X to cast this card from your graveyard</p>
<p>Buyback: X : X Pay Cost – X in addition to casting this spell to return it to your hand when you cast it.</p>
<p>Sacrifice: X : X sacrifice cards with base values up to X to decrease this cards cost by X</p>
<p>See also: MTG emerge</p>
<p>MTG Surge</p>
<p>MTG rebound</p>
<p>MTG storm: Pay X to duplicate the on-cast effects of this card?</p>
</section>
<section id="combat" class="level1">
<h1>Combat</h1>
<p>Defensive player sets up layout at the end of their attacking turn, and cannot change it or reoganize it.</p>
<p>Attack player sets a layout, and then either chooses to make the first move, or to pick how the connections work.</p>
<p>Played on something equivalent to a hex grid, but not an actual hex grid. A square grid where each row is offset by ½, and touching squares are considered connected.</p>
<p>Moves cards can make:</p>
<p>Move: Move onto an adjacent card.</p>
<p>Swap: Replace adjacent card with this one</p>
<p>Pull: Pull connected card under this card.</p>
<ul>
<li>Pull into spot, and move this card out of the way?</li>
</ul>
<p>Push: Move card out of way? Maybe can push in place to move a card to an adjacent spot</p>
<p>Spawn: Spawn new piece in a blank spot adjacent to your own pieces, and only your own pieces</p>
<p>All of these moves can be done over a chain of your color’s cards, including attacking/defending ones.</p>
<p>Stacked cards are considered as attacking eachother, and cannot move on/off, but they can be moved over.</p>
<p>The attacker round ends immediately when a player stalemates is unable to make a swap, push, or pull move. ???</p>
<p>One hive rule (from hive): Players cannot make a move that results in their being two groups of cards.</p>
<p><a href="https://en.wikipedia.org/wiki/Hive_(game)" class="uri">https://en.wikipedia.org/wiki/Hive_(game)</a></p>
<p>So… how does a player actually do damage? And how should collective defense/attack and multi attack/defense work?</p>
<p>Two ways I am thinking of doing damage: Getting a card onto/past all defenders</p>
<p>Or creating a chain that connects it past defenders. Maybe like 1 damage for each card in the chain?</p>
<p>How should cards launch an attack against valuable cards? Surrounding them? Building a chain which accesses them?</p>
<p>Should cards being on top or below matter? Maybe? Only on top cards count for purposes of a chain, and also can surround other cards.</p>
<p>But also: How about targeting production towers?</p>
<p>Anyway, this is good, but I need to calculate the fairness of this game. I think the only way to calculate fairness is to write a program that solves this game.</p>
<p>Combat ends <strong>immediately</strong> where a player cannot make another move (either attacker or defender).</p>
<p>What about drawish rules, like 3 fold repetition?</p>


</section>

 ]]></description>
  <category>_playground</category>
  <guid>./playground/cardgame/</guid>
  <pubDate>Thu, 12 Sep 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Software Projects I follow</title>
  <link>./blog/watched-software/</link>
  <description><![CDATA[ 




<section id="vulnerability-scanning-greenbone" class="level1">
<h1>Vulnerability Scanning (Greenbone)</h1>
<p>External:</p>
<p>(<a href="https://programming.dev/post/17335421" class="uri">https://programming.dev/post/17335421</a>)</p>
<ul>
<li><p><a href="https://github.com/future-architect/vuls" class="uri">https://github.com/future-architect/vuls</a> <a href="https://h0bbl3s.port0.org/vulnerability-scanning-with-vuls/" class="uri">https://h0bbl3s.port0.org/vulnerability-scanning-with-vuls/</a></p></li>
<li><p><a href="https://github.com/vulsio/vulsctl" class="uri">https://github.com/vulsio/vulsctl</a></p></li>
<li><p><a href="https://github.com/projectdiscovery/nuclei" class="uri">https://github.com/projectdiscovery/nuclei</a></p></li>
<li><p><a href="https://doc.ivre.rocks/en/latest/" class="uri">https://doc.ivre.rocks/en/latest/</a></p></li>
<li><p><a href="https://github.com/tlkh/prowler" class="uri">https://github.com/tlkh/prowler</a> — last update 6 years ago</p></li>
<li><p>Nmap scripts</p>
<ul>
<li><a href="https://github.com/scipag/vulscan" class="uri">https://github.com/scipag/vulscan</a> — vulnerability scanning project for nmap</li>
<li><a href="https://github.com/vulnersCom/nmap-vulners" class="uri">https://github.com/vulnersCom/nmap-vulners</a></li>
<li><a href="https://github.com/cloudflare/flan" class="uri">https://github.com/cloudflare/flan</a> — last update 2 years ago, based on vulners fro nmap</li>
</ul></li>
</ul>
<p>Web scanning:</p>
<ul>
<li><a href="https://www.zaproxy.org/" class="uri">https://www.zaproxy.org/</a></li>
</ul>
</section>
<section id="browser-based-destkop-kasmwebvnc" class="level1">
<h1>Browser based Destkop (Kasmweb/VNC)</h1>
<p>Full featured:</p>
<p>Multi user Full Featured:</p>
<ul>
<li><a href="https://games-on-whales.github.io/" class="uri">https://games-on-whales.github.io/</a> — <a href="https://github.com/games-on-whales" class="uri">https://github.com/games-on-whales</a></li>
<li><a href="https://github.com/spaceness/stardust" class="uri">https://github.com/spaceness/stardust</a></li>
<li>kasmweb — not open source</li>
<li><a href="https://github.com/pwncollege/dojo" class="uri">https://github.com/pwncollege/dojo</a>
<ul>
<li>Is an addon to <a href="https://docs.ctfd.io/docs/overview/" class="uri">https://docs.ctfd.io/docs/overview/</a>, but adds web workspaces and more.</li>
<li><a href="https://docs.ctfd.io/docs/settings/single-sign-on/#oauth">ctfd has SSO support</a></li>
</ul></li>
</ul>
<p>Single User full featured:</p>
<ul>
<li><a href="https://docs.linuxserver.io/images/docker-kasm/" class="uri">https://docs.linuxserver.io/images/docker-kasm/</a></li>
<li><a href="https://github.com/Fmstrat/webbian" class="uri">https://github.com/Fmstrat/webbian</a> — <a href="https://nowsci.com/webbian/">Docs</a></li>
<li><a href="https://github.com/m1k1o/neko" class="uri">https://github.com/m1k1o/neko</a>
<ul>
<li>Notable because this one supports password auth, and viewer/controller style setups. It’s explicitly designed for multi-user web browsing activities.</li>
</ul></li>
<li><a href="https://github.com/accetto/ubuntu-vnc-xfce-g3" class="uri">https://github.com/accetto/ubuntu-vnc-xfce-g3</a></li>
<li><a href="https://github.com/gezp/docker-ubuntu-desktop" class="uri">https://github.com/gezp/docker-ubuntu-desktop</a></li>
<li><a href="https://github.com/selkies-project/docker-nvidia-egl-desktop" class="uri">https://github.com/selkies-project/docker-nvidia-egl-desktop</a>
<ul>
<li>Also has nvidia-glx-desktop</li>
<li>Although the docker containers seem to be maintained, the overall product seems to be dead. It looks like they were working towards a full web UI before it died.</li>
</ul></li>
<li><a href="https://github.com/vital987/vubuntu" class="uri">https://github.com/vital987/vubuntu</a> — last updated 2 years ago</li>
</ul>
<p>Web apps:</p>
<ul>
<li><a href="https://github.com/DustinBrett/daedalOS" class="uri">https://github.com/DustinBrett/daedalOS</a></li>
<li><a href="https://docs.fullstacked.org/#/" class="uri">https://docs.fullstacked.org/#/</a></li>
<li><a href="https://github.com/MercuryWorkshop/anuraOS" class="uri">https://github.com/MercuryWorkshop/anuraOS</a>
<ul>
<li>This one is special because it uses a javascript linux emulator combined with a proxy, to have a full linux environment running in your browser.</li>
</ul></li>
<li><a href="https://copy.sh/v86/" class="uri">https://copy.sh/v86/</a>
<ul>
<li>No networking</li>
</ul></li>
<li><a href="https://bellard.org/jslinux/" class="uri">https://bellard.org/jslinux/</a> — linux emulator</li>
<li><a href="https://github.com/shmuelhizmi/web-desktop-environment" class="uri">https://github.com/shmuelhizmi/web-desktop-environment</a> — web app, but has xpra support</li>
</ul>
<p>Somewhat related: <a href="https://github.com/udevbe/greenfield" class="uri">https://github.com/udevbe/greenfield</a> — it’s an html5 wayland compositor.</p>
<p>Also related: <a href="https://github.com/giongto35/cloud-morph">cloud-morph</a> and <a href="https://github.com/giongto35/cloud-game">cloud-game</a></p>
</section>
<section id="intrustion-detection-system-wazuh" class="level1">
<h1>Intrustion Detection System (Wazuh)</h1>
<ul>
<li>Wazuh</li>
<li><a href="https://www.la-samhna.de/samhain/">Samhain</a></li>
<li><a href="https://www.nongnu.org/tiger/">Tiger</a></li>
<li><a href="https://en.wikipedia.org/wiki/Open_Source_Tripwire">Tripwire</a> (last update 6 years ago)</li>
<li><a href="https://github.com/falcosecurity/falco">Falco</a></li>
</ul>
</section>
<section id="domainad" class="level1">
<h1>Domain/AD</h1>
<ul>
<li><a href="https://cid-doc.github.io/" class="uri">https://cid-doc.github.io/</a></li>
</ul>
</section>
<section id="cicd-security" class="level1">
<h1>CI/CD Security</h1>
<p>There was an interesting project, but I don’t remember it’s name.</p>
</section>
<section id="staticrypt" class="level1">
<h1>Staticrypt:</h1>
<p>Software that encrypts contents of a static site, to be unlocked by a password. Staticrypt was were I first saw this idea.</p>
<ul>
<li><a href="https://github.com/robinmoisson/staticrypt">Staticrypt</a></li>
<li><a href="https://github.com/mprimi/portable-secret" class="uri">https://github.com/mprimi/portable-secret</a></li>
<li><a href="https://github.com/sowbug/quaid" class="uri">https://github.com/sowbug/quaid</a></li>
</ul>
<p><a href="https://news.ycombinator.com/item?id=41404064">Hacker News Discussion</a></p>
<p><a href="https://programming.dev/post/18818724">Lemmy Discussion</a></p>
<p>Lots of similar software mentioned there.</p>
</section>
<section id="ai" class="level1">
<h1>AI</h1>
<section id="speech-to-text-and-text-to-speech" class="level2">
<h2 class="anchored" data-anchor-id="speech-to-text-and-text-to-speech">Speech-To-Text and Text-To-Speech</h2>
<ul>
<li><a href="https://github.com/k2-fsa/sherpa-onnx" class="uri">https://github.com/k2-fsa/sherpa-onnx</a></li>
<li></li>
</ul>
</section>
<section id="llms" class="level2">
<h2 class="anchored" data-anchor-id="llms">LLM’s</h2>
<ul>
<li><a href="https://github.com/Mozilla-Ocho/llamafile" class="uri">https://github.com/Mozilla-Ocho/llamafile</a></li>
</ul>
</section>
</section>
<section id="misc" class="level1">
<h1>Misc:</h1>
<ul>
<li><a href="https://github.com/jvoisin/php-malware-finder" class="uri">https://github.com/jvoisin/php-malware-finder</a> — Uses yara rules to find PHP webshells and other malware.</li>
<li><a href="https://github.com/lakinduakash/linux-wifi-hotspot" class="uri">https://github.com/lakinduakash/linux-wifi-hotspot</a></li>
<li><a href="https://github.com/pieroproietti/penguins-eggs" class="uri">https://github.com/pieroproietti/penguins-eggs</a> — create custom arch isos</li>
<li><a href="https://github.com/sickcodes/Docker-OSX" class="uri">https://github.com/sickcodes/Docker-OSX</a></li>
<li><a href="https://github.com/wavemakercards/wavemaker-cards-v4" class="uri">https://github.com/wavemakercards/wavemaker-cards-v4</a></li>
<li><a href="https://github.com/Kron4ek/Conty" class="uri">https://github.com/Kron4ek/Conty</a></li>
<li><a href="https://github.com/jordansissel/fpm" class="uri">https://github.com/jordansissel/fpm</a> — Can convert packages from one type to another.</li>
<li><a href="https://github.com/Fmstrat/winapps" class="uri">https://github.com/Fmstrat/winapps</a> and <a href="https://github.com/Fmstrat/loffice-365" class="uri">https://github.com/Fmstrat/loffice-365</a></li>
</ul>
</section>
<section id="funny" class="level1">
<h1>Funny</h1>
<ul>
<li><a href="https://github.com/Daniel-Liu-c0deb0t/uwu" class="uri">https://github.com/Daniel-Liu-c0deb0t/uwu</a></li>
<li><a href="https://github.com/sudofox/shell-mommy" class="uri">https://github.com/sudofox/shell-mommy</a></li>
</ul>


</section>

 ]]></description>
  <category>_blog</category>
  <category>linux</category>
  <guid>./blog/watched-software/</guid>
  <pubDate>Sat, 07 Sep 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Connecting Linux machines to Active Directory</title>
  <link>./playground/ad-linux/</link>
  <description><![CDATA[ 




<section id="research" class="level1">
<h1>Research</h1>
<p>This is part of a project for CSUN’s Layer 8 cybersecurity club.</p>
<p>There seem to be multiple ways of connecting a Linux machine to an LDAP server, in such a way that users can login using LDAP credentials.</p>
<ul>
<li><a href="https://arthurdejong.org/nss-pam-ldapd/setup">nss-pam</a></li>
<li><a href="https://www.redhat.com/sysadmin/linux-active-directory">realmd/sssd</a></li>
<li><a href="https://wiki.debian.org/AuthenticatingLinuxWithActiveDirectory">Windbind/Samba</a> (last updated 2016)</li>
</ul>
<p>Package comparison Table (Repology):</p>
<ul>
<li><a href="https://repology.org/project/nss-pam-ldapd/versions">nss-pam-ldapd</a></li>
<li><a href="https://repology.org/project/realmd/versions">realmd</a></li>
<li><a href="https://repology.org/project/sssd/versions">sssd</a> — Not on Arch</li>
<li><a href="https://repology.org/project/samba/versions">samba</a></li>
<li><a href="https://repology.org/project/krb5/versions">krb5</a></li>
<li><a href="https://repology.org/project/apmod:auth-ntlm-winbind/versions">winbind</a> — only thing I could find, and not packaged everywhere</li>
</ul>
<p>Looking at this, nss-pam-ldapd seems to be the most generally available option for systems. Although, pam is only portable to systems that have it, all of our systems have pam, except for one — the openbsd system.</p>
</section>
<section id="deploying-lldap" class="level1">
<h1>Deploying lldap</h1>
<p>Windows team didn’t give us access to their active directory server, so we decided to deploy ldap instead. For deploying lldap, I chose <a href="https://github.com/lldap/lldap">lldap</a>, an all in one ldap implementation, that comes with a web ui for managemnt.</p>
<p>Here is the docker-compose.yml I am using:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>docker-compose.yml</strong></pre>
</div>
<div class="sourceCode" id="cb1" data-filename="docker-compose.yml" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">version</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">volumes</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lldap_data</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">driver</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> local</span></span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">services</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lldap</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> docker.io/lldap/lldap:stable</span></span>
<span id="cb1-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ports</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # For LDAP, not recommended to expose, see Usage section.</span></span>
<span id="cb1-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3890:3890"</span></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # For LDAPS (LDAP Over SSL), enable port if LLDAP_LDAPS_OPTIONS__ENABLED set true, look env below</span></span>
<span id="cb1-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6360:6360"</span></span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # For the web front-end</span></span>
<span id="cb1-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"17170:17170"</span></span>
<span id="cb1-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">volumes</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">     # - "lldap_data:/data"</span></span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # Alternatively, you can mount a local folder</span></span>
<span id="cb1-20"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">       </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./lldap_data:/data"</span></span>
<span id="cb1-21"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">environment</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      #- UID=####</span></span>
<span id="cb1-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      #- GID=####</span></span>
<span id="cb1-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      #- TZ=####/####</span></span>
<span id="cb1-25"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> LLDAP_JWT_SECRET="uprising slacks snuggle"</span></span>
<span id="cb1-26"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> LLDAP_KEY_SEED="uprising slacks snuggle"</span></span>
<span id="cb1-27"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> LLDAP_LDAP_BASE_DN=dc=example,dc=com</span></span>
<span id="cb1-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # If using LDAPS, set enabled true and configure cert and key path</span></span>
<span id="cb1-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # - LLDAP_LDAPS_OPTIONS__ENABLED=true</span></span>
<span id="cb1-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # - LLDAP_LDAPS_OPTIONS__CERT_FILE=/path/to/certfile.crt</span></span>
<span id="cb1-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # - LLDAP_LDAPS_OPTIONS__KEY_FILE=/path/to/keyfile.key        </span></span>
<span id="cb1-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # You can also set a different database:</span></span>
<span id="cb1-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # - LLDAP_DATABASE_URL=mysql://mysql-user:password@mysql-server/my-database</span></span>
<span id="cb1-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # - LLDAP_DATABASE_URL=postgres://postgres-user:password@postgres-server/my-database</span></span></code></pre></div>
</div>
<p>And then I copied the <code>lldap_config.docker_template.toml</code> to <code>./dat a/lldap_config.toml</code>. This sets up the default config for lldap.</p>
<p>From here, the LDAP configuration can be edited through the web ui accessible at http://<you-ip>:17170</you-ip></p>
</section>
<section id="connecting-to-ldap" class="level1">
<h1>Connecting to LDAP</h1>
<section id="archlinux" class="level2">
<h2 class="anchored" data-anchor-id="archlinux">Archlinux</h2>
<p><code>sudo pacman -Syu nss-pam-ldapd</code></p>
</section>
<section id="kalidebian" class="level2">
<h2 class="anchored" data-anchor-id="kalidebian">Kali/Debian</h2>
<p><code>apt update</code></p>
<p><code>apt install libnss-ldapd nslcd</code> (Do I need libpam-ldapd?)</p>
</section>
<section id="openbsd" class="level2">
<h2 class="anchored" data-anchor-id="openbsd">Openbsd</h2>
<p>???</p>
</section>
<section id="rhel" class="level2">
<h2 class="anchored" data-anchor-id="rhel">RHEL</h2>
<p><code>dnf update</code></p>
<p><code>dnf install realmd sssd</code> (RHEL clones don’t seem to have nss-pam-ldapd)</p>


</section>
</section>

 ]]></description>
  <category>linux</category>
  <category>cybersecurity</category>
  <category>_playground</category>
  <guid>./playground/ad-linux/</guid>
  <pubDate>Thu, 29 Aug 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Nice Challenge 6</title>
  <dc:creator>Jeffrey Fonseca</dc:creator>
  <link>./writeups/nice-challenge-6/</link>
  <description><![CDATA[ 




<p>This is for the <a href="https://nice-challenge.com/">NICE</a> challenge. It’s a blue team challenge where you are tasked with hardening machines. Perhaps there is more, but all I was asked to do for this challenge was some simple hardening.</p>
<p>The name of this specific challenge was “CCDC Training 1 - Firewall Updates at Pretty Safe Electronics Corp.”. The point of this challenge was to convert multiple older Linux machines from iptables to nftables.</p>
<p>Like previous Nice challenges, this challenge also began with a simulated chatroom, where we the situation was explained.</p>
<p><img src="./writeups/nice-challenge-6/images/chatroom.png" class="img-fluid"></p>
<p>Here are the empty checks:</p>
<p><img src="./writeups/nice-challenge-6/images/emptychecks.jpeg" class="img-fluid"></p>
<section id="fileshare" class="level1">
<h1>Fileshare</h1>
<section id="nftables-migration" class="level2">
<h2 class="anchored" data-anchor-id="nftables-migration">Nftables Migration</h2>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>Use the <code>pastebinit</code> command, provided by the <code>pastebinit</code> package to easily upload files to pastebins, online sites dedicated to sharing short bits of text.</p>
<p><code>command | pastebin -b paste.debian.net</code> uploads to &lt;paste.debian.net&gt;, or use the <code>-i</code> argument to upload a specific file.</p>
</div>
</div>
<p>In the home directory, there is a file that contains the iptables rules:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>fs_iptables_v4</strong></pre>
</div>
<div class="sourceCode" id="cb1" data-filename="fs_iptables_v4" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb1-1"># Generated by iptables-save v1.6.0 on Thu Jan 17 04:11:15 2019</span>
<span id="cb1-2">*filter</span>
<span id="cb1-3">:INPUT DROP [0:0]</span>
<span id="cb1-4">:FORWARD ACCEPT [0:0]</span>
<span id="cb1-5">:OUTPUT ACCEPT [41:8202]</span>
<span id="cb1-6">-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT</span>
<span id="cb1-7">-A INPUT -p tcp -m tcp --dport 22 -j ACCEPT</span>
<span id="cb1-8">-A INPUT -p tcp -m tcp --dport 139 -j ACCEPT</span>
<span id="cb1-9">-A INPUT -p tcp -m tcp --dport 445 -j ACCEPT</span>
<span id="cb1-10">COMMIT</span>
<span id="cb1-11"># Completed on Thu Jan 17 04:11:15 2019</span></code></pre></div>
</div>
<p>Except… not quite. When using iptables -L or iptables-save to look at the rules, they give different results than the saved file, a few less:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1">Chain INPUT (policy DROP)</span>
<span id="cb2-2">target     prot opt source               destination         </span>
<span id="cb2-3">ACCEPT     all  --  anywhere             anywhere             ctstate RELATED,ESTABLISHED</span>
<span id="cb2-4">ACCEPT     tcp  --  anywhere             anywhere             tcp dpt:ssh</span>
<span id="cb2-5">ACCEPT     tcp  --  anywhere             anywhere             tcp dpt:microsoft-ds</span>
<span id="cb2-6"></span>
<span id="cb2-7">Chain FORWARD (policy ACCEPT)</span>
<span id="cb2-8">target     prot opt source               destination         </span>
<span id="cb2-9"></span>
<span id="cb2-10">Chain OUTPUT (policy ACCEPT)</span>
<span id="cb2-11">target     prot opt source               destination         </span></code></pre></div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>iptables-save</strong></pre>
</div>
<div class="sourceCode" id="cb3" data-filename="iptables-save" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb3-1"># Generated by iptables-save v1.6.0 on Mon Aug 26 01:26:17 2024</span>
<span id="cb3-2">*filter</span>
<span id="cb3-3">:INPUT DROP [31:3283]</span>
<span id="cb3-4">:FORWARD ACCEPT [0:0]</span>
<span id="cb3-5">:OUTPUT ACCEPT [2070:673014]</span>
<span id="cb3-6">-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT</span>
<span id="cb3-7">-A INPUT -p tcp -m tcp --dport 22 -j ACCEPT</span>
<span id="cb3-8">-A INPUT -p tcp -m tcp --dport 445 -j ACCEPT</span>
<span id="cb3-9">COMMIT</span>
<span id="cb3-10"># Completed on Mon Aug 26 01:26:17 2024</span></code></pre></div>
</div>
<p>Because the file in the home directory has extra iptables configuration, I will use those configurations instead. Despite being the output of <code>iptable-save</code>, I can use the <code>iptables-nftables-compat</code> package, which provides and <code>iptables</code> and <code>iptables-save</code> command that actually manipulate <code>nftables</code>.</p>
<p>So, because only the <code>INPUT</code> chain has rules, and none of the other chains have any rules (including <code>mangle</code> or <code>nat</code>), we only need to flush those rules:</p>
<p><code>iptables -F INPUT</code></p>
<p>The other thing that needs to be done is to change the iptables <code>INPUT</code> table to from teh default <code>DROP</code> policy to an <code>ACCEPT</code> policy.</p>
<p><code>iptables -P INPUT ACCEPT</code></p>
<p>after this, iptables is clear of rules:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb4-1">Chain INPUT (policy ACCEPT)</span>
<span id="cb4-2">target     prot opt source               destination         </span>
<span id="cb4-3"></span>
<span id="cb4-4">Chain FORWARD (policy ACCEPT)</span>
<span id="cb4-5">target     prot opt source               destination         </span>
<span id="cb4-6"></span>
<span id="cb4-7">Chain OUTPUT (policy ACCEPT)</span>
<span id="cb4-8">target     prot opt source               destination</span></code></pre></div>
<p>Now, with the iptables chains set to the default, and the ruleset saved, we can comfortable switch to nftables. The <code>iptables-compat</code> set of commands, provided by the <code>iptables-nftables-compat</code> package, lets us restore the ruleset to nft from the firewall:</p>
<p><code>iptables-compat-restore fs_tables_v4</code> ­— this passes the “Fileshare filtering traffic correctly check.</p>
<p><code>systemctl enable nftables</code></p>
<p><code>systemctl start nftables.service</code></p>
<p>And… no checks passed? It seems that enabling the nftables service resets the nftables rules.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/lib/systemd/system/nftables.service</strong></pre>
</div>
<div class="sourceCode" id="cb5" data-filename="/lib/systemd/system/nftables.service" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb5-1">[Unit]</span>
<span id="cb5-2">Description=nftables</span>
<span id="cb5-3">Documentation=man:nft(8) http://wiki.nftables.org</span>
<span id="cb5-4"></span>
<span id="cb5-5">[Service]</span>
<span id="cb5-6">Type=oneshot</span>
<span id="cb5-7">RemainAfterExit=yes</span>
<span id="cb5-8">StandardInput=null</span>
<span id="cb5-9">ProtectSystem=full</span>
<span id="cb5-10">ProtectHome=true</span>
<span id="cb5-11">ExecStart=/usr/sbin/nft -f /etc/nftables.conf</span>
<span id="cb5-12">ExecReload=/usr/sbin/nft -f /etc/nftables.conf</span>
<span id="cb5-13">ExecStop=/usr/sbin/nft flush ruleset</span>
<span id="cb5-14"></span>
<span id="cb5-15">[Install]</span>
<span id="cb5-16">WantedBy=multi-user.target</span></code></pre></div>
</div>
<p>The systemd nftables service seems to be a oneshot service that does nothing but flush the nftables rules. After disabling this service and using <code>iptables-compat-restore</code>, again, the “Fileshare filtering” check passes again.</p>
<p>After <code>apt remove iptables</code>, this removes <code>iptables</code>… and <code>iptables-nftables-compat</code>. But the “Fileshare remove iptables” check passes.</p>
</section>
<section id="firewall-logging" class="level2">
<h2 class="anchored" data-anchor-id="firewall-logging">Firewall Logging</h2>
<p>What needs to be logged:</p>
<ul>
<li>Log all SSH connection attempts with a prefix of “SSH DETECTED”</li>
</ul>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb6-1">iptables-compat -N SSH # Create new chain for SSH</span>
<span id="cb6-2"></span>
<span id="cb6-3">iptables-compat -D INPUT -j ACCEPT -p tcp --dport 22 # delete the existing ssh rule</span>
<span id="cb6-4"></span>
<span id="cb6-5">iptables-compat -A INPUT -j SSH -p tcp --dport 22 # Create new ssh rule that targets ssh chain instead</span>
<span id="cb6-6"></span>
<span id="cb6-7">iptables-compat -A SSH -m limit --limit 5/min -j LOG --log-prefix "SSH DETECTED " --log-level 4</span>
<span id="cb6-8"></span>
<span id="cb6-9">iptables-compat -A SSH -j ACCEPT</span></code></pre></div>
<p>This works, and logs are reported in syslog, and forwarded to the domain controller machine. It just does not pass the check.</p>
</section>
</section>
<section id="prod-joomia" class="level1">
<h1>Prod-Joomia</h1>
<section id="nftables-migration-1" class="level2">
<h2 class="anchored" data-anchor-id="nftables-migration-1">Nftables migration</h2>
<p>Follow steps for the machine “Fileshare”.</p>
</section>
<section id="firewall-logging-1" class="level2">
<h2 class="anchored" data-anchor-id="firewall-logging-1">Firewall logging</h2>
<p>Follow steps for “Fileshare” machine.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb7-1">iptables-compat -N DROPLOG</span>
<span id="cb7-2"></span>
<span id="cb7-3">iptables-compat -P INPUT ACCEPT # Accepts all input packets</span>
<span id="cb7-4"></span>
<span id="cb7-5">iptables-compat -A INPUT -j DROPLOG # if this is the last rule in the chain, then any packets that don't match previous rules are subject to this one instead.</span>
<span id="cb7-6"></span>
<span id="cb7-7">iptables-compats -A DROPLOG --m limit -limit 5/min -j LOG --log-prefix "PACKET DROPPED " --log-level 4</span>
<span id="cb7-8"></span>
<span id="cb7-9">iptables-compat -A DROPLOG -j DROP # If this is the last rule in the "DROPLOG" chain, then packets which don't match this rule will match this instead</span></code></pre></div>
</section>
</section>
<section id="domain-controller" class="level1">
<h1>Domain-Controller</h1>
<p>On the desktop, there is program to install “Syslog” watcher. Follow the prompts. Install both the service, and the manager. Make sure to select the option to open the firewall port as well.</p>
<p><img src="./writeups/nice-challenge-6/images/syslogssh.jpeg" class="img-fluid"></p>
<p>It seems to be detecting syslog connections with ssh, but I’m not getting the points. It does say “SSH DETECTED” logged from the Fileshare machine.</p>


</section>

 ]]></description>
  <category>linux</category>
  <category>_writeups</category>
  <guid>./writeups/nice-challenge-6/</guid>
  <pubDate>Sun, 25 Aug 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Portable executable experiments for CCDC</title>
  <link>./playground/ape-experiments/</link>
  <description><![CDATA[ 




<p>One of the big problems encountered in <a href="https://en.wikipedia.org/wiki/National_Collegiate_Cyber_Defense_Competition">CCDC</a> is the portability of tools. Competitors will be asked to work across a vareity of Linux distros, of various types and various package versions, and even across the BSD versions. Of course, sometimes the solution is simple: install your tools, like python or tmux, from the package manager on every Linux/BSD OS.</p>
<p>The second problem is that the organizers of the competition may break our package managers. Deleting repos, or giving us a distro without a package manager.</p>
<p>I was looking into portable executables, to get around this. I would like to have a portable version of python, so that ansible playbooks relating to firewall automation and backups can be run as soon as possible, and also a portable terminal multiplexer, so that our team members can collaborate directly.</p>
<section id="apecosmo" class="level1">
<h1>Ape/Cosmo</h1>
<p><a href="https://justine.lol/cosmopolitan/index.html">Cosmopolitan</a> is a project that turns C into build once, run anywhere language. It works by creating a fat binary that contains code for all other operating systems, including UEFI, and then dynamically figuring out where it is being run.</p>
<p>There are some precompiled binaries for ape as well:</p>
<ul>
<li><a href="https://github.com/ahgamut/superconfigure/releases" class="uri">https://github.com/ahgamut/superconfigure/releases</a></li>
<li><a href="https://cosmo.zip/pub/cosmos/bin/" class="uri">https://cosmo.zip/pub/cosmos/bin/</a></li>
</ul>
<p>Some of these tools are very interesting, in particular <code>tmux</code> and <code>python</code>. Ansible requires python to be on the machines, but it can be difficult to get python on a machine, especially if the package manager is broken. I can easily imagine something like:</p>
<p><code>cat staticpython | ssh hostname "cat &gt; remotestaticssh"</code></p>
<p>The above would enable us to get a version of staticly compiled python on anything with ssh, and only ssh needed. There are also some <a href="https://superuser.com/questions/291423/how-to-copy-a-file-without-using-scp-inside-an-ssh-session">other ways to do it</a>.</p>
<p>I download an actually portable version of tmux and python, and attempt to run them (the test is to see if they still work without glibc, which is often a limitation of portability for many other portable binaries).</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb1-1">[moonpie@lizard apeb]$ ./python</span>
<span id="cb1-2">0088:err:sync:RtlpWaitForCriticalSection section 00006FFFFFFAC440 "../wine-staging/dlls/ntdll/loader.c: loader_section" wait timed out in thread 0088, blocked by 007c, retrying (60 sec)</span>
<span id="cb1-3">0120:fixme:file:server_get_file_info Unsupported info class 1c</span>
<span id="cb1-4">0120:fixme:file:NtFsControlFile FSCTL_GET_REPARSE_POINT semi-stub</span>
<span id="cb1-5">0120:fixme:file:server_get_file_info Unsupported info class 1c</span>
<span id="cb1-6">0120:fixme:file:server_get_file_info Unsupported info class 1c</span>
<span id="cb1-7">Python 3.12.3 (main, Aug  3 2024, 10:18:33) [GCC 14.1.0] on linux</span>
<span id="cb1-8">Type "help", "copyright", "credits" or "license" for more information.</span>
<span id="cb1-9">0120:fixme:file:server_get_file_info Unsupported info class 1c</span>
<span id="cb1-10">&gt;&gt;&gt; exit(_</span>
<span id="cb1-11">^C0124:err:virtual:virtual_setup_exception stack overflow 1280 bytes addr 0x952cd2 stack 0x1300b00 (0x1300000-0x1301000-0x1400000)</span>
<span id="cb1-12">^C012c:err:virtual:virtual_setup_exception stack overflow 1280 bytes addr 0x952cd2 stack 0x1400b00 (0x1400000-0x1401000-0x1500000)</span>
<span id="cb1-13">^C0134:err:virtual:virtual_setup_exception stack overflow 1280 bytes addr 0x952cd2 stack 0x1500b00 (0x1500000-0x1501000-0x1600000)</span>
<span id="cb1-14">^C013c:err:virtual:virtual_setup_exception stack overflow 1280 bytes addr 0x952cd2 stack 0x1600b00 (0x1600000-0x1601000-0x1700000)</span>
<span id="cb1-15">^C0144:err:virtual:virtual_setup_exception stack overflow 1280 bytes addr 0x952cd2 stack 0x1700b00 (0x1700000-0x1701000-0x1800000)</span></code></pre></div>
<p>uhhhh…. my Arch Linux install attempts to use wine to load up the python program. There are also issues quitting, and I end up having to use pkill to kill python.</p>
<p>The way to avoid this is to use the <a href="https://justine.lol/apeloader/">ape loader</a>.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1">[moonpie@lizard apeb]$ ./ape-x86_64.elf ./python</span>
<span id="cb2-2">Python 3.12.3 (main, Aug  3 2024, 10:18:33) [GCC 14.1.0] on linux</span>
<span id="cb2-3">Type "help", "copyright", "credits" or "license" for more information.</span>
<span id="cb2-4">&gt;&gt;&gt;</span>
<span id="cb2-5">``</span>
<span id="cb2-6"></span>
<span id="cb2-7">And this works. But, although there is also a version of python distributed with many python libraries included, called `pypack1`, it doesn't contain some crucial python packages that I may need for ansible administration of systems, like sql manipulation tools. </span>
<span id="cb2-8"></span>
<span id="cb2-9">```{.default}</span>
<span id="cb2-10">[moonpie@lizard apeb]$ ./ape-x86_64.elf ./python -m venv venv</span>
<span id="cb2-11">Error: Command '['/home/moonpie/vscode/test/apeb/venv/bin/python', '-m', 'ensurepip', '--upgrade', '--default-pip']' returned non-zero exit status 1.</span></code></pre></div>
<p>Yeah. I’m not too worried, because I wrote my roles so that the databse manipulation can also be done remotely, from a playbook running on localhost, but it would be simpler if everything can be run on the remote systems.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb3-1">[moonpie@lizard apeb]$ ./ape-x86_64.elf ./tmux</span>
<span id="cb3-2">[moonpie@lizard apeb]$ ./ape-x86_64.elf ./tmux -h</span>
<span id="cb3-3">tmux: unknown option -- h</span>
<span id="cb3-4">usage: tmux [-2CDlNuvV] [-c shell-command] [-f file] [-L socket-name]</span>
<span id="cb3-5">            [-S socket-path] [-T features] [command [flags]]</span></code></pre></div>
<p>And tmux just won’t load, although it will print the help output. I find this very weird, as I could get tmux to load earlier, but not now. It doesn’t load on my host system, or in an Debian or Alpine container.</p>
<p>This only seems to apply to the ape tmux, as tmux installed by apt in a debian container doesn’t have this issue, and then after that, tmux is able to start sessions normally, but then it can’t again after I kill all sessions. At least this isolates it to an issue with ape.</p>
<p>It could just be a bug of some sort, but the package version only updated 3 days ago from now (August 6th), so those haven’t changed.</p>
<p>The weirdest thing is that the ape tmux is actually able to work normally… but only after I launch a session via non-ape tmux. And then, one I kill all tmux sessions, then it stops working again.</p>
<p>It seems like the ape tmux is having trouble starting the server:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb4-1">/stuff # ape ./tmux start-server</span>
<span id="cb4-2">/stuff #</span>
<span id="cb4-3">/stuff # ape ./tmux ls</span>
<span id="cb4-4">no server running on /tmp/tmux-0/default</span></code></pre></div>
<p>I found a <a href="https://github.com/tmux/tmux/issues/736">half relevant issue</a>, but the failed solution gives me more answers:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb5-1">/stuff # ape ./tmux new-session -t testing -d</span>
<span id="cb5-2">create window failed: fork failed: Operation not permitted</span></code></pre></div>
<p>I eventually made a post on the redbean discord server, and uploaded my <a href="https://gist.github.com/moonpiedumplings/809dcc89cfe289f8341aae85069a57e1">strace to a github gist</a>. I’ll wait to see if anyone replies.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb6-1">[moonpie@lizard apeb]$ ./ape-x86_64.elf ./tmux new-session -d -vv</span>
<span id="cb6-2">no server running on /tmp/tmux-1000/default</span></code></pre></div>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb7-1">/stuff # ./ape-x86_64.elf ./tmux new-session -d -vv</span>
<span id="cb7-2">no server running on /tmp/tmux-0/default</span></code></pre></div>
<p>So tmux can be ran with -vv for something more verbose.</p>
<p>This might also be a tmux bug, since the version of tmux provided by ape/cosmo is 3.3a, rather than the latest 3.4, however, the nix bundled tmux also has this issue, and nix has 3.4 of tmux.</p>
<p>I played around with attempting to build newer versions of tmux from the <a href="https://github.com/ahgamut/superconfigure?tab=readme-ov-file#how-can-i-build-these-locally">superconfigure</a> github repo, but their instructions don’t seem to work. The scripts assume Ubuntu 22 LTS, although I was only able to find that out after looking at what distro was used in their github actions.</p>
<section id="openbsd" class="level2">
<h2 class="anchored" data-anchor-id="openbsd">Openbsd</h2>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb8-1">[vagrant@openbsd7 ~]$ ./ape ./python</span>
<span id="cb8-2">Python 3.12.3 (main, Aug  3 2024, 10:18:33) [GCC 14.1.0] on linux</span>
<span id="cb8-3">Type "help", "copyright", "credits" or "license" for more information.</span>
<span id="cb8-4">&gt;&gt;&gt;</span>
<span id="cb8-5">[vagrant@openbsd7 ~]$ ./ape ./tmux new-ession -d -vv</span>
<span id="cb8-6">no server running on /tmp/tmux-1000/default</span></code></pre></div>
</section>
<section id="netbsd" class="level2">
<h2 class="anchored" data-anchor-id="netbsd">NetBSD</h2>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb9-1">[vagrant@netbsd8 ~]$ ./ape ./python</span>
<span id="cb9-2">Python 3.12.3 (main, Aug  3 2024, 10:18:33) [GCC 14.1.0] on linux</span>
<span id="cb9-3">Type "help", "copyright", "credits" or "license" for more information.</span>
<span id="cb9-4">&gt;&gt;&gt;</span>
<span id="cb9-5">[vagrant@netbsd8 ~]$ ./ape ./tmux new-session -d -vv</span>
<span id="cb9-6">no server running on /tmp/tmux-1000/default</span></code></pre></div>
<p>Vim executes successfully as well. It’s able to execute without the ape interpeter, but python crashes when I try to do that.</p>
</section>
<section id="dragonflybsd" class="level2">
<h2 class="anchored" data-anchor-id="dragonflybsd">DragonflyBSD</h2>
<p>We’ve seen this FreeBSD fork in the competition environment.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb10-1">[vagrant@dragonflybsd6 ~]$ ./ape ./python</span>
<span id="cb10-2">ELF binary type "9" not known.</span>
<span id="cb10-3">-bash: ./ape: cannot execute binary file: Exec format error</span>
<span id="cb10-4">[vagrant@dragonflybsd6 ~]$ ./ape ./tmux</span>
<span id="cb10-5">ELF binary type "9" not known.</span>
<span id="cb10-6">-bash: ./ape: cannot execute binary file: Exec format error</span>
<span id="cb10-7">[vagrant@dragonflybsd6 ~]$ ./ape ./vim</span>
<span id="cb10-8">ELF binary type "9" not known.</span>
<span id="cb10-9">-bash: ./ape: cannot execute binary file: Exec format error</span>
<span id="cb10-10">[vagrant@dragonflybsd6 ~]$</span></code></pre></div>
</section>
<section id="freebsd" class="level2">
<h2 class="anchored" data-anchor-id="freebsd">FreeBSD</h2>
<p>I’m having trouble packagint the Vagrant VM.</p>
</section>
</section>
<section id="nix-bundle" class="level1">
<h1>Nix bundle</h1>
<p><code>nix bundle nixpkgs#programname</code> is a command that bundles a program into a self extracting archive that uses proot to run itself. A big problem with nix bundle is that it mostly only works on Linux, and relying on proot makes it less portable compared to ape. <a href="https://nix.dev/manual/nix/2.13/command-ref/new-cli/nix3-bundle">Here is the official manual</a>… on an unofficial site.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb11-1">[moonpie@lizard apeb]$ nix bundle nixpkgs#zellij</span>
<span id="cb11-2">[moonpie@lizard apeb]$ ls -la zellij</span>
<span id="cb11-3">lrwxrwxrwx 1 moonpie moonpie 47 Aug  6 22:28 zellij -&gt; /nix/store/5d5fi0x4g7v33m7jscxwjijaxi3lg2kp-arx</span></code></pre></div>
<p>One thing that is mildly annoying is that nix builds stuff in the nix store, and then symlinks to it from the outside, meaning you have to copy out the binary first.</p>
<p>The first thing I tried to do was bundle zellij and tmux, and funnily enough, they run into the exact same issue as ape. If I launch a zellij or tmux session using a non-ape, non nix-bundled session, first, then I can use the nix bundled zellij or tmux normally.</p>
</section>
<section id="guix-pack" class="level1">
<h1>Guix pack</h1>
<p>Guix pack is different. Rather than doing self extracting or staticly compiled executables, it generates a tarball (or docker image, but I’m focused on tarball), which can be extracted and has the programs with a vendored dependency.</p>
<p>I found a <a href="https://hub.docker.com/r/metacall/guix">docker container for guix</a>, which is good because I’d rather run guix entirely in a podman container in my home volume, to avoid snapshotting guix in btrfs snapshots of the root subvolume.</p>
<p><code>podman run -it --rm -v ".:/stuff" --privileged</code></p>
<p>I had to run it with –privileged, otherwise the guix builder fails.</p>
<p>Once inside, the <code>guix pack</code> command packs programs into a tarball. <a href="https://guix.gnu.org/manual/en/html_node/Invoking-guix-pack.html">Documentation</a></p>
<p><code>guix pack -RR tmux</code> generates a tarball… but I’m struggling to run it outside the store.</p>
</section>
<section id="appimage" class="level1">
<h1>Appimage</h1>
<p>Appimages are good, but with a few caveats: They only work on Linux, and they require fuse2 (not fuse3, but fuse2) to run, and they rely on the same version of glibc.</p>
<p>There are some <a href="https://github.com/tmux/tmux/wiki/Installing#appimage-package">prebuilt appimages for tmux</a> and it works fine after I install fuse2.</p>
</section>
<section id="static-compilation" class="level1">
<h1>Static Compilation</h1>
<section id="tmux" class="level2">
<h2 class="anchored" data-anchor-id="tmux">Tmux</h2>
<p><a href="https://github.com/tmux/tmux/wiki/Installing">tmux has instructions for installing</a>.</p>
<p><code>apk add git gcc musl-dev openssl-dev openssl-libs-static openssl ncurses-terminfo</code></p>
<p>After these packages are installed, compiling tmux staticly will work. (it should be noted that the instructions assume you use the relase tarball, rather than directly from the source code).</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb12-1">./configure --enable-static</span>
<span id="cb12-2"></span>
<span id="cb12-3">make</span></code></pre></div>
<p>However:</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb13-1">/stuff # ./stmux</span>
<span id="cb13-2">can't find terminfo database</span></code></pre></div>
<p>The staticly compiled tmux doesn’t include ncurses and terminfo libraries. After installing <code>ncurses-terminfo</code> then it works fine.</p>
<p>Apparently it’s possible to staticly bundle ncurses, libevent, and tmux, but it’s an even more involved process. Users must compile ncurses, which generates .a files and then link those to tmux when compiling using LIBS and -l flag to link it.</p>
</section>
<section id="zellij" class="level2">
<h2 class="anchored" data-anchor-id="zellij">Zellij</h2>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb14-1">git clone https://github.com/zellij-org/zellij/</span>
<span id="cb14-2"></span>
<span id="cb14-3">podman run -it --rm -v "./zellij:/zellij" docker.io/library/rust:alpine3.18</span>
<span id="cb14-4"></span>
<span id="cb14-5">apk add openssl1.1-compat openssl1.1-compat-dev openssl1.1-compat-libs-static musl-utils musl-dev protoc # but only for alpine 3.18</span>
<span id="cb14-6"></span>
<span id="cb14-7">alternatively: apk add openssl openssl-libs-static openssl-dev musl-utils musl-dev protoc</span>
<span id="cb14-8"></span>
<span id="cb14-9">cd /zellij</span>
<span id="cb14-10"></span>
<span id="cb14-11">rustup target add x86_64-unknown-linux-musl</span>
<span id="cb14-12"></span>
<span id="cb14-13">rustup target add wasm32-wasi</span>
<span id="cb14-14"></span>
<span id="cb14-15">RUSTFLAGS="-C target-feature=+crt-static" OPENSSL_NO_VENDOR="1" cargo build --target x86_64-unknown-linux-musl  </span>
<span id="cb14-16"></span>
<span id="cb14-17"></span>
<span id="cb14-18">/stuff/zellij # RUSTFLAGS="-C target-feature=+crt-static" OPENSSL_NO_VENDOR="1" cargo xtask build</span>
<span id="cb14-19">error: cannot produce proc-macro for `prost-derive v0.11.9` as the target `x86_64-unknown-linux-musl` does not support these crate types</span></code></pre></div>
<p>This still crashes for now, but I need to figure out how to compile it if I want to target other BSD’s.</p>
<p><code>error: couldn't read /stuff/zellij/zellij-utils/../target/wasm32-wasi/debug/compact-bar.wasm: No such file or directory (os error 2)</code></p>
<p>Let’s try debian, since it seems they do their official builds — even musl ones — on ubuntu.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb15-1"></span>
<span id="cb15-2">podman run -it --rm -v "./zellij:/zellij" docker.io/library/rust:bookworm</span>
<span id="cb15-3"></span>
<span id="cb15-4">apt update &amp;&amp; apt install musl-tools protobuf-compiler</span>
<span id="cb15-5"></span>
<span id="cb15-6">rustup target add x86_64-unknown-linux-musl</span>
<span id="cb15-7"></span>
<span id="cb15-8">rustup target add wasm32-wasi</span>
<span id="cb15-9"></span>
<span id="cb15-10">cargo xtask ci cross x86_64-unknown-linux-musl   # This crashes</span>
<span id="cb15-11"></span>
<span id="cb15-12">cargo build --verbose --release --target x86_64-unknown-linux-musl # This works</span>
<span id="cb15-13"></span>
<span id="cb15-14">rustup target add x86_64-unknown-netbsd</span>
<span id="cb15-15"></span>
<span id="cb15-16">cargo build --verbose --release --target x86_64-unknown-netbsd</span>
<span id="cb15-17"> error occurred: Failed to find tool. Is `x86_64--netbsd-gcc` installed?</span></code></pre></div>
<p>So it seems like cross compilation support isn’t too good.</p>
<p>Then I tried with the alpine container in the same directory:</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb16-1"></span>
<span id="cb16-2">apk add openssl openssl-libs-static openssl-dev musl-utils musl-dev protoc gcc-cross-embedded</span>
<span id="cb16-3"></span>
<span id="cb16-4">rustup target add wasm32-wasi</span>
<span id="cb16-5"></span>
<span id="cb16-6">rustup target add x86_64-unknown-netbsd</span>
<span id="cb16-7"></span>
<span id="cb16-8">RUSTFLAGS="-C target-feature=+crt-static" OPENSSL_NO_VENDOR="1" OPENSSL_INCLUDE_DIR="/usr/include/openssl" OPENSSL_LIB_DIR="/usr/lib" cargo build --target x86_64-unknown-freebsd</span></code></pre></div>
<p>This is much closer, but doesn’t work.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb17-1">note: /usr/lib/gcc/x86_64-alpine-linux-musl/13.2.1/../../../../x86_64-alpine-linux-musl/bin/ld: cannot find -lexecinfo: No such file or directory</span>
<span id="cb17-2">          /usr/lib/gcc/x86_64-alpine-linux-musl/13.2.1/../../../../x86_64-alpine-linux-musl/bin/ld: cannot find -lkvm: No such file or directory</span>
<span id="cb17-3">          /usr/lib/gcc/x86_64-alpine-linux-musl/13.2.1/../../../../x86_64-alpine-linux-musl/bin/ld: cannot find -lmemstat: No such file or directory</span>
<span id="cb17-4">          /usr/lib/gcc/x86_64-alpine-linux-musl/13.2.1/../../../../x86_64-alpine-linux-musl/bin/ld: cannot find -lkvm: No such file or directory</span>
<span id="cb17-5">          /usr/lib/gcc/x86_64-alpine-linux-musl/13.2.1/../../../../x86_64-alpine-linux-musl/bin/ld: cannot find -lprocstat: No such file or directory</span>
<span id="cb17-6">          /usr/lib/gcc/x86_64-alpine-linux-musl/13.2.1/../../../../x86_64-alpine-linux-musl/bin/ld: cannot find -ldevstat: No such file or directory</span>
<span id="cb17-7">          /usr/lib/gcc/x86_64-alpine-linux-musl/13.2.1/../../../../x86_64-alpine-linux-musl/bin/ld: cannot find -lexecinfo: No such file or directory</span>
<span id="cb17-8">          collect2: error: ld returned 1 exit status</span></code></pre></div>
<p>Zellij already ships a <a href="https://github.com/zellij-org/zellij/releases">static version on their releases</a> (zellij-x86_64-unknown-linux-musl.tar.gz). From my testing, it only runs on Linux.</p>
</section>
<section id="python" class="level2">
<h2 class="anchored" data-anchor-id="python">Python</h2>
<ul>
<li><a href="https://github.com/indygreg/python-build-standalone" class="uri">https://github.com/indygreg/python-build-standalone</a> / <a href="https://gregoryszorc.com/docs/python-build-standalone/main/" class="uri">https://gregoryszorc.com/docs/python-build-standalone/main/</a></li>
<li><a href="https://pyoxidizer.readthedocs.io/en/latest/pyoxy.html" class="uri">https://pyoxidizer.readthedocs.io/en/latest/pyoxy.html</a></li>
<li><a href="https://wiki.python.org/moin/BuildStatically" class="uri">https://wiki.python.org/moin/BuildStatically</a> — not as promising</li>
<li><a href="https://github.com/RustPython/RustPython" class="uri">https://github.com/RustPython/RustPython</a>
<ul>
<li>Not <a href="https://rustpython.github.io/pages/whats-left">feature complete</a></li>
</ul></li>
</ul>
<section id="indygreg-python" class="level3">
<h3 class="anchored" data-anchor-id="indygreg-python">IndyGreg Python</h3>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb18-1">usage: build-main.py [-h]</span>
<span id="cb18-2">                     [--target-triple {s390x-unknown-linux-gnu,x86_64_v4-unknown-linux-gnu,ppc64le-unknown-linux-gnu,x86_64_v2-unknown-linux-gnu,i686-unknown-linux-gnu,x86_64_v3-unknown-linux-gnu,x86_64-unknown-linux-musl,x86_64-unknown-linux-gnu,armv7-unknown-linux-gnueabihf,armv7-unknown-linux-gnueabi,x86_64_v4-unknown-linux-musl,mipsel-unknown-linux-gnu,x86_64_v3-unknown-linux-musl,mips-unknown-linux-gnu,aarch64-unknown-linux-gnu,x86_64_v2-unknown-linux-musl}]</span>
<span id="cb18-3">                     [--optimizations {lto,pgo+lto,noopt,pgo,debug}] [--python {cpython-3.10,cpython-3.11,cpython-3.8,cpython-3.12,cpython-3.9}] [--python-source PYTHON_SOURCE]</span>
<span id="cb18-4">                     [--break-on-failure] [--no-docker] [--serial]</span>
<span id="cb18-5">                     [--make-target {default,toolchain-image-xcb,toolchain-image-build,empty,toolchain-image-xcb.cross,toolchain-image-gcc,toolchain,toolchain-image-build.cross}]</span>
<span id="cb18-6">build-main.py: error: argument --target-triple: invalid choice: 'x86_64-unknown-freebsd' (choose from 's390x-unknown-linux-gnu', 'x86_64_v4-unknown-linux-gnu', 'ppc64le-unknown-linux-gnu', 'x86_64_v2-unknown-linux-gnu', 'i686-unknown-linux-gnu', 'x86_64_v3-unknown-linux-gnu', 'x86_64-unknown-linux-musl', 'x86_64-unknown-linux-gnu', 'armv7-unknown-linux-gnueabihf', 'armv7-unknown-linux-gnueabi', 'x86_64_v4-unknown-linux-musl', 'mipsel-unknown-linux-gnu', 'x86_64_v3-unknown-linux-musl', 'mips-unknown-linux-gnu', 'aarch64-unknown-linux-gnu', 'x86_64_v2-unknown-linux-musl')</span>
<span id="cb18-7">[moonpie@lizard python-build-standalone]$ ./build-linux.py --target x86_64-unknown-freebsd</span></code></pre></div>
<p>No freebsd or other non-linux support.</p>
</section>
</section>
<section id="coreutils" class="level2">
<h2 class="anchored" data-anchor-id="coreutils">Coreutils</h2>
<ul>
<li><a href="https://github.com/uutils/coreutils" class="uri">https://github.com/uutils/coreutils</a></li>
<li><a href="https://packages.debian.org/sid/busybox-static" class="uri">https://packages.debian.org/sid/busybox-static</a></li>
<li><a href="https://busybox.net/FAQ.html" class="uri">https://busybox.net/FAQ.html</a> — looks like busybox releases are already staticly linked, but they mostly focus on Linux releases</li>
<li><a href="https://github.com/ahgamut/superconfigure/releases/" class="uri">https://github.com/ahgamut/superconfigure/releases/</a> — this is cosmo. I would prefer a single binary though, for simplicity, rather than seperate staticly compiled coreutils which is what this is.</li>
</ul>
</section>
<section id="toolpacks" class="level2">
<h2 class="anchored" data-anchor-id="toolpacks">Toolpacks</h2>
<p>I recently learned about a new project, called <a href="https://github.com/Azathothas/Toolpacks">Toolpacks</a>. Toolpacks is a truly massive set of static binaries, with so many utilities, including zellij, tmux, ssh, and many others. I see 2292 binaries for x86_64 Linux, and good amounts for Windows and Arm Linux as well.</p>
<p>Another cool thing about Toolpacks is that they also provide <a href="https://en.wikipedia.org/wiki/UPX">UPX</a> versions of the software they distribute. UPX is a method of creating self extracting, compressed binaries that further saves space. For example:</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb19-1">[moonpie@lizard toolpack]$ du -sh zellij</span>
<span id="cb19-2">30M     zellij</span>
<span id="cb19-3">[moonpie@lizard toolpack]$ du -sh zellij.upx</span>
<span id="cb19-4">8.6M    zellij.upx</span></code></pre></div>
<p>That’s a pretty big reduction on the zellij binary, which is one of the largest binaries I’ve seen. Interesting, they also have caddy, and nginx. I find this very promising.</p>
<p>There are also builds of busybox or toybox, which could replace coreutils in a pinch on Linux machines. There are a few other interesting one’s, such as <a href="https://github.com/vdjagilev/nmap-formatter">nmap-formatter</a>, a software that can format nmap XML output and convert it to CSV or other formats, which we may find easier to submit.</p>
</section>
</section>
<section id="less-promising-options" class="level1">
<h1>Less promising options</h1>
<section id="pkgin" class="level2">
<h2 class="anchored" data-anchor-id="pkgin">pkgin</h2>
<p><a href="https://pkgin.net/" class="uri">https://pkgin.net/</a></p>
<p>Pkgin is a package manager that can build things from source quickly. It works on multiple BSDs (including Dragonfly), Macos, and Debian Linux. I don’t think we’ll ever see Opensolaris but we’ll see.</p>


</section>
</section>

 ]]></description>
  <category>linux</category>
  <category>_playground</category>
  <guid>./playground/ape-experiments/</guid>
  <pubDate>Tue, 06 Aug 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Creating a nix flake shell, the “proper” way</title>
  <link>./playground/flake-shell/</link>
  <description><![CDATA[ 




<p>So, I think it’s time for me to move from the older channels way of doing things in nix, to the newer flakes. I am using the <a href="https://github.com/DeterminateSystems/nix-installer">determinate system nix installer</a>, which only comes with flakes. However, the nix docs are very poor, so I am going to document my process of converting my development environment here.</p>
<p>The first thing, is that despite the fact that there is a lot of the existing flakes use a utility called <a href="https://github.com/numtide/flake-utils">flake-utils</a>. However, this tool was ultimately started as an experiment, and has issues. A <a href="https://ayats.org/blog/no-flake-utils/">blog post</a> (<a href="https://web.archive.org/web/20240229094244/https://ayats.org/blog/no-flake-utils/">archive</a>) goes over some of the issues it has, and recommends against it… except I can’t figure out at all how to apply it.</p>
<p>The other recommendation is another pattern, recommended by Reddit user Tomberek:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode nix code-with-copy"><code class="sourceCode nix"><span id="cb1-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-2">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">inputs</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nixpkgs</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"github:NixOS/nixpkgs/22.05"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-3">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">outputs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nixpkgs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>: <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-4">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">devShells</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">builtins</span>.mapAttrs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">system</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-5">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">default</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.mkShell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-6">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">shellHook</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb1-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          echo 'WARNING: gotcha during nix develop shellHooks'</span></span>
<span id="cb1-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          function _direnv_hook(){</span></span>
<span id="cb1-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">              echo 'WARNING, "_direnv_hook" has been overwritten"'</span></span>
<span id="cb1-10"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          }</span></span>
<span id="cb1-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        ''</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-12">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb1-13">          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>pkgs.writeShellApplication <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-14">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">name</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ls"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-15">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">text</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb1-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">              echo 'WARNING, "ls" has been overwritten"'</span></span>
<span id="cb1-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            ''</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-18">          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb1-19">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb1-20">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb1-21">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb1-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">})</span> nixpkgs.legacyPackages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-23">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb1-24"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>There are multiple different ways of creating an output for multiple systems at once, it seems.</p>
<p>So far:</p>
<ul>
<li>ForEachSystem</li>
<li>Flake-parts</li>
<li>Flake-utils</li>
<li>Tomberek’s method</li>
</ul>
<p>I suspect there are other methods, potentially better one’s, that aren’t documented. However, because of the <a href="https://ayats.org/blog/no-flake-utils/">no-flake-utils</a> blogpost, where the author suggests to use pure nix and no libraries, I have decided to opt for that approach.</p>
<p>My ultimate goal is to convert the shell.nix I am using, into a flake.</p>
<p>I have a simple outline:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>flake.nix</strong></pre>
</div>
<div class="sourceCode" id="cb2" data-filename="flake.nix" style="background: #f1f3f5;"><pre class="sourceCode nix code-with-copy"><code class="sourceCode nix"><span id="cb2-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-2">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">inputs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-3">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nixpkgs</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nixpkgs"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-4">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb2-5">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">outputs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> inputs @ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nixpkgs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">...}</span>: <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span></span>
<span id="cb2-6"></span>
<span id="cb2-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> nixpkgs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{};</span></span>
<span id="cb2-8"></span>
<span id="cb2-9">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">forAllSystems</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb2-10">      nixpkgs.lib.genAttrs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb2-11">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x86_64-linux"</span></span>
<span id="cb2-12">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aarch64-linux"</span></span>
<span id="cb2-13">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">system</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb2-14">        function <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> nixpkgs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-15">          <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">inherit</span> system<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-16">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">config</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">allowUnfree</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-17">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">overlays</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb2-18">            inputs.something.overlays.default</span>
<span id="cb2-19">          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb2-20">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}));</span></span>
<span id="cb2-21"></span>
<span id="cb2-22">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-23">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">devShells</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x86_64-linux</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">default</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.mkShell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-24">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> pkgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> </span>
<span id="cb2-25">            nodePackages_latest.npm</span>
<span id="cb2-26">            quarto</span>
<span id="cb2-27">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb2-28">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb2-29">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb2-30"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p>After some tinkering, I get this to at least load, and not give me a syntax error. Instead, it gives me a different error:</p>
<p><code>error: flake 'git+file:///home/moonpie/vscode/test/flake-test' does not provide attribute 'packages.x86_64-linux.default' or 'defaultPackage.x86_64-linux'</code></p>
<p>I find this odd, since I provide a devshell. However, I realized that the other command to get a reproducible shell environment, <code>nix develop</code>, might be what is used instead to call upon the <code>devShells</code> attribute.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb3-1">[moonpie@lizard flake-test]$ nix develop</span>
<span id="cb3-2">error:</span>
<span id="cb3-3">       … while evaluating a branch condition</span>
<span id="cb3-4">         at /nix/store/2yb39wmx10a5lsm4d2jj7c6h94h36spi-source/pkgs/stdenv/booter.nix:64:9:</span>
<span id="cb3-5">           63|       go = pred: n:</span>
<span id="cb3-6">           64|         if n == len</span>
<span id="cb3-7">             |         ^</span>
<span id="cb3-8">           65|         then rnul pred</span>
<span id="cb3-9"></span>
<span id="cb3-10">       … while calling the 'length' builtin</span>
<span id="cb3-11">         at /nix/store/2yb39wmx10a5lsm4d2jj7c6h94h36spi-source/pkgs/stdenv/booter.nix:62:13:</span>
<span id="cb3-12">           61|     let</span>
<span id="cb3-13">           62|       len = builtins.length list;</span>
<span id="cb3-14">             |             ^</span>
<span id="cb3-15">           63|       go = pred: n:</span>
<span id="cb3-16"></span>
<span id="cb3-17">       (stack trace truncated; use '--show-trace' to show the full trace)</span>
<span id="cb3-18"></span>
<span id="cb3-19">       error: attribute 'currentSystem' missing</span>
<span id="cb3-20">       at /nix/store/2yb39wmx10a5lsm4d2jj7c6h94h36spi-source/pkgs/top-level/impure.nix:17:43:</span>
<span id="cb3-21">           16|   # (build, in GNU Autotools parlance) platform.</span>
<span id="cb3-22">           17|   localSystem ? { system = args.system or builtins.currentSystem; }</span>
<span id="cb3-23">             |                                           ^</span>
<span id="cb3-24">           18|</span></code></pre></div>
<p>What’s the difference between nix shell and nix develop? From my understanding, <code>nix develop</code> is designed for developing packages, as it brings in build dependencies, rather than only runtime dependencies. It’s because of this, that I want <code>nix shell</code> to work instead, because that command seems to be focused more on simply getting the tools I want.</p>
<p>Except, according to some comparisons I found online, <a href="https://discourse.nixos.org/t/difference-between-nix-shell-nix-shell-nix-develop/32469/4">nix shell can’t even adjust environment variables</a>. Now of course, a single forum reply is <em>not</em> documentation… but nix’s documentation is very poor, and this is a common frustration, being forced to rely on forum posts rather than official documentation for information.</p>
<p>The <a href="https://nix.dev/manual/nix/2.18/command-ref/new-cli/nix3-shell">official docs</a> talk about using <code>nix shell</code> as a command line program, but not at all how it interacts with flakes and .nix files.</p>
<p>I got something that works for <code>nix develop</code></p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>flake.nix</strong></pre>
</div>
<div class="sourceCode" id="cb4" data-filename="flake.nix" style="background: #f1f3f5;"><pre class="sourceCode nix code-with-copy"><code class="sourceCode nix"><span id="cb4-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-2">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">inputs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-3">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nixpkgs</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nixpkgs"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-4">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb4-5">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">outputs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> inputs @ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nixpkgs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">...}</span>: <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span></span>
<span id="cb4-6"></span>
<span id="cb4-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> nixpkgs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{};</span></span>
<span id="cb4-8"></span>
<span id="cb4-9">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">forAllSystems</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb4-10">      nixpkgs.lib.genAttrs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb4-11">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x86_64-linux"</span></span>
<span id="cb4-12">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aarch64-linux"</span></span>
<span id="cb4-13">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">system</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb4-14">        function <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> nixpkgs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-15">          <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">inherit</span> system<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-16">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">config</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">allowUnfree</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-17">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}));</span></span>
<span id="cb4-18"></span>
<span id="cb4-19">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-20"></span>
<span id="cb4-21">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">devShells</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> forAllSystems <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-22">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">default</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.mkShell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-23">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> pkgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> </span>
<span id="cb4-24">            nodePackages_latest.npm</span>
<span id="cb4-25">            quarto</span>
<span id="cb4-26">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb4-27">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb4-28">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb4-29">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> forAllSystems <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-30">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">default</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.mkShell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-31">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> pkgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb4-32">            nodePackages_latest.npm</span>
<span id="cb4-33">            quarto</span>
<span id="cb4-34">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb4-35">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb4-36">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb4-37">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb4-38"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p><code>nix develop</code> works fine, except it takes a long time to setup on the first run, compared to <code>nix-shell -p quarto nodePackages_latest.npm</code>. I wonder if this is because, since <code>nix develop</code> is designed for development purposes, it pulls in more dependencies than <code>nix-shell</code> does.</p>
<p><code>nix shell</code> doesn’t work at all. It gives me a different shell, and adds things to the path, but it doesn’t actually add any of the programs I specify to the path.</p>
<p>(Also, I still have another unanswered question: What does the <code>@</code> symbol mean in a nix expression).</p>
<p>I later went and <a href="https://nix.dev/tutorials/nix-language.html#named-attribute-set-argument">found an answer</a>. <code>@</code> <em>names</em> the attribute set</p>
<p>I managed to get <code>nix shell</code> working… somewhat.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>flake.nix</strong></pre>
</div>
<div class="sourceCode" id="cb5" data-filename="flake.nix" style="background: #f1f3f5;"><pre class="sourceCode nix code-with-copy"><code class="sourceCode nix"><span id="cb5-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-2">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">inputs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-3">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nixpkgs</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nixpkgs"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-4">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb5-5">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">outputs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> inputs @ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nixpkgs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">...}</span>: <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span></span>
<span id="cb5-6"></span>
<span id="cb5-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> nixpkgs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{};</span></span>
<span id="cb5-8"></span>
<span id="cb5-9">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">forAllSystems</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb5-10">      nixpkgs.lib.genAttrs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb5-11">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x86_64-linux"</span></span>
<span id="cb5-12">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aarch64-linux"</span></span>
<span id="cb5-13">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">system</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb5-14">        function <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> nixpkgs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-15">          <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">inherit</span> system<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-16">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">config</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">allowUnfree</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-17">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}));</span></span>
<span id="cb5-18"></span>
<span id="cb5-19">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-20"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> forAllSystems <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-21">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">default</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.jupyter<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb5-23">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb5-24"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p>And this makes the <code>jupyter</code> command available to me in my shell, and the library I called upon. But, this doesn’t seem scalable. How do I get this to do more packages? How do I get this to do environment variables? And is this really better than <code>nix develop</code>?</p>
<p>I started to do some testing. The big problem, I’ve found with nix develop, is that since it is designed for development, it brings in development dependencies, regardless of the fact that I am <em>not</em> doing development, and am instead just aiming for a reproducible shell environment.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode nix code-with-copy"><code class="sourceCode nix"><span id="cb6-1">devShells = forAllSystems <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-2">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">default</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.mkShell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         packages = with pkgs; [</span></span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#             jupyter</span></span>
<span id="cb6-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#            ];</span></span>
<span id="cb6-6">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">buildInputs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> pkgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> jupyter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb6-7">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span></code></pre></div>
<p>Results in:</p>
<details>
<summary>
Show path
</summary>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb7-1">[moonpie@lizard flake-test]$ nix develop</span>
<span id="cb7-2">warning: Git tree '/home/moonpie/vscode/test/flake-test' is dirty</span>
<span id="cb7-3">evaluating derivation 'git+file:///home/moonpie/vscode/test/flake-test#devShells.x86_64-linux.default'</span>
<span id="cb7-4">(nix:nix-shell-env) [moonpie@lizard flake-test]$ echo $PATH</span>
<span id="cb7-5">/nix/store/pdqndw2kgjv8l3kd5ii0c833jqmxdanq-patchelf-0.15.0/bin:/nix/store/mpm3i0sbqc9svfch6a17179fs64dz2kv-gcc-wrapper-13.3.0/bin:/nix/store/zc0nsv23pakbafngjy32kvhfzb16as43-gcc-13.3.0/bin:/nix/store/082x03cmpnsqkfp4ljrhsadz68rh3q1h-glibc-2.39-52-bin/bin:/nix/store/i7qhgc0bs725qw3wdanznfkdna4z2ns2-coreutils-9.5/bin:/nix/store/l46fjkzva0bhvy9p2r7p4vi68kr7a1db-binutils-wrapper-2.41/bin:/nix/store/wwfrj9kvfi14xclc38qfwm71ah6aawdh-binutils-2.41/bin:/nix/store/hn4bklvwvjjhkqy8d5npgb0aq8hba27s-python3-3.11.9-env/bin:/nix/store/i7qhgc0bs725qw3wdanznfkdna4z2ns2-coreutils-9.5/bin:/nix/store/rr1yixvn0z63mgq9s04ig9j9qlz23s2g-findutils-4.9.0/bin:/nix/store/j4gkc44c1pwl5ccgxm83s4r746bsdcw9-diffutils-3.10/bin:/nix/store/ks6c62g0m3gqrs5i7m0cv6d6aqhdvirn-gnused-4.9/bin:/nix/store/md9apn3290h7kv0x198ihaaa3k6icg4b-gnugrep-3.11/bin:/nix/store/hkx0wcm23i9ihqlysri8n41kl232kawb-gawk-5.2.2/bin:/nix/store/95ljdxg4drk1iq8jkjfq2c0z5vbwv8vm-gnutar-1.35/bin:/nix/store/nc9lq1lra01932rfyclq3gsh82cxbmii-gzip-1.13/bin:/nix/store/cyc3v8qfkhn4r38a8s5d7f2c33q624mz-bzip2-1.0.8-bin/bin:/nix/store/18z454gyz0wpb641rw6gpqk0vi4wbxy6-gnumake-4.4.1/bin:/nix/store/agkxax48k35wdmkhmmija2i2sxg8i7ny-bash-5.2p26/bin:/nix/store/r05c0lpbnjc8dg3rrr3ck7s07pjy86j3-patch-2.7.6/bin:/nix/store/qqhrymypl970jc6npvi9a6sikhr84mdf-xz-5.4.6-bin/bin:/nix/store/qcqmiq1mb3pkk2bxbj6d6gb2fk9knk8l-file-5.45/bin:/home/moonpie/.nix-profile/bin:/nix/var/nix/profiles/default/bin:/home/moonpie/.nix-profile/bin:/nix/var/nix/profiles/default/bin:/home/moonpie/.nix-profile/bin:/nix/var/nix/profiles/default/bin:/usr/local/sbin:/usr/local/bin:/usr/bin:/usr/lib/jvm/default/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl</span></code></pre></div>
</details>
<p>Compared to the same thing for nix shell:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode nix code-with-copy"><code class="sourceCode nix"><span id="cb8-1">packages = forAllSystems <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-2">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">default</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.mkShell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-3">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#packages = with pkgs; [ jupyter ];</span></span>
<span id="cb8-4">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">buildInputs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> pkgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> jupyter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb8-5">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">TEST_ENV</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test environment variable"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-6">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span></code></pre></div>
<details>
<summary>
Show path
</summary>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb9-1">[moonpie@lizard flake-test]$ nix shell</span>
<span id="cb9-2">warning: Git tree '/home/moonpie/vscode/test/flake-test' is dirty</span>
<span id="cb9-3">evaluating derivation 'git+file:///home/moonpie/vscode/test/flake-test#packages.x86_64-linux.default'</span>
<span id="cb9-4">[moonpie@lizard flake-test]$ echo $PATH</span>
<span id="cb9-5">/home/moonpie/.nix-profile/bin:/nix/var/nix/profiles/default/bin:/nix/store/i4zy8833s3dxrk3dmzb29k3y6rik15a4-nix-shell/bin:/home/moonpie/.nix-profile/bin:/nix/var/nix/profiles/default/bin:/home/moonpie/.nix-profile/bin:/nix/var/nix/profiles/default/bin:/usr/local/sbin:/usr/local/bin:/usr/bin:/usr/lib/jvm/default/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl</span></code></pre></div>
</details>
<p>However…</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb10-1">[moonpie@lizard flake-test]$ echo $TEST_ENV</span></code></pre></div>
<p>And nothing. (no reply to that command means the environment variable is unset). <code>nix shell</code> does not seem to set environment variables at all, even if I set them in the <code>pkgs.mkShell</code>, compared to <code>nix develop</code>, which does that.</p>
<p>However, I don’t want to bring <em>every</em> single build dependency as just for my shell environments.</p>
<p>I did more testing with the various <a href="http://ryantm.github.io/nixpkgs/stdenv/stdenv/#ssec-stdenv-dependencies-reference">types of dependencies</a> that a <code>pkgs.mkShell</code> (or more accurately, what it abstracts, <code>stdenv.mkDerivation</code>), and every single type of them brings build dependencies. This is a feature of nix develop, but it is becoming a hindrance.</p>
<p>Nevermind. Apparently, <code>nix-shell</code> also brings in build dependencies, and behaves identically to <code>nix develop</code>, and completely unlike <code>nix shell</code>. Some part of me wonders if there is some way to get this working. Another part of me doesn’t care.</p>
<p>Since I have something working, I modified the <a href="https://nixos.wiki/wiki/flakes#Super_fast_nix-shell">super fast nix shell</a> example to not use flakes.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode nix code-with-copy"><code class="sourceCode nix"><span id="cb11-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-2">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">inputs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-3">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nixpkgs</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nixpkgs"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-4">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb11-5">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">outputs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> inputs @ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nixpkgs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">...}</span>: <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span></span>
<span id="cb11-6"></span>
<span id="cb11-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> nixpkgs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{};</span></span>
<span id="cb11-8"></span>
<span id="cb11-9">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">forAllSystems</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb11-10">      nixpkgs.lib.genAttrs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb11-11">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x86_64-linux"</span></span>
<span id="cb11-12">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aarch64-linux"</span></span>
<span id="cb11-13">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">system</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb11-14">        function <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> nixpkgs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-15">          <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">inherit</span> system<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-16">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">config</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">allowUnfree</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-17">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}));</span></span>
<span id="cb11-18"></span>
<span id="cb11-19">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-20"></span>
<span id="cb11-21">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">devShells</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> forAllSystems <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-22">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">default</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">./shell.nix</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">inherit</span> pkgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb11-23">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb11-24">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb11-25"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>This errors:</p>
<details>
<summary>
Show errors
</summary>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb12-1">[moonpie@lizard moonpiedumplings.github.io]$ nix develop</span>
<span id="cb12-2">warning: Git tree '/home/moonpie/vscode/moonpiedumplings.github.io' is dirty</span>
<span id="cb12-3">warning: creating lock file '/home/moonpie/vscode/moonpiedumplings.github.io/flake.lock':</span>
<span id="cb12-4">• Added input 'nixpkgs':</span>
<span id="cb12-5">    'github:NixOS/nixpkgs/3f84a279f1a6290ce154c5531378acc827836fbb?narHash=sha256-u1fA0DYQYdeG%2B5kDm1bOoGcHtX0rtC7qs2YA2N1X%2B%2BI%3D' (2024-06-13)</span>
<span id="cb12-6">warning: Git tree '/home/moonpie/vscode/moonpiedumplings.github.io' is dirty</span>
<span id="cb12-7">error:</span>
<span id="cb12-8">       … while calling the 'import' builtin</span>
<span id="cb12-9">         at /nix/store/jd6fy6iw7fsj0135phhd7awmq5s00sgj-source/flake.nix:22:17:</span>
<span id="cb12-10">           21|     devShells = forAllSystems (pkgs: {</span>
<span id="cb12-11">           22|       default = import ./shell.nix { inherit pkgs; };</span>
<span id="cb12-12">             |                 ^</span>
<span id="cb12-13">           23|     });</span>
<span id="cb12-14"></span>
<span id="cb12-15">       … while evaluating the file '/nix/store/jd6fy6iw7fsj0135phhd7awmq5s00sgj-source/shell.nix':</span>
<span id="cb12-16"></span>
<span id="cb12-17">       … while calling the 'import' builtin</span>
<span id="cb12-18">         at /nix/store/jd6fy6iw7fsj0135phhd7awmq5s00sgj-source/shell.nix:2:12:</span>
<span id="cb12-19">            1| let</span>
<span id="cb12-20">            2|     pkgs = import &lt;nixpkgs&gt; {};</span>
<span id="cb12-21">             |            ^</span>
<span id="cb12-22">            3|</span>
<span id="cb12-23"></span>
<span id="cb12-24">       (stack trace truncated; use '--show-trace' to show the full trace)</span>
<span id="cb12-25"></span>
<span id="cb12-26">       error: cannot look up '&lt;nixpkgs&gt;' in pure evaluation mode (use '--impure' to override)</span>
<span id="cb12-27">[moonpie@lizard moonpiedumplings.github.io]$ nix develop --impure</span>
<span id="cb12-28">warning: Git tree '/home/moonpie/vscode/moonpiedumplings.github.io' is dirty</span>
<span id="cb12-29">error: attempt to call something which is not a function but a set: { type = "derivation"; PYTHONPATH = «thunk»; QUARTO_PANDOC = «thunk»; QUARTO_PYTHON = «thunk»; __ignoreNulls = true; __structuredAttrs = «thunk»; all = «thunk»; args = «thunk»; buildInputs = «thunk»; buildPhase = "{ echo \"------------------------------------------------------------\";\n  echo \" WARNING: the existence of this path is not guaranteed.\";\n  echo \" It is an internal implementation detail for pkgs.mkShell.\";\n  echo \"------------------------------------------------------------\";\n  echo;\n  # Record all build inputs as runtime dependencies\n  export;\n} &gt;&gt; \"$out\"\n"; «36 attributes elided» }</span>
<span id="cb12-30">       at /nix/store/0symal17vrawjkdmbp0afyrz45ax5fay-source/flake.nix:22:17:</span>
<span id="cb12-31">           21|     devShells = forAllSystems (pkgs: {</span>
<span id="cb12-32">           22|       default = import ./shell.nix { inherit pkgs; };</span>
<span id="cb12-33">             |                 ^</span>
<span id="cb12-34">           23|     });</span></code></pre></div>
</details>
<p>Okay, I got it. There was one change I needed to make.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>shell.nix</strong></pre>
</div>
<div class="sourceCode" id="cb13" data-filename="shell.nix" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb13-1">let</span>
<span id="cb13-2">    pkgs = import &lt;nixpkgs&gt; {};</span>
<span id="cb13-3">    python3 = pkgs.python311;</span></code></pre></div>
</div>
<p>In my shell.nix, I should have:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>shell.nix</strong></pre>
</div>
<div class="sourceCode" id="cb14" data-filename="shell.nix" style="background: #f1f3f5;"><pre class="sourceCode nix code-with-copy"><code class="sourceCode nix"><span id="cb14-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> &lt;nixpkgs&gt; <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>:</span>
<span id="cb14-2"></span>
<span id="cb14-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span></span>
<span id="cb14-4">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">python3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.python311<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</div>
<p>One last thing. What does the <code>@</code> symbol do? I suspect nothing. Kate (my IDE for nix testing), complains about the <code>input</code> binding being unused, so I am gussing it doesn’t do anything.</p>
<p>When I remove it, and replace that line with:</p>
<p><code>outputs = {nixpkgs, ...}: let</code></p>
<p>It works fine.</p>
<p>After all of this, I did realize something.</p>
<p>The configuration file for nix has an option called “extra-nix-path”</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/etc/nix/nix.conf</strong></pre>
</div>
<div class="sourceCode" id="cb15" data-filename="/etc/nix/nix.conf" style="background: #f1f3f5;"><pre class="sourceCode nix code-with-copy"><code class="sourceCode nix"><span id="cb15-1">build<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>users<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>group = nixbld</span>
<span id="cb15-2">experimental<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>features = nix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>command flakes repl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>flake</span>
<span id="cb15-3">auto<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>optimise<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>store = <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb15-4">bash<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>prompt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>prefix = <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nix</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>$name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>\<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">040</span></span>
<span id="cb15-5">max<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>jobs = auto</span>
<span id="cb15-6">extra<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>nix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>path = nixpkgs=<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">flake</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>nixpkgs</span>
<span id="cb15-7">upgrade<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>nix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>store<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>url = <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">https</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">://</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">install.determinate.systems/nix-upgrade/stable/universal</span></span></code></pre></div>
</div>
<p>This option makes channel commands available and working, even though no nix channels are actually installed. Meaning, I could have continued to use <code>nix-shell</code>, and it would have worked…</p>
<p>Well, flakes still have their own benefits. The version of <code>nixpkgs</code> used is tracked in a <code>flake.lock</code> file in the git repo. This ensures reproducibility, as I would be able to update the version of <code>nixpkgs</code> for everyone using the repo, rather than having to rely on people updating their channels manually (running <code>nix-channel --update</code>). With the latter, channels will result in a different version of <code>nixpkgs</code> being used, but with flakes, everybody uses the same version of <code>nixpkgs</code>.</p>
<p>However, I still would like to know if there is a way to not bring along every development dependency.</p>
<p>Okay, I asked on the Nixos Discord about not bringing along every development dependency, and I was told that wasn’t how <code>nix develop</code> worked. Rather, they claimed, the default <code>pkgs.mkShell</code> brings upon a “standard environment” of some build tools like gcc. Alternatively, you can use <code>pkgs.mkShellNoCC</code>.</p>
<p>This actually, works, to an extent. Using <a href="https://github.com/utdemir/nix-tree">nix-tree</a>, I can analyze the disk space used by the various things downloaded by nix.</p>
<p>With the standard environment:</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb16-1">┌───────────────────────────────────────────┬───────────────────────────────────────────┬───────────────────────────────────────────┐</span>
<span id="cb16-2">│nix-shell               7.49 GiB (7.49 GiB)│texlive-combined-full-2 6.24 GiB (5.62 GiB)│fonts.conf               3.64 GiB (3.1 KiB)│</span>
<span id="cb16-3">│                                           │quarto-1.5.25          1.5 GiB (620.99 MiB)│texlive-combined-full-2 3.64 GiB (2.38 MiB)│</span>
<span id="cb16-4">│                                           │python3-3.11.9-env  916.46 MiB (282.95 MiB)│texlive-combined-full-2 3.64 GiB (3.52 KiB)│</span>
<span id="cb16-5">│                                           │stdenv-linux        332.93 MiB (166.29 KiB)│texlive-combined-full-2 3.64 GiB (3.45 GiB)│</span>
<span id="cb16-6">│                                           │gcc-wrapper-13.3.0   312.31 MiB (60.92 KiB)│asymptote-2.88        1.24 GiB (660.91 MiB)│</span>
<span id="cb16-7">│                                           │npm-10.8.1           310.91 MiB (97.35 MiB)│tlcockpit-1.2        1022.89 MiB (1.12 KiB)│</span>
<span id="cb16-8">│                                           │gcc-13.3.0          274.27 MiB (223.02 MiB)│arara-7.1.3           966.03 MiB (1.14 KiB)│</span>
<span id="cb16-9">│                                           │binutils-wrapper-2.41  86.52 MiB (50.1 KiB)│latex2nemeth-1.1.3       957.76 MiB (768.0)│</span>
<span id="cb16-10">│                                           │binutils-2.41         71.24 MiB (31.32 MiB)│albatross-0.5.1       955.15 MiB (1.16 KiB)│</span>
<span id="cb16-11">│                                           │diffutils-3.10         43.66 MiB (1.53 MiB)│texplate-1.0.4         953.4 MiB (1.14 KiB)│</span>
<span id="cb16-12">│                                           │findutils-4.9.0        43.46 MiB (1.32 MiB)│bib2gls-3.9           952.17 MiB (1.99 KiB)│</span>
<span id="cb16-13">│                                           │coreutils-9.5          42.13 MiB (2.12 MiB)│texosquery-1.7        950.24 MiB (2.35 KiB)│</span>
<span id="cb16-14">│                                           │patchelf-0.15.0      40.02 MiB (234.31 KiB)│memoize-1.1.2        231.84 MiB (65.53 KiB)│</span>
<span id="cb16-15">│                                           │file-5.45              39.42 MiB (8.33 MiB)│texlive-scripts-705 218.42 MiB (168.54 KiB)│</span>
<span id="cb16-16">│                                           │gnutar-1.35            33.85 MiB (2.67 MiB)│texlive.infra-69740- 210.01 MiB (22.95 MiB)│</span>
<span id="cb16-17">│                                           │gnugrep-3.11         33.68 MiB (922.61 KiB)│pygmentex-0.11       188.14 MiB (18.76 KiB)│</span>
<span id="cb16-18">│                                           │glibc-2.39-52-bin       33.57 MiB (2.6 MiB)│pythontex-0.18      185.94 MiB (300.51 KiB)│</span>
<span id="cb16-19">│                                           │gawk-5.2.2             33.54 MiB (2.57 MiB)│dvisvgm-3.2.2        184.64 MiB (50.79 MiB)│</span>
<span id="cb16-20">│                                           │gzip-1.13             32.66 MiB (152.8 KiB)│lilyglyphs-0.2.4     175.43 MiB (24.97 KiB)│</span>
<span id="cb16-21">│                                           │bash-5.2p26            32.51 MiB (1.54 MiB)│webquiz-5.2          173.81 MiB (44.94 KiB)│</span>
<span id="cb16-22">│                                           │gnumake-4.4.1           32.47 MiB (1.5 MiB)│dviasm-68043         173.61 MiB (44.14 KiB)│</span>
<span id="cb16-23">└───────────────────────────────────────────┴───────────────────────────────────────────┴───────────────────────────────────────────┘</span>
<span id="cb16-24">/nix/store/r7zsi6cdib2yrhp7cpx4qn9d1b70jll5-texlive-combined-full-2023-final</span>
<span id="cb16-25">NAR Size: 342.99 MiB | Closure Size: 6.24 GiB | Added Size: 5.62 GiB</span>
<span id="cb16-26">Immediate Parents (1): nix-shell</span></code></pre></div>
<p>Without the standard environment:</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb17-1">┌───────────────────────────────────────────┬───────────────────────────────────────────┬───────────────────────────────────────────┐</span>
<span id="cb17-2">│nix-shell               7.23 GiB (7.23 GiB)│texlive-combined-full-2 6.24 GiB (5.62 GiB)│fonts.conf               3.64 GiB (3.1 KiB)│</span>
<span id="cb17-3">│                                           │quarto-1.5.25          1.5 GiB (620.99 MiB)│texlive-combined-full-2 3.64 GiB (2.38 MiB)│</span>
<span id="cb17-4">│                                           │python3-3.11.9-env  916.46 MiB (282.95 MiB)│texlive-combined-full-2 3.64 GiB (3.52 KiB)│</span>
<span id="cb17-5">│                                           │npm-10.8.1           310.91 MiB (97.35 MiB)│texlive-combined-full-2 3.64 GiB (3.45 GiB)│</span>
<span id="cb17-6">│                                           │stdenv-linux         67.13 MiB (166.23 KiB)│asymptote-2.88        1.24 GiB (660.91 MiB)│</span>
<span id="cb17-7">│                                           │diffutils-3.10         43.66 MiB (1.53 MiB)│tlcockpit-1.2        1022.89 MiB (1.12 KiB)│</span>
<span id="cb17-8">│                                           │findutils-4.9.0        43.46 MiB (1.32 MiB)│arara-7.1.3           966.03 MiB (1.14 KiB)│</span>
<span id="cb17-9">│                                           │coreutils-9.5          42.13 MiB (2.12 MiB)│latex2nemeth-1.1.3       957.76 MiB (768.0)│</span>
<span id="cb17-10">│                                           │patchelf-0.15.0      40.02 MiB (234.31 KiB)│albatross-0.5.1       955.15 MiB (1.16 KiB)│</span>
<span id="cb17-11">│                                           │file-5.45              39.42 MiB (8.33 MiB)│texplate-1.0.4         953.4 MiB (1.14 KiB)│</span>
<span id="cb17-12">│                                           │gnutar-1.35            33.85 MiB (2.67 MiB)│bib2gls-3.9           952.17 MiB (1.99 KiB)│</span>
<span id="cb17-13">│                                           │gnugrep-3.11         33.68 MiB (922.61 KiB)│texosquery-1.7        950.24 MiB (2.35 KiB)│</span>
<span id="cb17-14">│                                           │gawk-5.2.2             33.54 MiB (2.57 MiB)│memoize-1.1.2        231.84 MiB (65.53 KiB)│</span>
<span id="cb17-15">│                                           │gzip-1.13             32.66 MiB (152.8 KiB)│texlive-scripts-705 218.42 MiB (168.54 KiB)│</span>
<span id="cb17-16">│                                           │bash-5.2p26            32.51 MiB (1.54 MiB)│texlive.infra-69740- 210.01 MiB (22.95 MiB)│</span>
<span id="cb17-17">│                                           │gnumake-4.4.1           32.47 MiB (1.5 MiB)│pygmentex-0.11       188.14 MiB (18.76 KiB)│</span>
<span id="cb17-18">│                                           │xz-5.4.6-bin         31.91 MiB (172.22 KiB)│pythontex-0.18      185.94 MiB (300.51 KiB)│</span>
<span id="cb17-19">│                                           │gnused-4.9           31.67 MiB (714.07 KiB)│dvisvgm-3.2.2        184.64 MiB (50.79 MiB)│</span>
<span id="cb17-20">│                                           │patch-2.7.6          31.32 MiB (359.24 KiB)│lilyglyphs-0.2.4     175.43 MiB (24.97 KiB)│</span>
<span id="cb17-21">│                                           │bzip2-1.0.8-bin       31.11 MiB (67.24 KiB)│webquiz-5.2          173.81 MiB (44.94 KiB)│</span>
<span id="cb17-22">│                                           │                                           │dviasm-68043         173.61 MiB (44.14 KiB)│</span>
<span id="cb17-23">└───────────────────────────────────────────┴───────────────────────────────────────────┴───────────────────────────────────────────┘</span>
<span id="cb17-24">/nix/store/r7zsi6cdib2yrhp7cpx4qn9d1b70jll5-texlive-combined-full-2023-final</span>
<span id="cb17-25">NAR Size: 342.99 MiB | Closure Size: 6.24 GiB | Added Size: 5.62 GiB</span>
<span id="cb17-26">Immediate Parents (1): nix-shell</span></code></pre></div>
<p>This is a decent difference (26 megabytes) — and indeed, it was as I thought, the latex bundle package uses up the most disk space out of everything.</p>
<p>I did some research, continuing to find an even more minimal shell. However, it doesn’t seem to be worth it. One <a href="https://discourse.nixos.org/t/with-default-nix-empty-nix-installs-packages-why/20284/3">solution</a> mentions to use <a href="https://github.com/numtide/devshell">devshell</a>, however, after browsing the source code, it doesn’t seem to be that much more minimal thank mkShellNoCC, and the documentation is sparse… it suggestst TOML, rather than nix for configuring the shell environment. And finally, the entire point of this endeavor was to <em>avoid</em> using external dependencies for my shell environments…</p>
<p>There is also <a href="https://fzakaria.com/2021/08/02/a-minimal-nix-shell.html">another blogpost</a> where they attempt to strip down the nix shell environment of dependencies, including GNU coreutils, but it eventually fails because the basic nix shell environment requires <code>mkdir</code>.</p>
<p>Now… which latex distribution should I switch to? I probably don’t need the every single latex package in nixpkgs, especially if all I want is to render a pdf.</p>
<p>Currently, I am using <code>texlive.combined.scheme-full</code>, which is exactly that. According to the <a href="https://quarto.org/docs/output-formats/pdf-engine.html#overview">quarto pdf docs</a>, quarto recommends, and also is able to install <code>tinytex</code>. WHen quarto manages a texlive or tinytex distribution, it is also able to automatically install missing packages.</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb18-1">────────────────────────────────────────┬────────────────────────────────────────┬───────────────────────────────────────┐</span>
<span id="cb18-2">│nix-shell            1.84 GiB (1.84 GiB)│quarto-1.5.25       1.5 GiB (620.99 MiB)│python3-3.11.9- 916.46 MiB (729.13 MiB)│</span>
<span id="cb18-3">│                                        │python3-3.11.9-e 916.46 MiB (729.13 MiB)│deno-1.43.6     239.73 MiB (199.93 MiB)│</span>
<span id="cb18-4">│                                        │texlive-2023-env 527.99 MiB (340.17 MiB)│dart-sass-1.77.4  49.52 MiB (18.54 MiB)│</span>
<span id="cb18-5">│                                        │stdenv-linux      67.13 MiB (166.23 KiB)│esbuild-0.21.5     43.2 MiB (10.09 MiB)│</span>
<span id="cb18-6">│                                        │diffutils-3.10      43.66 MiB (1.53 MiB)│bash-5.2p26        32.51 MiB (1.54 MiB)│</span>
<span id="cb18-7">│                                        │findutils-4.9.0     43.46 MiB (1.32 MiB)│                                       │</span>
<span id="cb18-8">│                                        │coreutils-9.5       42.13 MiB (2.12 MiB)│                                       │</span>
<span id="cb18-9">│                                        │patchelf-0.15.0   40.02 MiB (234.31 KiB)│                                       │</span>
<span id="cb18-10">│                                        │file-5.45           39.42 MiB (8.33 MiB)│                                       │</span>
<span id="cb18-11">│                                        │gnutar-1.35         33.85 MiB (2.67 MiB)│                                       │</span>
<span id="cb18-12">│                                        │gnugrep-3.11      33.68 MiB (922.61 KiB)│                                       │</span>
<span id="cb18-13">│                                        │gawk-5.2.2          33.54 MiB (2.57 MiB)│                                       │</span>
<span id="cb18-14">│                                        │gzip-1.13          32.66 MiB (152.8 KiB)│                                       │</span>
<span id="cb18-15">│                                        │bash-5.2p26         32.51 MiB (1.54 MiB)│                                       │</span>
<span id="cb18-16">│                                        │gnumake-4.4.1        32.47 MiB (1.5 MiB)│                                       │</span>
<span id="cb18-17">│                                        │xz-5.4.6-bin      31.91 MiB (172.22 KiB)│                                       │</span>
<span id="cb18-18">│                                        │gnused-4.9        31.67 MiB (714.07 KiB)│                                       │</span>
<span id="cb18-19">│                                        │patch-2.7.6       31.32 MiB (359.24 KiB)│                                       │</span>
<span id="cb18-20">│                                        │bzip2-1.0.8-bin    31.11 MiB (67.24 KiB)│                                       │</span>
<span id="cb18-21">│                                        │                                        │                                       │</span>
<span id="cb18-22">│                                        │                                        │                                       │</span>
<span id="cb18-23">│                                        │                                        │                                       │</span>
<span id="cb18-24">└────────────────────────────────────────┴────────────────────────────────────────┴───────────────────────────────────────┘</span>
<span id="cb18-25">/nix/store/gc3phrmibx7zp5q16n5vy3h1ra6wjckr-quarto-1.5.25</span>
<span id="cb18-26">NAR Size: 392.41 MiB | Closure Size: 1.5 GiB | Added Size: 620.99 MiB</span>
<span id="cb18-27">Immediate Parents (1): nix-shell</span></code></pre></div>
<p>After a lot of tinkering with latex packages, I manage to get it down to just under 2 GB of disk space used. Can I make it smaller? What about bzip, tar, or other coreutils that are taking up space?</p>
<p>I decided to tinker with python and jupyter notebooks next. I was previously using the <code>juptyer</code> package, which is a metapackage containing all the jupyter components. I managed to cut it down quite a bit, to just <code>jupyter-core</code> and <code>pyaml</code>. This reduced the size further:</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb19-1">┌──────────────────────────────────────────────────────┬──────────────────────────────────────────────────────┬─────────────────────────────────────────────────────┐</span>
<span id="cb19-2">│nix-shell                          1.11 GiB (1.11 GiB)│quarto-1.5.47                  529.43 MiB (479.77 MiB)│deno-1.43.6                   239.73 MiB (199.93 MiB)│</span>
<span id="cb19-3">│                                                      │texlive-2023-env               527.99 MiB (462.84 MiB)│typst-0.11.1                    76.53 MiB (30.55 MiB)│</span>
<span id="cb19-4">│                                                      │python3-3.11.9-env              176.66 MiB (120.1 MiB)│dart-sass-1.77.4                49.52 MiB (18.54 MiB)│</span>
<span id="cb19-5">│                                                      │stdenv-linux                    67.13 MiB (166.23 KiB)│esbuild-0.21.5                   43.2 MiB (10.09 MiB)│</span>
<span id="cb19-6">│                                                      │diffutils-3.10                    43.66 MiB (1.53 MiB)│bash-5.2p26                      32.51 MiB (1.54 MiB)│</span>
<span id="cb19-7">│                                                      │findutils-4.9.0                   43.46 MiB (1.32 MiB)│                                                     │</span>
<span id="cb19-8">│                                                      │coreutils-9.5                     42.13 MiB (2.12 MiB)│                                                     │</span>
<span id="cb19-9">│                                                      │patchelf-0.15.0                 40.02 MiB (234.31 KiB)│                                                     │</span>
<span id="cb19-10">│                                                      │file-5.45                         39.42 MiB (8.33 MiB)│                                                     │</span>
<span id="cb19-11">│                                                      │gnutar-1.35                       33.85 MiB (2.67 MiB)│                                                     │</span>
<span id="cb19-12">│                                                      │gnugrep-3.11                    33.68 MiB (922.61 KiB)│                                                     │</span>
<span id="cb19-13">│                                                      │gawk-5.2.2                        33.54 MiB (2.57 MiB)│                                                     │</span>
<span id="cb19-14">│                                                      │gzip-1.13                        32.66 MiB (152.8 KiB)│                                                     │</span>
<span id="cb19-15">│                                                      │bash-5.2p26                       32.51 MiB (1.54 MiB)│                                                     │</span>
<span id="cb19-16">│                                                      │gnumake-4.4.1                      32.47 MiB (1.5 MiB)│                                                     │</span>
<span id="cb19-17">│                                                      │xz-5.4.6-bin                    31.91 MiB (172.22 KiB)│                                                     │</span>
<span id="cb19-18">│                                                      │gnused-4.9                      31.67 MiB (714.07 KiB)│                                                     │</span>
<span id="cb19-19">│                                                      │patch-2.7.6                     31.32 MiB (359.24 KiB)│                                                     │</span>
<span id="cb19-20">│                                                      │bzip2-1.0.8-bin                  31.11 MiB (67.24 KiB)│                                                     │</span>
<span id="cb19-21">│                                                      │                                                      │                                                     │</span>
<span id="cb19-22">└──────────────────────────────────────────────────────┴──────────────────────────────────────────────────────┴─────────────────────────────────────────────────────┘</span>
<span id="cb19-23">/nix/store/5phsvm3n78djp6gbmmda3jvm912h3gwg-quarto-1.5.47</span>
<span id="cb19-24">NAR Size: 220.63 MiB | Closure Size: 529.43 MiB | Added Size: 479.77 MiB</span>
<span id="cb19-25">Immediate Parents (1): nix-shell</span></code></pre></div>
<p>However, can I reduce it further? I remove the size of quarto’s installation, by deleting the vendored versions of deno, typst, dart-sass, and esbuild, and using the nix versions instead. But what if that’s what’s using up more space?</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb20-1">┌──────────────────────────────────────────────────────┬──────────────────────────────────────────────────────┬─────────────────────────────────────────────────────┐</span>
<span id="cb20-2">│nix-shell                          1.04 GiB (1.04 GiB)│texlive-2023-env               527.99 MiB (462.84 MiB)│bash-5.2p26                      32.51 MiB (1.54 MiB)│</span>
<span id="cb20-3">│                                                      │quarto-1.5.47                  434.33 MiB (401.81 MiB)│                                                     │</span>
<span id="cb20-4">│                                                      │python3-3.11.9-env             176.66 MiB (120.21 MiB)│                                                     │</span>
<span id="cb20-5">│                                                      │stdenv-linux                    67.13 MiB (166.23 KiB)│                                                     │</span>
<span id="cb20-6">│                                                      │diffutils-3.10                    43.66 MiB (1.53 MiB)│                                                     │</span>
<span id="cb20-7">│                                                      │findutils-4.9.0                   43.46 MiB (1.32 MiB)│                                                     │</span>
<span id="cb20-8">│                                                      │coreutils-9.5                     42.13 MiB (2.12 MiB)│                                                     │</span>
<span id="cb20-9">│                                                      │patchelf-0.15.0                 40.02 MiB (234.31 KiB)│                                                     │</span>
<span id="cb20-10">│                                                      │file-5.45                         39.42 MiB (8.33 MiB)│                                                     │</span>
<span id="cb20-11">│                                                      │gnutar-1.35                       33.85 MiB (2.67 MiB)│                                                     │</span>
<span id="cb20-12">│                                                      │gnugrep-3.11                    33.68 MiB (922.61 KiB)│                                                     │</span>
<span id="cb20-13">│                                                      │gawk-5.2.2                        33.54 MiB (2.57 MiB)│                                                     │</span>
<span id="cb20-14">│                                                      │gzip-1.13                        32.66 MiB (152.8 KiB)│                                                     │</span>
<span id="cb20-15">│                                                      │bash-5.2p26                       32.51 MiB (1.54 MiB)│                                                     │</span>
<span id="cb20-16">│                                                      │gnumake-4.4.1                      32.47 MiB (1.5 MiB)│                                                     │</span>
<span id="cb20-17">│                                                      │xz-5.4.6-bin                    31.91 MiB (172.22 KiB)│                                                     │</span>
<span id="cb20-18">│                                                      │gnused-4.9                      31.67 MiB (714.07 KiB)│                                                     │</span>
<span id="cb20-19">│                                                      │patch-2.7.6                     31.32 MiB (359.24 KiB)│                                                     │</span>
<span id="cb20-20">│                                                      │bzip2-1.0.8-bin                  31.11 MiB (67.24 KiB)│                                                     │</span>
<span id="cb20-21">│                                                      │                                                      │                                                     │</span>
<span id="cb20-22">└──────────────────────────────────────────────────────┴──────────────────────────────────────────────────────┴─────────────────────────────────────────────────────┘</span>
<span id="cb20-23">/nix/store/a6v1glf1w6jfm949jlydb6imlbyimddw-quarto-1.5.47</span>
<span id="cb20-24">NAR Size: 401.81 MiB | Closure Size: 434.33 MiB | Added Size: 401.81 MiB</span>
<span id="cb20-25">Immediate Parents (1): nix-shell</span></code></pre></div>
<p>Removing nix dependencies gets it down to 1.04 GB… but I don’t really like this setup. Vendoring is kinda problematic for a variety of reasons. I’m already vendoring pandoc, for example, and if pandoc is used again outside of the nix store, then it would take up twice as much disk space.</p>
<p>Another thing is versioning. Although the pandoc version quarto provides is newer than the one in nixpkgs, the version of typst is the same, and the versions of dart-sass and deno is <em>older</em> by 4 minor versions.</p>
<p>But, when comparing nix-tree and looking at the ark, most of the packages outside quarto are bigger… or are they?</p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb21-1">┌──────────────────────────────────────────────────────┬──────────────────────────────────────────────────────┬─────────────────────────────────────────────────────┐</span>
<span id="cb21-2">│                                                      │nix-shell                          1.03 GiB (1.03 GiB)│texlive-2023-env              527.99 MiB (462.84 MiB)│</span>
<span id="cb21-3">│                                                      │                                                      │quarto-1.5.47                 443.91 MiB (396.38 MiB)│</span>
<span id="cb21-4">│                                                      │                                                      │python3-3.11.9-env            176.66 MiB (120.21 MiB)│</span>
<span id="cb21-5">│                                                      │                                                      │stdenv-linux                   67.13 MiB (166.23 KiB)│</span>
<span id="cb21-6">│                                                      │                                                      │diffutils-3.10                   43.66 MiB (1.53 MiB)│</span>
<span id="cb21-7">│                                                      │                                                      │findutils-4.9.0                  43.46 MiB (1.32 MiB)│</span>
<span id="cb21-8">│                                                      │                                                      │coreutils-9.5                    42.13 MiB (2.12 MiB)│</span>
<span id="cb21-9">│                                                      │                                                      │patchelf-0.15.0                40.02 MiB (234.31 KiB)│</span>
<span id="cb21-10">│                                                      │                                                      │file-5.45                        39.42 MiB (8.33 MiB)│</span>
<span id="cb21-11">│                                                      │                                                      │gnutar-1.35                      33.85 MiB (2.67 MiB)│</span>
<span id="cb21-12">│                                                      │                                                      │gnugrep-3.11                   33.68 MiB (922.61 KiB)│</span>
<span id="cb21-13">│                                                      │                                                      │gawk-5.2.2                       33.54 MiB (2.57 MiB)│</span>
<span id="cb21-14">│                                                      │                                                      │gzip-1.13                       32.66 MiB (152.8 KiB)│</span>
<span id="cb21-15">│                                                      │                                                      │bash-5.2p26                      32.51 MiB (1.54 MiB)│</span>
<span id="cb21-16">│                                                      │                                                      │gnumake-4.4.1                     32.47 MiB (1.5 MiB)│</span>
<span id="cb21-17">│                                                      │                                                      │xz-5.4.6-bin                   31.91 MiB (172.22 KiB)│</span>
<span id="cb21-18">│                                                      │                                                      │gnused-4.9                     31.67 MiB (714.07 KiB)│</span>
<span id="cb21-19">│                                                      │                                                      │patch-2.7.6                    31.32 MiB (359.24 KiB)│</span>
<span id="cb21-20">│                                                      │                                                      │bzip2-1.0.8-bin                 31.11 MiB (67.24 KiB)│</span>
<span id="cb21-21">│                                                      │                                                      │                                                     │</span>
<span id="cb21-22">└──────────────────────────────────────────────────────┴──────────────────────────────────────────────────────┴─────────────────────────────────────────────────────┘</span>
<span id="cb21-23">/nix/store/67sndag759yw2wvfrfgfszpgzvbyg3gk-nix-shell</span>
<span id="cb21-24">NAR Size: 5.35 KiB | Closure Size: 1.03 GiB | Added Size: 1.03 GiB</span>
<span id="cb21-25">Immediate Parents: -</span></code></pre></div>
<p>Changing to the typst in nixpkgs decreases the size just a little bit. Not a lot, but just a little bit. It’s a pity that changing deno and dart-sass for the nixpkgs versions increases the size by quite a bit, as the nixpkgs versions are newer. Changing pandoc also increases size, but the pandoc version provided by quarto is newer.</p>
<p>I also changed esbuild, and got it down to 1.02 GB.</p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb22-1">┌──────────────────────────────────────────────────────┬──────────────────────────────────────────────────────┬─────────────────────────────────────────────────────┐</span>
<span id="cb22-2">│nix-shell                          1.02 GiB (1.02 GiB)│texlive-2023-env               527.99 MiB (462.84 MiB)│typst-0.11.1                    76.53 MiB (30.55 MiB)│</span>
<span id="cb22-3">│                                                      │quarto-1.5.47                  434.75 MiB (387.22 MiB)│bash-5.2p26                      32.51 MiB (1.54 MiB)│</span>
<span id="cb22-4">│                                                      │python3-3.11.9-env             176.66 MiB (120.21 MiB)│                                                     │</span>
<span id="cb22-5">│                                                      │stdenv-linux                    67.13 MiB (166.23 KiB)│                                                     │</span>
<span id="cb22-6">│                                                      │diffutils-3.10                    43.66 MiB (1.53 MiB)│                                                     │</span>
<span id="cb22-7">│                                                      │findutils-4.9.0                   43.46 MiB (1.32 MiB)│                                                     │</span>
<span id="cb22-8">│                                                      │coreutils-9.5                     42.13 MiB (2.12 MiB)│                                                     │</span>
<span id="cb22-9">│                                                      │patchelf-0.15.0                 40.02 MiB (234.31 KiB)│                                                     │</span>
<span id="cb22-10">│                                                      │file-5.45                         39.42 MiB (8.33 MiB)│                                                     │</span>
<span id="cb22-11">│                                                      │gnutar-1.35                       33.85 MiB (2.67 MiB)│                                                     │</span>
<span id="cb22-12">│                                                      │gnugrep-3.11                    33.68 MiB (922.61 KiB)│                                                     │</span>
<span id="cb22-13">│                                                      │gawk-5.2.2                        33.54 MiB (2.57 MiB)│                                                     │</span>
<span id="cb22-14">│                                                      │gzip-1.13                        32.66 MiB (152.8 KiB)│                                                     │</span>
<span id="cb22-15">│                                                      │bash-5.2p26                       32.51 MiB (1.54 MiB)│                                                     │</span>
<span id="cb22-16">│                                                      │gnumake-4.4.1                      32.47 MiB (1.5 MiB)│                                                     │</span>
<span id="cb22-17">│                                                      │xz-5.4.6-bin                    31.91 MiB (172.22 KiB)│                                                     │</span>
<span id="cb22-18">│                                                      │gnused-4.9                      31.67 MiB (714.07 KiB)│                                                     │</span>
<span id="cb22-19">│                                                      │patch-2.7.6                     31.32 MiB (359.24 KiB)│                                                     │</span>
<span id="cb22-20">│                                                      │bzip2-1.0.8-bin                  31.11 MiB (67.24 KiB)│                                                     │</span>
<span id="cb22-21">│                                                      │                                                      │                                                     │</span>
<span id="cb22-22">└──────────────────────────────────────────────────────┴──────────────────────────────────────────────────────┴─────────────────────────────────────────────────────┘</span>
<span id="cb22-23">/nix/store/zv70xxgak45jl997c53lwh91b7v3qz6s-quarto-1.5.47</span>
<span id="cb22-24">NAR Size: 356.66 MiB | Closure Size: 434.75 MiB | Added Size: 387.22 MiB</span>
<span id="cb22-25">Immediate Parents (1): nix-shell</span></code></pre></div>
<p>I think this is the final iteration. Down to 1 GB is already a lot, and I think this will be the final iteration.</p>
<p>Here is the final shell.nix:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>shell.nix</strong></pre>
</div>
<div class="sourceCode" id="cb23" data-filename="shell.nix" style="background: #f1f3f5;"><pre class="sourceCode nix code-with-copy"><code class="sourceCode nix"><span id="cb23-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> &lt;nixpkgs&gt; <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>:</span>
<span id="cb23-2"></span>
<span id="cb23-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span></span>
<span id="cb23-4">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">python3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.python311<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-5">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pythonDeps</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> ps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb23-6">    jupyter-core</span>
<span id="cb23-7">    pyyaml</span>
<span id="cb23-8">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb23-9"></span>
<span id="cb23-10">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">texDeps</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> ps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb23-11">    collection-latex</span>
<span id="cb23-12">    collection-latexrecommended</span>
<span id="cb23-13">    xetex</span>
<span id="cb23-14">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb23-15"></span>
<span id="cb23-16">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">quarto</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.quarto.overrideAttrs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">oldAttrs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rec</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1.3 + newer (I think) has a weird bug with the text boxes where they are white on a black background. Readable, but ugly</span></span>
<span id="cb23-18">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">version</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1.5.47"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-19">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">src</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.fetchurl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-20">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/quarto-dev/quarto-cli/releases/download/v</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/quarto-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-linux-amd64.tar.gz"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-21">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sha256</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sha256-Zfx3it7vhP+9vN8foveQ0xLcjPn5A7J/n+zupeFNwEk="</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb23-23">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">preFixup</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb23-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      wrapProgram $out/bin/quarto \</span></span>
<span id="cb23-25"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        --prefix QUARTO_TYPST : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>pkgs.lib.makeBinPath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> pkgs.typst <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/typst \</span></span>
<span id="cb23-26"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        --prefix QUARTO_ESBUILD </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>pkgs.lib.makeBinPath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> pkgs.esbuild <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/esbuild</span></span>
<span id="cb23-27"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    ''</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-28">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">installPhase</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb23-29"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      runHook preInstall</span></span>
<span id="cb23-30"></span>
<span id="cb23-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      mkdir -p $out/bin $out/share</span></span>
<span id="cb23-32"></span>
<span id="cb23-33"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      rm -rf bin/tools/*/typst</span></span>
<span id="cb23-34"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      rm -rf bin/tools/*/esbuild</span></span>
<span id="cb23-35"></span>
<span id="cb23-36"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      mv bin/* $out/bin</span></span>
<span id="cb23-37"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      mv share/* $out/share</span></span>
<span id="cb23-38"></span>
<span id="cb23-39"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      runHook postInstall</span></span>
<span id="cb23-40"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    ''</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-41">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb23-42"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span></span>
<span id="cb23-43">pkgs.mkShellNoCC <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-44">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PYTHONPATH</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>pkgs.python3.withPackages pythonDeps<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin/python3"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-45">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">QUARTO_PYTHON</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>pkgs.python3.withPackages pythonDeps<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin/python3"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-46"></span>
<span id="cb23-47">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> pkgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb23-48">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>python3.withPackages pythonDeps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb23-49">    quarto</span>
<span id="cb23-50">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>texlive.withPackages texDeps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb23-51">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb23-52"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<section id="more-issues-no-tab-autocomplete" class="level1">
<h1>More issues, no tab autocomplete</h1>
<p>Nope, it’s not the final shell. For whatever reason, if I open Vscode, or zellij using the <code>nix develop</code> shell, I cannot use tab autocomplete. In addition to that, the Vscode shell seems to be broken in others ways.</p>
<p>Here is the shell prompt:</p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb24-1">\[\][moonpie@lizard moonpiedumplings.github.io]$ \[\]</span></code></pre></div>
<p>Yeah. Not what it’s supposed to be. I don’t know what the backslashes signify. However, <code>nix-shell</code> continues to work fine for zellij.</p>
<p>There are some relevant issues for this:</p>
<ul>
<li>https://github.com/NixOS/nix/issues/6091</li>
<li>https://github.com/NixOS/nix/issues/6982</li>
<li>https://github.com/NixOS/nix/issues/8764</li>
</ul>
<p>In a related <a href="https://discourse.nixos.org/t/general-nix-office-hours/15019/37">discourse post</a>, Nobbz suggests to use <code>eval</code>, but that also does not work, not do related solutions with <code>. &lt;()</code>.</p>
<p>The big problem is that <code>nix develop</code> is designed for emulation of the nix build environment, which is non-interactive. <code>nix shell</code>, as I noted above, does not properly replace <code>nix-shell</code>, as it does not allow for any configuration of environment variables. Or can it?</p>
<p>I also investigated <code>pkgs.buildEnv</code>, which is <a href="https://github.com/NixOS/nixpkgs/issues/251039">literally undocumented</a>, in classic Nix fashion. I read the <a href="https://github.com/NixOS/nixpkgs/blob/master/pkgs%2Fbuild-support%2Fbuildenv%2Fdefault.nix">source code</a>, but it doesn’t seem to be able to set environment variables outside of wrapping programs. It mainly seems to be ableto add programs to the path.</p>
<p>Another solution is <a href="https://github.com/edolstra/flake-compat">flake-compat</a>. It’s a bit of nix code by Eelco Dostra that has creates a <code>shell.nix</code> that enables <code>nix-shell</code> to be used with flakes. I find it deeply ironic that despite all this effort to use flakey commands, I still end up finding that the non-flake commands work perfectly.</p>
<p>Another suggestion was to use direnv, but I don’t want to use that.</p>
<p>Anyway, I noticed something different about the <code>nix-shell</code> vs <code>nix develop</code>:</p>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb25-1">[nix-shell:~/vscode/moonpiedumplings.github.io]$ echo $SHELL</span>
<span id="cb25-2">/nix/store/bh6w9sbfz2m5w1bd4cg2ndw1s66agkfd-bash-interactive-5.2p26/bin/bash</span></code></pre></div>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb26-1">[moonpie@lizard moonpiedumplings.github.io]$ nix develop</span>
<span id="cb26-2">warning: Git tree '/home/moonpie/vscode/moonpiedumplings.github.io' is dirty</span>
<span id="cb26-3">evaluating derivation 'git+file:///home/moonpie/vscode/moonpiedumplings.github.io#devShells.x86_64-linux.default'</span>
<span id="cb26-4">(nix:nix-shell-env) [moonpie@lizard moonpiedumplings.github.io]$ echo $SHELL</span>
<span id="cb26-5">/nix/store/m101dg80ngyjdb02g6jwy80sr7kzj26g-bash-5.2p26/bin/bash</span></code></pre></div>
<p><code>nix-shell</code> defaults to an bash-interactive, whereas <code>nix develop</code> seems to use a stripped down, noninteractive version of bash. This is probably because <code>nix develop</code></p>
<p>The first thing I tried was to have <code>SHELL = "${pkgs.bashInteractive}/bin/bash";</code> in <code>pkgs.mkShell</code>, but this didn’t work. <code>nix develop</code> seems to set it’s own environment variables, <em>after</em> the other variables are set.</p>
<p>The first thing I did was to set a post shellHook, which <code>nix develop</code> would run, and would <code>export</code> the variable.</p>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode nix code-with-copy"><code class="sourceCode nix"><span id="cb27-1">pkgs.mkShellNoCC <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-2">   <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">shellHook</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb27-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    export SHELL='</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>pkgs.bashInteractive<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin/bash'</span></span>
<span id="cb27-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  ''</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>This worked for zellij, but vscode’s terminal was still broken. To get vscode’s terminal working, I had to add <code>bashInterative</code> to packages:</p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb28-1">pkgs.mkShellNoCC {</span>
<span id="cb28-2">  packages = with pkgs; [ bashInteractive ];</span>
<span id="cb28-3">   shellHook = ''</span>
<span id="cb28-4">    export SHELL='${pkgs.bashInteractive}/bin/bash'</span>
<span id="cb28-5">  '';</span>
<span id="cb28-6">}</span></code></pre></div>
<p>I actually encountered a similar issue with python. Vscode seems to ignore things not added to path, even if they are specified in other ways, like <code>$PYTHONPATH</code> pointing to the correct version of python.</p>
<p>But now, this finally works.</p>
</section>
<section id="home-manager" class="level1">
<h1>Home-Manager</h1>
<p>Next thing is to convert home manager to flakes. I need a slightly older version of kubectl, and flakes allow me to use packages from multiple versions of nixpkgs.</p>
<p>I followed the <a href="https://nix-community.github.io/home-manager/index.xhtml#sec-flakes-standalone">standalone flakes installation instructions</a></p>
<p><code>nix run home-manager/master -- init --switch</code></p>
<p>And with this, I get a basic flake.nix, flake.lock, and home.nix in <code>.config/home-manager/</code>.</p>
<p>For older versions of packages, there are two sites I like, nixhub and lazamar’s site:</p>
<ul>
<li>https://www.nixhub.io/</li>
<li>https://lazamar.co.uk/nix-versions/</li>
</ul>
<p>I found the correct nixpkgs revision for what I want: <code>7a339d87931bba829f68e94621536cad9132971a</code>.</p>
<p>However, using packages from multiple versions of nipkgs isn’t as easy as I thought it would be. The <a href="https://wiki.nixos.org/wiki/Flakes#Importing_packages_from_multiple_nixpkgs_branches">officail docs</a> suggest to use an overlay, which feels unecessary. Why can’t I just replicate what it does for <code>nixpkgs</code>, but for <code>nixpkgs</code> again?</p>
<p>I tried that, and it didn’t work. The error’s aren’t very clear, but I think it’s because the home manager configuration is a function with explicit arguments, and it errors when I try to feed it more than what it wants.</p>
<p>Thankfully, I found another simple solution:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>flake.nix</strong></pre>
</div>
<div class="sourceCode" id="cb29" data-filename="flake.nix" style="background: #f1f3f5;"><pre class="sourceCode nix code-with-copy"><code class="sourceCode nix"><span id="cb29-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-2">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">description</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Home Manager configuration of moonpie"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-3"></span>
<span id="cb29-4">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">inputs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-5">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nixpkgs</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"github:nixos/nixpkgs/nixos-unstable"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-6">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs-kubectl</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"github:nixos/nixpkgs/7a339d87931bba829f68e94621536cad9132971a"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">home-manager</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-8">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"github:nix-community/home-manager"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-9">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">inputs</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nixpkgs</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">follows</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nixpkgs"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb29-11">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb29-12"></span>
<span id="cb29-13">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">outputs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nixpkgs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs-kubectl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">home-manager</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">...</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>:</span>
<span id="cb29-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span></span>
<span id="cb29-15">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">system</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x86_64-linux"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-16">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nixpkgs.legacyPackages.$<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">system</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb29-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-18">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">homeConfigurations</span>.<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>moonpie<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> home<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>manager.lib.homeManagerConfiguration <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-19">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">inherit</span> pkgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-20">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">extraSpecialArgs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-21">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs-kbctl</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> pkgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>kubectl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">inherit</span> system<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;};</span></span>
<span id="cb29-22">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb29-23">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">modules</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">./home.nix</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb29-24">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb29-25">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb29-26"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p>And then in the beginning of home.nix:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>home.nix</strong></pre>
</div>
<div class="sourceCode" id="cb30" data-filename="home.nix" style="background: #f1f3f5;"><pre class="sourceCode nix code-with-copy"><code class="sourceCode nix"><span id="cb30-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">config</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs-kbctl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">...</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>:</span></code></pre></div>
</div>
<p>And this works. I can use <code>pkgs-kbctl.kubectl</code> to reference kubectl version 1.28.4, which is what’s on my server.</p>


</section>

 ]]></description>
  <category>nix</category>
  <category>_playground</category>
  <guid>./playground/flake-shell/</guid>
  <pubDate>Fri, 21 Jun 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Nice Challenge 5</title>
  <dc:creator>Jeffrey Fonseca</dc:creator>
  <link>./writeups/nice-challenge-5/</link>
  <description><![CDATA[ 




<p>This is for the <a href="https://nice-challenge.com/">NICE</a> challenge, and this would be my fifth one (not counting repeats).</p>
<p>As usual, it started out with a simulated chatroom:</p>
<p><img src="./writeups/nice-challenge-5/images/chatroom.png" class="img-fluid"></p>
<p>And, there were also some empty checks.</p>
<p><img src="./writeups/nice-challenge-5/images/emptychecks.png" class="img-fluid"></p>
<p>Based on this, it seems like I will be working on the “Production Web Server”, primarily.</p>
<section id="prod-web" class="level1">
<h1>Prod-Web</h1>
<section id="users" class="level2">
<h2 class="anchored" data-anchor-id="users">Users</h2>
<p>First, I created user accounts for the relevant users.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb1-1">useradd gthatcher</span>
<span id="cb1-2"></span>
<span id="cb1-3">useradd rob</span></code></pre></div>
<p>Since <code>gthatcher</code> is going to be an admin, I added them to the <code>wheel</code> user group, since that is often used as an administrator group on Linux systems.</p>
<p><code>usermod -aG wheel gthatcher</code></p>
<p>Then, I used the <code>visudo</code> command to edit the sudoer’s file and add wheel as a group that could use all commands with sudo:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/etc/sudoers</strong></pre>
</div>
<div class="sourceCode" id="cb2" data-filename="/etc/sudoers" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1">## Allows people in group wheel to run all commands</span>
<span id="cb2-2">%wheel  ALL=(ALL)   ALL</span></code></pre></div>
</div>
<p>The other thing I added was for user <code>rob</code> to be able to run certain commands as sudo, without a password, but only those commands.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/etc/sudoers</strong></pre>
</div>
<div class="sourceCode" id="cb3" data-filename="/etc/sudoers" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb3-1">rob ALL=NOPASSWD : /bin/sudoedit /var/www/html/*, /bin/systemctl status httpd, /bin/systemctl stop httpd, /bin/systemctl start httpd, /bin/systemctl restart httpd, /bin/systemctl enable httpd, /bin/systemctl disable httpd</span></code></pre></div>
</div>
</section>
<section id="update-apache" class="level2">
<h2 class="anchored" data-anchor-id="update-apache">Update Apache</h2>
<p>Also, I needed to update apache. However, the repos completely broken on this machine, so I deleted them, and made way for new repos.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb4-1">mv /etc/yum.repos.d /etc/yum.repos.bac # Back up old yum repos just in case</span>
<span id="cb4-2"></span>
<span id="cb4-3">mkdir /etc/yum.repos.d</span>
<span id="cb4-4"></span>
<span id="cb4-5">curl http://mirror.centos.org/centos/7/atomic/x86_64/repo/CentOS-Base.repo -o /etc/yum.repos.d/CentOS-Base.repo</span>
<span id="cb4-6"></span>
<span id="cb4-7">yum update</span></code></pre></div>
<p>And with this, Apache is updated.</p>
</section>
<section id="ssh-config" class="level2">
<h2 class="anchored" data-anchor-id="ssh-config">Ssh Config</h2>
<p>Ssh needs to be configured to use key based authentication, instead of password based authentication.</p>
<p>On the Prod-Web server:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb5-1">ssh-keygen # this generates an ssh key in the default location. I did not set a passphrase.</span>
<span id="cb5-2"></span>
<span id="cb5-3">scp .ssh/id_rsa.pub playerone@172.16.20.11:/home/playerone/.ssh/authorized_keys # use password to authenticate the connection</span></code></pre></div>
<p>This creates a key and authorizes it for use on the Dev-Web server.</p>
<p>And with this, all checks are green:</p>
<p><img src="./writeups/nice-challenge-5/images/greenchecks.png" class="img-fluid"></p>


</section>
</section>

 ]]></description>
  <category>linux</category>
  <category>_writeups</category>
  <guid>./writeups/nice-challenge-5/</guid>
  <pubDate>Fri, 07 Jun 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Reinstalling Cachyos</title>
  <link>./playground/cachyos-install/</link>
  <description><![CDATA[ 




<p>I’ve decided to reinstall <a href="https://cachyos.org/">cachyos</a>, the Arch Linux fork I use on my laptop’s, because the config of my smaller laptop is getting crusty. In addition to not having any swap setup, <code>/nix</code> is part of the main btrfs subvolume, meaning it is included in snapshots, and my snapshots are far, far larger than they should be.</p>
<section id="installation" class="level1">
<h1>Installation</h1>
<p>I downloaded the latest, ISO, but I had some troubles installing. I first attempted to set up an LVM2 Partition, but that crashed, and I don’t know why. The error log of the installer doesn’t have any relevant information.</p>
<p>I tried again, but with a simpler partitioning setup, but it errored on another step, ranking the mirrors.</p>
<p>An excerpt from the logs of the failed install:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb1-1">--&gt; name 'arch'; mirrorlist_path '/etc/pacman.d/mirrorlist'; special_arch ''</span>
<span id="cb1-2">/usr/bin/cachyos-rate-mirrors: line 97: /usr/bin/rate-mirrors: Input/output error</span></code></pre></div>
<p>I tested the command independently, and found that it was broken. It seemed to be a bugged shell script.</p>
<p>In order to fix this, I decided to update just the relevant packages: <code>pacman -Sy cachyos-rate-mirrors rate-mirrors</code>. Normally, you <a href="https://wiki.archlinux.org/title/System_maintenance#Partial_upgrades_are_unsupported">never want to do this</a>, as it is a partial upgrade, and can cause many issues down the road. However, I don’t really have a choice because the system is loaded in ram right now, and I can’t do a full upgrade as I don’t have enough ram to store all of those downloaded packages — especially since CachyOS comes with a full GUI.</p>
<p>Once the install is done, I have to set up swap, and a separate subvolume for <code>/nix</code>.</p>
<p>I use <code>arch-chroot</code> to chroot into the newly installed arch system, which is thankfully still mounted at <code>/tmp/calamares-root-ncjj4sta</code>.</p>
<p>I start by following the instructions on the arch wiki for a <a href="https://wiki.archlinux.org/title/Btrfs#Swap_file">btrfs swap file</a>.</p>
<p>I also attempted to create a subvolume for nix, but this failed. When I removed the relevant lines for the nix subvolume <code>/etc/fstab</code>, my system booted properly.</p>
<p>However, since hibernate wasn’t working properly, I decided to set that up first.</p>
<p>I still had more issues.</p>
<p>I attempted to install using the Calamares installer, with a LVM setup, and a seperate swap “partition” on a logical volume… and calamares crashed. Apparently, <a href="https://github.com/calamares/calamares/issues/1564">Calameres + LVM is basically completely broken</a></p>
<blockquote class="blockquote">
<p>LVM support is broken, in fact, I have no idea why is there right now.</p>
</blockquote>
<p>So yeah.</p>
<p>I also attempted to play around with a systemd based initramfs. According to <a href="https://wiki.archlinux.org/title/Power_management/Suspend_and_hibernate#Configure_the_initramfs">the archwiki</a></p>
<blockquote class="blockquote">
<p>When an initramfs with the systemd hook is used, a resume mechanism is already provided, and no further hooks need to be added</p>
</blockquote>
<p>Compared to a normal hibernate setup, you have to locate the swap partition/swapfile, and then pass it as a kernel parameter. However, systemd automatically detects a swap partition/swapfile to hibernate it. But this took me some time to get a systemd based initramfs set up properly.</p>
<p>The hooks are in /etc/mkinitcpio.conf must be modified as follows:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/etc/mkinitcpio.conf</strong></pre>
</div>
<div class="sourceCode" id="cb2" data-filename="/etc/mkinitcpio.conf" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1">HOOKS=(base systemd autodetect microcode modconf kms keyboard sd-vconsole block sd-encrypt filesystems fsck)</span></code></pre></div>
</div>
<p>(No resume hook is needed).</p>
<p>However, this still wouldn’t boot, and I couldn’t figure out why.</p>
<p>Figured it out: https://wiki.archlinux.org/title/Dm-crypt/System_configuration#Using_systemd-cryptsetup-generator</p>
<p>By copying <code>/etc/crypttab</code> to <code>/etc/crypttab.initramfs</code>, it will be copied over the the initramfs, enabling the systemd based initramfs to read a version of the <code>crypttab</code> configuration file stored in the initramfs.</p>
<p>Although, I am left with some questions, like why the non-systemd based initramfs doesn’t need this, it seems to work fine. Systemd automatically detects the swap file, even if it is stored in the encrypted btrfs partition.</p>
<p>Another plus: A <a href="https://cachyos.org/blog/2406-june-release/">new cachyos iso</a> was released. This iso release, fixes the issues with the mirror software being broken.</p>
<p>Now that Cachyos is installed, I need to figure out how to make a top level subvolume. According to the <a href="https://wiki.archlinux.org/title/Btrfs#Swap_file">arch wiki article on btrfs subvolumes</a></p>
<blockquote class="blockquote">
<p>Tip: Consider creating the subvolume directly below the top-level subvolume, e.g. <span class="citation" data-cites="swap">@swap</span>. Then, make sure the subvolume is mounted to /swap (or any other accessible location).</p>
</blockquote>
<p>Why is this setup better? And how do I create a subvoolume directly below the top level?</p>
<p>When I run <code>btrfs su create /mnt/@nix</code> it doesn’t properly create a subvolume. Instead, it says <code>top level 256 path @nix</code>, meaning that this subvolume is nested in the subvolume with ID 256, the @ subvolume. However, <span class="citation" data-cites="home">@home</span>, <span class="citation" data-cites="var">@var</span>, and <span class="citation" data-cites="tmp">@tmp</span> aren’t like that, instead they have the top level 5, meaning they are directly on the top level subvolume, which is equivalent to the filesystem itself.</p>
<p>Okay, I think I figured it out. In the chroot I make, I mount the btrfs filesystem with <code>@</code> as the root subvolume, meaning any subvolumes I create are nested below that. In order to properly create a subvolume under the top, I have to mount it first.</p>
<p>I still don’t understand the benefit of having a subvolume under the top level subvolume, rather than another nested subvolume layout. Maybe because snapshots happen to nested subvolumes as well, and this avoids the swapfile accidentally getting snapshotted?</p>
<p>I encountered another issue, after testing hibernate:</p>
<p><img src="./playground/cachyos-install/images/noswap.jpg" class="img-fluid"></p>
<p>Except… that UUID doesn’t exist. There is no mention of it in /etc/fstab. Then I remembered, according to the arch wiki article for hibernation, systemd stores the location where to resume from a hibernation in <code>/sys/firmware/vars/efivars/HibernateLocation</code>.</p>
<div class="sourceCode" id="cb3" data-file="/sys/firmware/vars/efivars/HibernateLocation" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb3-1">{"uuid":"74fd980d-396b-46be-8123-ed41bcaa2713","offset":2269039,"kernelVersion":"6.9.3-4-cachyos","osReleaseId":"cachyos"}</span></code></pre></div>
<p>Now this looks good… except whatever hibernate resume was trying to happen, failed. This is probably because I reinstalled linux, after I had just hibernated it, leaving that efivar in place.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb4-1">[root@cachyos-x8664 efivars]# btrfs inspect-internal map-swapfile -r /swap/swapfile</span>
<span id="cb4-2">2168766</span></code></pre></div>
<p>The offset was wrong. To fix it? I just had to hibernate the system normally. Then this issue went away.</p>
<p>With this, my setup is complete. But I still don’t understand the benefits of non-nested subvolumes. I ended up making a <a href="https://programming.dev/post/15458752">lemmy post</a> about it, but I haven’t gotten any conclusive answers yet.</p>
</section>
<section id="user-data" class="level1">
<h1>User data</h1>
<p>I backed up my entire home directory to a tar archive using ark, the archiver tool on KDE. However, since I was backing it up to a usb thumb drive, I used <a href="https://wiki.archlinux.org/title/Gocryptfs">gocryptfs</a> to encrypt the folder where the archive was stored. I encrypt sensitive data I put on my usb drives, that way, even if I lose the drive, nothing gets compromised.</p>
</section>
<section id="misc-config-changes" class="level1">
<h1>Misc config changes</h1>
<p>I also enabled the <a href="https://wiki.archlinux.org/title/Keyboard_shortcuts#Kernel_(SysRq)">Magic sysrq key</a> via a kernel parameter in my grub config file.</p>
</section>
<section id="nix-not-starting-on-boot." class="level1">
<h1>Nix not starting on boot.</h1>
<p>I encountered another issue where nix does not start on boot. The problem is probably that, because /nix is a seperate btrfs subvolume, and the systemd service is a symlink to the nix service on /nix, systemd cannot locate the proper service. I need to either move the nix service so it is located on the root subvolume, or adjust the nix daemon service so it requires /nix to be mounted.</p>
<p>Thankfully, systemd unit files have an option for this: <a href="https://www.freedesktop.org/software/systemd/man/latest/systemd.unit.html#RequiresMountsFor=">RequiresMountsFor=</a>.</p>
<p>And to adjust the nix daemon service, I can use override, as <a href="https://askubuntu.com/questions/659267/how-do-i-override-or-configure-systemd-services">mentioned on stackoverflow</a>. Although, I don’t like this solution. Since the original service is still a symlink, would systemd really be able to find it?</p>
<p>I found a <a href="https://github.com/DeterminateSystems/nix-installer/issues/416">relevant GitHub issue</a> on the on the page for the Determinate Systems Nix installer, which is what I use. Just like me, another user wants to have /nix on a seperate btrfs subvolume. Although they first did a workaround of removing the symlink, and copying the service files to /etc instead. However, one of the developers chimed in, mentioning the solution for the Steam Deck (a Linux handheld which uses btrfs), which was a systemd oneshot service that runs after nix is mounted, and then reloads all systemd services, and then restarts the nix socket. This was a lot easier to implement on my system.</p>
<p>The systemd service was stored in the source code of the installer.</p>
<p>https://github.com/DeterminateSystems/nix-installer/blob/main/src/planner/steam_deck.rs#L270</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/etc/systemd/system/ensure-symlinked-units-resolve.service</strong></pre>
</div>
<div class="sourceCode" id="cb5" data-filename="/etc/systemd/system/ensure-symlinked-units-resolve.service" style="background: #f1f3f5;"><pre class="sourceCode ini code-with-copy"><code class="sourceCode ini"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[Unit]</span></span>
<span id="cb5-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Description</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Ensure Nix related units which are symlinked resolve</span></span>
<span id="cb5-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">After</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">nix.mount</span></span>
<span id="cb5-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Requires</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">nix.mount</span></span>
<span id="cb5-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">DefaultDependencies</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">no</span></span>
<span id="cb5-6"></span>
<span id="cb5-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[Service]</span></span>
<span id="cb5-8"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Type</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">oneshot</span></span>
<span id="cb5-9"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">RemainAfterExit</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">yes</span></span>
<span id="cb5-10"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ExecStart</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/usr/bin/systemctl daemon-reload</span></span>
<span id="cb5-11"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ExecStart</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/usr/bin/systemctl restart --no-block nix-daemon.socket</span></span>
<span id="cb5-12"></span>
<span id="cb5-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[Install]</span></span>
<span id="cb5-14"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">WantedBy</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">sysinit.target</span></span></code></pre></div>
</div>
<p>And with this, the nix socket starts properly on boot.</p>


</section>

 ]]></description>
  <category>nix</category>
  <category>_playground</category>
  <guid>./playground/cachyos-install/</guid>
  <pubDate>Tue, 04 Jun 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Container images and setuid binaries</title>
  <link>./playground/setuid-containers/</link>
  <description><![CDATA[ 




<p>A friend sends me a message in Discord:</p>
<p><code>$ find / -perm /4000</code></p>
<blockquote class="blockquote">
<p>That will show all suid executables on your system</p>
</blockquote>
<p>They then post the output of this command on openbsd:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb1-1">/usr/bin/chfn</span>
<span id="cb1-2">/usr/bin/chpass</span>
<span id="cb1-3">/usr/bin/chsh</span>
<span id="cb1-4">/usr/bin/doas</span>
<span id="cb1-5">/usr/bin/lpr</span>
<span id="cb1-6">/usr/bin/lprm</span>
<span id="cb1-7">/usr/bin/passwd</span>
<span id="cb1-8">/usr/bin/su</span>
<span id="cb1-9">/usr/libexec/lockspool</span>
<span id="cb1-10">/usr/libexec/ssh-keysign</span>
<span id="cb1-11">/usr/sbin/authpf</span>
<span id="cb1-12">/usr/sbin/authpf-noip</span>
<span id="cb1-13">/usr/sbin/pppd</span>
<span id="cb1-14">/usr/sbin/traceroute</span>
<span id="cb1-15">/usr/sbin/traceroute6</span>
<span id="cb1-16">/sbin/ping</span>
<span id="cb1-17">/sbin/ping6</span>
<span id="cb1-18">/sbin/shutdown</span></code></pre></div>
<p>Another friend tries it out on Gentoo Linux</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1">/usr/bin/chfn</span>
<span id="cb2-2">/usr/bin/chpass</span>
<span id="cb2-3">/usr/bin/chsh</span>
<span id="cb2-4">/usr/bin/doas</span>
<span id="cb2-5">/usr/bin/lpr</span>
<span id="cb2-6">/usr/bin/lprm</span>
<span id="cb2-7">/usr/bin/passwd</span>
<span id="cb2-8">/usr/bin/su</span>
<span id="cb2-9">/usr/libexec/lockspool</span>
<span id="cb2-10">/usr/libexec/ssh-keysign</span>
<span id="cb2-11">/usr/sbin/authpf</span>
<span id="cb2-12">/usr/sbin/authpf-noip</span>
<span id="cb2-13">/usr/sbin/pppd</span>
<span id="cb2-14">/usr/sbin/traceroute</span>
<span id="cb2-15">/usr/sbin/traceroute6</span>
<span id="cb2-16">/sbin/ping</span>
<span id="cb2-17">/sbin/ping6</span>
<span id="cb2-18">/sbin/shutdown</span></code></pre></div>
<p>I suppose I should explain what setuid binaries are. Setuid binaries run with the permissions of the user who owns the binary. Usually, it’s used for things like <code>sudo</code>, which use setuid to elevate the binary to root first, and then the rootful binary then does the things, like grant permissions.</p>
<p>Setuid binaries are typically considered a security risk, because an exploit like a buffer overflow or some other exploit can be disasterous in a process running as root. In fact, that’s how many privilege escalation vulnerabilities on Linux have happened — exploiting a setuid binary owned by root.</p>
<p>I then run the command on my own system (Arch Linux)</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb3-1">[moonpie@lizard ~]$ find / -perm /4000 2&gt;/dev/null</span>
<span id="cb3-2">/home/moonpie/.local/share/containers/storage/overlay/2fa37f2ee66efbd308b9b91bce81c262f5e6ab6c3bf8056632afc60cc602785c/diff/usr/bin/chfn</span>
<span id="cb3-3">/home/moonpie/.local/share/containers/storage/overlay/2fa37f2ee66efbd308b9b91bce81c262f5e6ab6c3bf8056632afc60cc602785c/diff/usr/bin/chsh</span>
<span id="cb3-4">/home/moonpie/.local/share/containers/storage/overlay/2fa37f2ee66efbd308b9b91bce81c262f5e6ab6c3bf8056632afc60cc602785c/diff/usr/bin/gpasswd</span>
<span id="cb3-5">/home/moonpie/.local/share/containers/storage/overlay/2fa37f2ee66efbd308b9b91bce81c262f5e6ab6c3bf8056632afc60cc602785c/diff/usr/bin/mount</span>
<span id="cb3-6">/home/moonpie/.local/share/containers/storage/overlay/2fa37f2ee66efbd308b9b91bce81c262f5e6ab6c3bf8056632afc60cc602785c/diff/usr/bin/newgrp</span>
<span id="cb3-7">/home/moonpie/.local/share/containers/storage/overlay/2fa37f2ee66efbd308b9b91bce81c262f5e6ab6c3bf8056632afc60cc602785c/diff/usr/bin/passwd</span>
<span id="cb3-8">/home/moonpie/.local/share/containers/storage/overlay/2fa37f2ee66efbd308b9b91bce81c262f5e6ab6c3bf8056632afc60cc602785c/diff/usr/bin/su</span>
<span id="cb3-9">/home/moonpie/.local/share/containers/storage/overlay/2fa37f2ee66efbd308b9b91bce81c262f5e6ab6c3bf8056632afc60cc602785c/diff/usr/bin/umount</span>
<span id="cb3-10">/home/moonpie/.local/share/containers/storage/overlay/b2a22dd93936f487715bbc38b3a93f3f8e7d927fbf473871581c0a333f94d23a/diff/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span>
<span id="cb3-11">/home/moonpie/.local/share/containers/storage/overlay/af21757bc7d5f497f4ce0552dbad07cf0725413c3a305e1ff2c8a7b5097eeb49/diff/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span>
<span id="cb3-12">/home/moonpie/.local/share/containers/storage/overlay/ae134c61b154341a1dd932bd88cb44e805837508284e5d60ead8e94519eb339f/diff/usr/bin/chfn</span>
<span id="cb3-13">/home/moonpie/.local/share/containers/storage/overlay/ae134c61b154341a1dd932bd88cb44e805837508284e5d60ead8e94519eb339f/diff/usr/bin/chsh</span>
<span id="cb3-14">/home/moonpie/.local/share/containers/storage/overlay/ae134c61b154341a1dd932bd88cb44e805837508284e5d60ead8e94519eb339f/diff/usr/bin/gpasswd</span>
<span id="cb3-15">/home/moonpie/.local/share/containers/storage/overlay/ae134c61b154341a1dd932bd88cb44e805837508284e5d60ead8e94519eb339f/diff/usr/bin/mount</span>
<span id="cb3-16">/home/moonpie/.local/share/containers/storage/overlay/ae134c61b154341a1dd932bd88cb44e805837508284e5d60ead8e94519eb339f/diff/usr/bin/newgrp</span>
<span id="cb3-17">/home/moonpie/.local/share/containers/storage/overlay/ae134c61b154341a1dd932bd88cb44e805837508284e5d60ead8e94519eb339f/diff/usr/bin/passwd</span>
<span id="cb3-18">/home/moonpie/.local/share/containers/storage/overlay/ae134c61b154341a1dd932bd88cb44e805837508284e5d60ead8e94519eb339f/diff/usr/bin/su</span>
<span id="cb3-19">/home/moonpie/.local/share/containers/storage/overlay/ae134c61b154341a1dd932bd88cb44e805837508284e5d60ead8e94519eb339f/diff/usr/bin/umount</span>
<span id="cb3-20">/home/moonpie/.local/share/containers/storage/overlay/fd77695eba64b4eb5db10dd9ef0181d0053dbc23e6c465f3001d664f19e621d7/diff/usr/lib/openssh/ssh-keysign</span>
<span id="cb3-21">/home/moonpie/.local/share/containers/storage/overlay/ede391454aeab91f6777dd38e55e085975ffcfd298987b8ec685196f2a6c811a/diff/usr/bin/chfn</span>
<span id="cb3-22">/home/moonpie/.local/share/containers/storage/overlay/ede391454aeab91f6777dd38e55e085975ffcfd298987b8ec685196f2a6c811a/diff/usr/bin/chsh</span>
<span id="cb3-23">/home/moonpie/.local/share/containers/storage/overlay/ede391454aeab91f6777dd38e55e085975ffcfd298987b8ec685196f2a6c811a/diff/usr/bin/gpasswd</span>
<span id="cb3-24">/home/moonpie/.local/share/containers/storage/overlay/ede391454aeab91f6777dd38e55e085975ffcfd298987b8ec685196f2a6c811a/diff/usr/bin/mount</span>
<span id="cb3-25">/home/moonpie/.local/share/containers/storage/overlay/ede391454aeab91f6777dd38e55e085975ffcfd298987b8ec685196f2a6c811a/diff/usr/bin/newgrp</span>
<span id="cb3-26">/home/moonpie/.local/share/containers/storage/overlay/ede391454aeab91f6777dd38e55e085975ffcfd298987b8ec685196f2a6c811a/diff/usr/bin/passwd</span>
<span id="cb3-27">/home/moonpie/.local/share/containers/storage/overlay/ede391454aeab91f6777dd38e55e085975ffcfd298987b8ec685196f2a6c811a/diff/usr/bin/su</span>
<span id="cb3-28">/home/moonpie/.local/share/containers/storage/overlay/ede391454aeab91f6777dd38e55e085975ffcfd298987b8ec685196f2a6c811a/diff/usr/bin/umount</span>
<span id="cb3-29">/home/moonpie/.local/share/containers/storage/overlay/c4bc4a1387e82c199a05c950a61d31aba8e1481a94c63196b82e25ac8367e5d1/diff/usr/bin/chage</span>
<span id="cb3-30">/home/moonpie/.local/share/containers/storage/overlay/c4bc4a1387e82c199a05c950a61d31aba8e1481a94c63196b82e25ac8367e5d1/diff/usr/bin/gpasswd</span>
<span id="cb3-31">/home/moonpie/.local/share/containers/storage/overlay/c4bc4a1387e82c199a05c950a61d31aba8e1481a94c63196b82e25ac8367e5d1/diff/usr/bin/mount</span>
<span id="cb3-32">/home/moonpie/.local/share/containers/storage/overlay/c4bc4a1387e82c199a05c950a61d31aba8e1481a94c63196b82e25ac8367e5d1/diff/usr/bin/newgrp</span>
<span id="cb3-33">/home/moonpie/.local/share/containers/storage/overlay/c4bc4a1387e82c199a05c950a61d31aba8e1481a94c63196b82e25ac8367e5d1/diff/usr/bin/passwd</span>
<span id="cb3-34">/home/moonpie/.local/share/containers/storage/overlay/c4bc4a1387e82c199a05c950a61d31aba8e1481a94c63196b82e25ac8367e5d1/diff/usr/bin/su</span>
<span id="cb3-35">/home/moonpie/.local/share/containers/storage/overlay/c4bc4a1387e82c199a05c950a61d31aba8e1481a94c63196b82e25ac8367e5d1/diff/usr/bin/umount</span>
<span id="cb3-36">/home/moonpie/.local/share/containers/storage/overlay/c4bc4a1387e82c199a05c950a61d31aba8e1481a94c63196b82e25ac8367e5d1/diff/usr/sbin/pam_timestamp_check</span>
<span id="cb3-37">/home/moonpie/.local/share/containers/storage/overlay/c4bc4a1387e82c199a05c950a61d31aba8e1481a94c63196b82e25ac8367e5d1/diff/usr/sbin/unix_chkpwd</span>
<span id="cb3-38">/home/moonpie/.local/share/containers/storage/overlay/c4bc4a1387e82c199a05c950a61d31aba8e1481a94c63196b82e25ac8367e5d1/diff/usr/sbin/userhelper</span>
<span id="cb3-39">/home/moonpie/.local/share/containers/storage/overlay/9b1016e74f7eb4282d4aa84ecefedda2bc0f6625203e5085e070bd649945a965/diff/usr/bin/fusermount3</span>
<span id="cb3-40">/usr/bin/fusermount</span>
<span id="cb3-41">/usr/bin/mount.cifs</span>
<span id="cb3-42">/usr/bin/fusermount3</span>
<span id="cb3-43">/usr/bin/mount.nfs</span>
<span id="cb3-44">/usr/bin/ksu</span>
<span id="cb3-45">/usr/bin/sudo</span>
<span id="cb3-46">/usr/bin/pkexec</span>
<span id="cb3-47">/usr/bin/chage</span>
<span id="cb3-48">/usr/bin/expiry</span>
<span id="cb3-49">/usr/bin/gpasswd</span>
<span id="cb3-50">/usr/bin/passwd</span>
<span id="cb3-51">/usr/bin/sg</span>
<span id="cb3-52">/usr/bin/unix_chkpwd</span>
<span id="cb3-53">/usr/bin/crontab</span>
<span id="cb3-54">/usr/bin/vmware-authd</span>
<span id="cb3-55">/usr/bin/chfn</span>
<span id="cb3-56">/usr/bin/chsh</span>
<span id="cb3-57">/usr/bin/mount</span>
<span id="cb3-58">/usr/bin/newgrp</span>
<span id="cb3-59">/usr/bin/su</span>
<span id="cb3-60">/usr/bin/umount</span>
<span id="cb3-61">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span>
<span id="cb3-62">/usr/lib/polkit-1/polkit-agent-helper-1</span>
<span id="cb3-63">/usr/lib/mail-dotlock</span>
<span id="cb3-64">/usr/lib/ssh/ssh-keysign</span>
<span id="cb3-65">/usr/lib/kf5/fileshareset</span>
<span id="cb3-66">/usr/lib/qemu/qemu-bridge-helper</span>
<span id="cb3-67">/usr/lib/cockpit/cockpit-session</span>
<span id="cb3-68">/usr/lib/vmware/bin/vmware-vmx</span>
<span id="cb3-69">/usr/lib/vmware/bin/vmware-vmx-debug</span>
<span id="cb3-70">/usr/lib/vmware/bin/vmware-vmx-stats</span>
<span id="cb3-71">/usr/lib/virtualbox/VBoxHeadless</span>
<span id="cb3-72">/usr/lib/virtualbox/VBoxNetAdpCtl</span>
<span id="cb3-73">/usr/lib/virtualbox/VBoxNetDHCP</span>
<span id="cb3-74">/usr/lib/virtualbox/VBoxNetNAT</span>
<span id="cb3-75">/usr/lib/virtualbox/VBoxSDL</span>
<span id="cb3-76">/usr/lib/virtualbox/VirtualBoxVM</span>
<span id="cb3-77">/usr/lib/electron27/chrome-sandbox</span>
<span id="cb3-78">/usr/lib/chromium/chrome-sandbox</span>
<span id="cb3-79">/usr/lib/electron28/chrome-sandbox</span>
<span id="cb3-80">/usr/lib/Xorg.wrap</span>
<span id="cb3-81">/opt/microsoft/msedge/msedge-sandbox</span></code></pre></div>
<p>But okay. This isn’t too bad. Maybe I can’t execute binaries from the contianer images, outside the container images.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb4-1">[moonpie@lizard ~]$ cd /home/moonpie/.local/share/containers/storage/overlay/2fa37f2ee66efbd308b9b91bce81c262f5e6ab6c3bf8056632afc60cc602785c/diff/usr/bin/</span>
<span id="cb4-2">[moonpie@lizard bin]$ ./gpasswd</span>
<span id="cb4-3">configuration error - unknown item 'FAIL_DELAY' (notify administrator)</span>
<span id="cb4-4">Usage: gpasswd [option] GROUP</span>
<span id="cb4-5"></span>
<span id="cb4-6">Options:</span>
<span id="cb4-7">  -a, --add USER                add USER to GROUP</span>
<span id="cb4-8">  -d, --delete USER             remove USER from GROUP</span>
<span id="cb4-9">  -h, --help                    display this help message and exit</span>
<span id="cb4-10">  -Q, --root CHROOT_DIR         directory to chroot into</span>
<span id="cb4-11">  -r, --remove-password         remove the GROUP's password</span>
<span id="cb4-12">  -R, --restrict                restrict access to GROUP to its members</span>
<span id="cb4-13">  -M, --members USER,...        set the list of members of GROUP</span>
<span id="cb4-14">  -A, --administrators ADMIN,...</span>
<span id="cb4-15">                                set the list of administrators for GROUP</span>
<span id="cb4-16">Except for the -A and -M options, the options cannot be combined.</span></code></pre></div>
<p>That error is likely due to the fact that my Arch system has a newer version of the config file then whatever this <code>gpasswd</code> binary is expecting.</p>
<p>Theoretically, if there was a vulnerable setuid binary in one of these containers, then someone could execute it to become able to do things as my user.</p>
<p>However, this isn’t actually that big of an issue, because only I can access my home direcotry, where the container images are stored.</p>
<p>I also experimented with docker images, with the rootful docker daemon. The same thing happened, where only root has permission to read and execuite the directories those docker images are stored in.</p>
<p>I panicked at first, seeing all those setuid binaries, but it doesn’t seem to be that much of a deal, and doesn’t give people access to things they don’t already have access to.. by default at least.</p>



 ]]></description>
  <category>linux</category>
  <category>cybersecurity</category>
  <category>_playground</category>
  <guid>./playground/setuid-containers/</guid>
  <pubDate>Thu, 02 May 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Nice Challenge 4</title>
  <dc:creator>Jeffrey Fonseca</dc:creator>
  <link>./writeups/nice-challenge-4/</link>
  <description><![CDATA[ 




<p>This is for the <a href="https://nice-challenge.com/">NICE</a> challenge.</p>
<p>I did pretty poorly with this one. I have little to no hands-on experience with pfsense and Windows Active Directory.</p>
<p>Same as before, there was a simulated chatroomm:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="./writeups/nice-challenge-4/images/meetingnotes.png" class="img-fluid figure-img"></p>
<figcaption>meeting notes</figcaption>
</figure>
</div>
<p>However, there were yet more notes, as mentioned in the simulated chatroom:</p>
<pre class="defualt"><code>Create Active Directory security group named DasNetworkAdmins with Gary Thatcher, Brimlock Stones, and yourself as members. Grant members of DasNetworkAdmins the privileges required to sign in to pfSense (Firewall) and make changes on all pages as admins.

For the pfSense LDAP authentication, I have created a bind user for you on the domain. The credentials are 'pfSenseBind' with the password 'password123'. The system for getting that setup works much better in new versions of pfSense, so you should do that first.

Please create a new database called production_site and create the user das_user for the website to connect with using the backup located at /ftp on Backup.
das_user only needs to have privilege on that database, since we're trying to keep a least privilege model.

Please patch shellshock on Fileshare

For the Domain Group Policy we are making for the new security group, DasNetworkAdmins, please:

Name it Network-Policy
Please ensure that the Computers Security Setting Account Password Policy is set to not allow passwords to be shorter than 14 characters.

Please enable the Computers Security Setting Local Policy for Auditing Policy Changes on both successes and failures.
    

Please enable the Computers Security Setting Local Policy Security Option to limit the amount of cached previous logons to 0.
    

Then make sure to apply and enforce the new GPO.

Make sure that after migrating the website to the production server that it is all accessible at www.daswebs.com.

DO NOT CHANGE ANY PASSWORDS</code></pre>
<p>(I used <a href="https://xkcd949.com">xkcd949.com</a> to send the file to a remote machine, since the Windows command line was not cooperative.)</p>
<p>And here are the checks:</p>
<p><img src="./writeups/nice-challenge-4/images/initialchecks.png" class="img-fluid"></p>
<section id="database" class="level1">
<h1>Database</h1>
<p>I need to start by importing the relevant database from <code>/ftp/wordpress.sql</code>, on the Debian 9 “Backup” machine, onto the database on the Windows “Database” machine</p>
<p>An easy way to do that is via the builtin <code>python3 -m http.server</code> command with <code>/ftp</code> as my working directory. I can then simply download the file from <code>172.16.30.79:8000/wordpress.sql</code> using the Firefox browser on windows.</p>
<p><img src="./writeups/nice-challenge-4/images/firefoxdownloads.png" class="img-fluid"></p>
<p>Then, I can simply <a href="https://www.digitalocean.com/community/tutorials/how-to-import-and-export-databases-in-mysql-or-mariadb#step-2-mdash-importing-a-mysql-or-mariadb-database">import an sql database using the mysql command line</a></p>
<p>I also need to <a href="https://www.digitalocean.com/community/tutorials/how-to-create-a-new-user-and-grant-permissions-in-mysql">create a user</a></p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1">mysql -u root</span>
<span id="cb2-2"></span>
<span id="cb2-3">CREATE DATABASE production_database;</span>
<span id="cb2-4"></span>
<span id="cb2-5">CREATE USER 'das_user'@'*' IDENTIFIED BY password 'das_password';</span>
<span id="cb2-6"></span>
<span id="cb2-7">GRANT ALL PRIVILEGES ON production_database.* TO 'das_user'@'*';</span>
<span id="cb2-8"></span>
<span id="cb2-9">exit</span></code></pre></div>
<p>And then in the normal shell:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb3-1">bash # this is important or else &lt; redirect will not work</span>
<span id="cb3-2"></span>
<span id="cb3-3">mysql -u root -p production_site &lt; C:\\Users\playerone.DASWEBS\Downloads\wordpress.sql</span></code></pre></div>
<p>However, despite all of this, the check still isn’t green.</p>
</section>
<section id="fileshare" class="level1">
<h1>Fileshare</h1>
<p>I was tasked with patching <a href="https://en.wikipedia.org/wiki/Shellshock_(software_bug)">Shellshock</a> this machine. “Fileshare” was a Debian 10 machine, which is still receiving <a href="https://endoflife.date/debian">minimal LTS support</a>, meaning all I have to do to patch this bug is to upgrade the packages.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb4-1"></span>
<span id="cb4-2">sudo apt update</span>
<span id="cb4-3"></span>
<span id="cb4-4">sudo apt upgrade</span></code></pre></div>
<p>This errored, it recommended running with <code>--fix-missing</code>, and so I did.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb5-1">sudo apt upgrade --fix-missing</span></code></pre></div>
<p>After this, the “Shellshock” check was green.</p>
</section>
<section id="domain-admin" class="level1">
<h1>Domain-Admin</h1>
<p>To change group policy on the Windows Domain Controller …</p>
</section>
<section id="firewall" class="level1">
<h1>Firewall</h1>
<p><a href="https://docs.netgate.com/pfsense/en/latest/usermanager/ldap.html">Here the docs on connecting pfsense to ldap</a></p>
</section>
<section id="prod-web" class="level1">
<h1>Prod-Web</h1>
<p>To install the “required web server software” (Apache), was simple</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb6-1">sudo yum install httpd</span></code></pre></div>
<p>However, the relevant check does not become green.</p>


</section>

 ]]></description>
  <category>linux</category>
  <category>_writeups</category>
  <guid>./writeups/nice-challenge-4/</guid>
  <pubDate>Sat, 20 Apr 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Free resources to learn various software things</title>
  <link>./guides/learn-linux/</link>
  <description><![CDATA[ 




<p>My browser bookmarks bar is massive. I basically bookworm anything interesting I come across, and now I have a lot of resources accumulated, and I think it’s worth it to write them down, although formatting is still a work in progress.</p>
<p>When not otherwise stated, the resource is related to Linux administration.</p>
<section id="linuxterminal-basics" class="level1">
<h1>Linux/Terminal Basics</h1>
<p><a href="https://linuxupskillchallenge.org/">Linux Up Skill Challenge</a></p>
<ul>
<li>This is definitely one of my favorites. They mention that they don’t have a free server for people to work with. However, some of the cloud providers offer 1 year’s worth of credit’s for a free server. Most notably, Oracle has an always free tier, which offers a very small server. I recommend this, because you don’t have to give up your credit/debit card information (dealing with cloud provider pricing can be… difficult), although Oracle has been known to randomly delete people on the “Truly Free” (no credit card) tier, to make room for paying customers.
<ul>
<li>Related: <a href="https://github.com/cloudcommunity/Cloud-Free-Tier-Comparison">Comparison of cloud provider free tiers</a></li>
</ul></li>
</ul>
<p><a href="https://overthewire.org/wargames/bandit/">OverTheWire Bandit</a></p>
<ul>
<li>OverTheWire Bandit is a bit different from the other resoures on this list. When I first used it, both personally and as a teaching tool, I was frustrated, because some of the commands it makes you use, will probably never show up in a real world usecase. I was frustrated with it’s “trickyness”, but I now realize the point of overthewire isn’t to teach commands, but to teach reading the manual. The answer to every challenge they give can be found in <a href="https://en.wikipedia.org/wiki/Man_page">manpages</a>, the built in Linux documentation.</li>
</ul>
<p><a href="https://linuxsurvival.com/linux-tutorial-introduction/">Linux Survival</a></p>
<p><a href="https://ryanstutorials.net/linuxtutorial/" class="uri">https://ryanstutorials.net/linuxtutorial/</a></p>
<p><a href="https://eng.libretexts.org/Bookshelves/Computer_Science/Operating_Systems/Linux_-_The_Penguin_Marches_On_(McClanahan)">Linux — The Penguin Marches On (Libretexts)</a></p>
<p><a href="https://help.ubuntu.com/community/UsingTheTerminal">Ubuntu’s Terminal Basics</a></p>
<section id="troubleshooting-servers" class="level2">
<h2 class="anchored" data-anchor-id="troubleshooting-servers">Troubleshooting servers</h2>
<p><a href="https://sadservers.com/">SadServers</a></p>
<ul>
<li>Interactive troubleshooting of broken Linux servers.</li>
</ul>
</section>
</section>
<section id="hacking" class="level1">
<h1>Hacking</h1>
<p><a href="https://www.isc2.org/landing/1MCC?utm_source=isc2&amp;utm_medium=textlink&amp;utm_campaign=GBL-CC-1M-DG&amp;utm_term=bundlepage&amp;utm_content=awareness">https://www.isc2.org/</a></p>
<p><a href="https://overthewire.org/wargames/">https://overthewire.org/wargames/</a></p>
<p><a href="https://www.cyberstartamerica.org/">https://www.cyberstartamerica.org/</a></p>
<p><a href="http://ctfs.github.io/resources/topics/web/http/README.html">http://ctfs.github.io/resources/topics/web/http/README.html</a></p>
<p><a href="https://hackgame.chaurocks.com/level6">https://hackgame.chaurocks.com/level6</a></p>
<p><a href="https://www.sandiego.gov/cyber-lab">https://www.sandiego.gov/cyber-lab</a></p>
<p><a href="https://www.picoctf.org/">https://www.picoctf.org/</a></p>
<p><a href="https://grow.google/intl/ALL_ca/certificates/cybersecurity/#?modal_active=none">https://grow.google/intl/ALL_ca/certificates/cybersecurity/#?modal_active=none</a></p>
<p><a href="https://exploit.education/protostar/">https://exploit.education/protostar/</a></p>
<p><a href="https://pwn.college/">https://pwn.college/</a></p>
<ul>
<li>This is the site for many cybersecurity courses at Arizona State University. They also have an assocaited <a href="https://www.twitch.tv/pwncollege">twitch stream</a>, where they stream classes as they happen.</li>
</ul>
<p><a href="https://www.cyber-fasttrack.org/">https://www.cyber-fasttrack.org/</a></p>
<p><a href="https://book.hacktricks.xyz/welcome/readme">https://book.hacktricks.xyz/welcome/readme</a></p>
</section>
<section id="nix" class="level1">
<h1>Nix</h1>
<p><a href="https://github.com/justinwoo/nix-shorts/" class="uri">https://github.com/justinwoo/nix-shorts/</a><br> <a href="https://nix.ug/" class="uri">https://nix.ug/</a><br> <a href="https://teu5us.github.io/nix-lib.html#nix-builtin-functions" class="uri">https://teu5us.github.io/nix-lib.html#nix-builtin-functions</a><br> <a href="https://nixos.org/manual/nix/stable/language/operators.html#has-attribute" class="uri">https://nixos.org/manual/nix/stable/language/operators.html#has-attribute</a><br> <a href="https://book.divnix.com/" class="uri">https://book.divnix.com/</a><br> <a href="https://ianthehenry.com/posts/how-to-learn-nix/" class="uri">https://ianthehenry.com/posts/how-to-learn-nix/</a><br> <a href="https://noogle.dev/" class="uri">https://noogle.dev/</a><br> <a href="https://nix-community.github.io/awesome-nix/#learning" class="uri">https://nix-community.github.io/awesome-nix/#learning</a><br> <a href="https://www.youtube.com/@jonringer117" class="uri">https://www.youtube.com/@jonringer117</a><br> <a href="https://summer.nixos.org/" class="uri">https://summer.nixos.org/</a><br> <a href="https://nix.camp/" class="uri">https://nix.camp/</a><br> <a href="https://nixlang.wiki/" class="uri">https://nixlang.wiki/</a></p>
<p>Below is stuff I don’t like as much:</p>
<p><a href="https://zero-to-nix.com/" class="uri">https://zero-to-nix.com/</a><br> <a href="https://nix.dev/" class="uri">https://nix.dev/</a><br> <a href="https://nixos.wiki/" class="uri">https://nixos.wiki/</a><br> <a href="https://nixos.org/guides/nix-pills/" class="uri">https://nixos.org/guides/nix-pills/</a><br></p>
</section>
<section id="devopsk8s" class="level1">
<h1>Devops/K8s</h1>
<p><a href="https://killercoda.com/" class="uri">https://killercoda.com/</a></p>
<ul>
<li>Interactive courses relating to a variety of topics, including Linux basics, Ansible, and Kubernetes. Requires login, although Github login can be used.</li>
</ul>
<p>devops</p>
<p><a href="https://nubenetes.com/" class="uri">https://nubenetes.com/</a></p>
<p>k8s</p>
<p>https://learnk8s.io/troubleshooting-deployments https://wellarchitectedlabs.com/security/</p>
<p><a href="https://sre.google/sre-book/table-of-contents/" class="uri">https://sre.google/sre-book/table-of-contents/</a>odma</p>
</section>
<section id="low-level-operating-system-programming" class="level1">
<h1>Low Level Operating System Programming</h1>
<p><a href="https://pages.cs.wisc.edu/~remzi/teaching/" class="uri">https://pages.cs.wisc.edu/~remzi/teaching/</a></p>
<p><a href="https://pages.cs.wisc.edu/~remzi/OSTEP/" class="uri">https://pages.cs.wisc.edu/~remzi/OSTEP/</a></p>
<p><a href="https://wiki.osdev.org/Expanded_Main_Page" class="uri">https://wiki.osdev.org/Expanded_Main_Page</a></p>
</section>
<section id="documentation-writing" class="level1">
<h1>Documentation (writing)</h1>
<p><a href="https://documentation.divio.com/">Divio Documentation System</a> — More about differences between the types of documentation; there’s actually 4 types.</p>
<ul>
<li>I really like this one to explain the differences between the four types of documentation: tutorial, how-to, reference, and explanation.</li>
</ul>
<p><a href="https://jamesg.blog/book.pdf">Software Technical Writings — A guidebook (pdf)</a> — nitty gritty technical writing details.</p>
</section>
<section id="teaching" class="level1">
<h1>Teaching</h1>
<p><a href="https://pages.gseis.ucla.edu/faculty/agre/how-to-help.html">How to help someone use a computer (1996)</a></p>
</section>
<section id="git" class="level1">
<h1>Git</h1>
<p><a href="https://shafiul.github.io/gitbook/index.html" class="uri">https://shafiul.github.io/gitbook/index.html</a></p>
<ul>
<li>Data structure oriented guide to git. It starts at explaining what an object is, rather than how the command line works. I like this guide of git more than many other guides I’ve seen, although it’s still missing things (yes, git does a snapshot of the repo’s state at every point, as seperate objects, but it deduplicates data between those objects).</li>
</ul>
</section>
<section id="college-courses-or-equivalent" class="level1">
<h1>College Courses or Equivalent:</h1>
<ul>
<li>https://github.com/ossu/computer-science</li>
<li>https://github.com/ForrestKnight/open-source-cs</li>
<li></li>
</ul>


</section>

 ]]></description>
  <category>linux</category>
  <category>_guides</category>
  <guid>./guides/learn-linux/</guid>
  <pubDate>Sat, 06 Apr 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Your very own site on GH pages</title>
  <link>./talks/self-site/</link>
  <description><![CDATA[ 




<p>For the Layer8 Cybersecurity club here at Cal State Northridge, and potentially more clubs, I will do a presentation on how I set up my site with Github pages, and how to set up your own site the same way.</p>
<p>This guide uses Github Actions to autodeploy, so all users need to do is commit from the web interface of Github, their site will automatically render changes.</p>
<p>Slides are <a href="../../talks/self-site/revealjs.html">linked here</a></p>
<p>Video is recorded, and I will have it clipped and uploaded soon™.</p>



 ]]></description>
  <category>_talks</category>
  <category>quarto</category>
  <guid>./talks/self-site/</guid>
  <pubDate>Mon, 25 Mar 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>My server part 4 — Kubernetes</title>
  <link>./projects/build-server-4/</link>
  <description><![CDATA[ 




<section id="why-the-switch" class="level1">
<h1>Why the switch?</h1>
<p>I was working on configuring rootless podman via ansible, but I had trouble because the tooling was incomplete. Ansible is a suboptiomal way to manage containers, and rootless podman can’t manage its own services.</p>
<p>For the whole journey, see the <a href="../build-server-3/#systemd-integration">previous post</a></p>
<p>So yeah. I’ve decided to switch to Kubernetes, because Kubernetes can manage it’s own services, and be rootless. The configuration-as-code landscape for Kubernetes, is much, much better than podman, and I will get many more options. For example, I can use <a href="">helm</a>, which is somewhat like a package manager for kubernetes, to install apps. Both Caddy and Authentik offer helm packages. Using the offered packages is probably less work than converting a docker compose to a podman container.</p>
</section>
<section id="rootless-kubernetes" class="level1">
<h1>Rootless (?) Kubernetes</h1>
<section id="user-namespaces" class="level2">
<h2 class="anchored" data-anchor-id="user-namespaces">User Namespaces</h2>
<p>Just like how Linux has “distributions”, or bundles of software that build on top of the Linux kernels, Kubernetes has distros. I want rootless Kubernetes,</p>
<p>I started by looking at <a href="https://k3s.io/">k3s</a>, the version of kubernetes I have experience with. However, there appear to be some <a href="https://docs.k3s.io/advanced#known-issues-with-rootless-mode">caveats with rootless mode</a>… including not being able to run a multi node cluster.</p>
<p>There is an article related to Kubernetes rootless containers: <a href="https://rootlesscontaine.rs/getting-started/kubernetes/" class="uri">https://rootlesscontaine.rs/getting-started/kubernetes/</a></p>
<p>And what I see is… not promising. I don’t really desire to do run <code>kind</code> or <code>minikube</code>, because they are stripped down compared to more feature-full Kubernetes distros like <code>k3s</code></p>
<p>Minikube, from that list above, is promising, but it is designed for development/testing, and <a href="https://github.com/kubernetes/minikube/issues/94">doesn’t support a multi-machine multi node setup</a></p>
<p>Kind has a similar usecase, and limitation. Despite how easy it is to do rootless on them, that makes them unsuitable for me.</p>
<p>Okay, I seem to have misunderstood what &lt;rootlesscontaine.rs&gt; want, as compared to what I want. That site documents how to run all the kubernetes components, as rootless using a user namespace. What I want, is using user namespaces to isolate pods.</p>
<p>Kubernetes seems to support this natively: <a href="https://kubernetes.io/docs/tasks/configure-pod-container/user-namespaces/" class="uri">https://kubernetes.io/docs/tasks/configure-pod-container/user-namespaces/</a></p>
<p>To enable user namespaces, all you need to do is set <code>hostUsers: false</code> in your kubernetes yaml… except, how can I override this for an existing helm chart?</p>
</section>
<section id="package-managerhelm" class="level2">
<h2 class="anchored" data-anchor-id="package-managerhelm">Package Manager/Helm</h2>
<p>Helm is very nice. However, from what I’ve heard, it is difficult to modify repackaged charts. This is especially concerning to me, because I intend to run all of my containers within user namespaces, and many helm charts don’t provide this. In order to run prepackaged apps in user namespaces, I need to modify existing helm charts.</p>
<p><a href="https://helm.sh/docs/intro/using_helm/#customizing-the-chart-before-installing" class="uri">https://helm.sh/docs/intro/using_helm/#customizing-the-chart-before-installing</a></p>
<p>Helm has docs on customizing the chart before installing.</p>
<p>There exist some package repositores (similar to dockerhub) for helm:</p>
<ul>
<li><a href="https://artifacthub.io/" class="uri">https://artifacthub.io/</a>
<ul>
<li>Helm charts, package</li>
</ul></li>
<li><a href="https://operatorhub.io/" class="uri">https://operatorhub.io/</a>
<ul>
<li>Not helm, rather kubernetes yaml managed by a lifecycle manager</li>
<li>Packages “operators”, like this <a href="https://operatorhub.io/operator/rook-ceph">rook/ceph</a></li>
<li>Appeals to me less than artifacthub</li>
</ul></li>
</ul>
</section>
<section id="kubernetes-distro" class="level2">
<h2 class="anchored" data-anchor-id="kubernetes-distro">Kubernetes Distro</h2>
<p>Here is a <a href="https://landscape.cncf.io/?group=certified-partners-and-providers">list on the CNCF website</a></p>
<p>I see three main options available to me:</p>
<ul>
<li><a href="https://kubespray.io/#/">Kubespray</a> (ansible)</li>
<li><a href="https://k3s.io/">K3s</a>&gt;</li>
<li><a href="https://docs.rke2.io/">RKE2</a></li>
<li>k0s
<ul>
<li><a href="https://docs.k0sproject.io/stable/examples/ansible-playbook/">Has an ansible playbook</a></li>
</ul></li>
<li><a href="https://kurl.sh/">kurl</a>
<ul>
<li>Custom kubernetes installer, including things like storage</li>
<li>Supports rook, but I don’t know if it is rook + ceph</li>
<li>doesn’t seem to have anywhere near as much activity as I expect it to have… no CI/CD, Longhorn is deprecated</li>
</ul></li>
<li><a href="https://github.com/darxkies/k8s-tew">Kubernetes the Easier Way</a>
<ul>
<li>Comes with a <a href="https://darxkies.github.io/k8s-tew/_build/html/features.html">plethora of features</a>
<ul>
<li>including nginx + letsencrypt, helm, ceph, metallb, prometheus/grafana</li>
<li>Very appealing, many features</li>
</ul></li>
</ul></li>
</ul>
<p>I don’t really want to opt for manual installation, or anything that’s too complex for too little gains.</p>
<p>Kubespray appeals to me since it’s ansible, and it would be cool to manage the kubernetes cluster installation and the services from the same spot — but it got ruled out:</p>
<p>From <a href="https://github.com/kubernetes-sigs/kubespray?tab=readme-ov-file#container-runtime-notes">the README</a></p>
<blockquote class="blockquote">
<p>Supported Docker versions are 18.09, 19.03, 20.10, 23.0 and 24.0. The recommended Docker version is 24.0. Kubelet might break on docker’s non-standard version numbering (it no longer uses semantic versioning). To ensure auto-updates don’t break your cluster look into e.g.&nbsp;the YUM versionlock plugin or apt pin</p>
</blockquote>
<p>It seems as kubespray deploys kubernetes by installing docker, and then deploying kubespray in docker. Although this is a neat decision, I cannot use docker at all, becuause I intend to deploy openstack using <a href="https://docs.openstack.org/kolla-ansible/latest/">kolla-ansible</a>, which also uses docker. From my testing, the openstack deployment completely destroys docker’s networking, so I probably can’t use both at once.</p>
<p>In addition to that, kubespray completely <a href="https://github.com/search?q=repo%3Akubernetes-sigs%2Fkubespray%20%22podman%22&amp;type=code">uninstalls podman</a>, meaning I can’t use podman as a provider for kubespray either.</p>
<p>I found an <a href="https://github.com/rancherfederal/rke2-ansible">ansible role</a> to deploy RKE2, but it seems that it just deploys vanilla RKE2, with none of the goodies that I am searching for like a load balancer or external storage.</p>
<p>I also found something similer for <a href="https://github.com/k3s-io/k3s-ansible">k3s, an ansible role</a> to deploy a “vanilla” kubernetes cluster. However, at the bottom, they mention <a href="https://github.com/k3s-io/k3s-ansible?tab=readme-ov-file#need-more-features">some other ansible roles</a> to deploy a more than vanilla k3s cluster.</p>
<p>I found a <a href="https://www.reddit.com/r/kubernetes/comments/1c09jfz/i_opensourced_today_my_fully_automated_k3s/">reddit post</a> where someone open sourced their own <a href="https://github.com/axivo/k3s-cluster">ansible playbook</a> — Only 22 days ago (as of the time of writing this), and it’s quite comprehensive. It comes with Argocd, Cilium, Longhorn, Prometheus, Cloudfare Let’s Encrypt certificates with cert-manager, and more.</p>
<p>I looks very appealing to me, despite the fact that it seems to be opinionated, and designed for personal use. In addition to that, they are simply using ansible’s helm modules to deploy stuff — what would be different from me doing that, with my own deployment choices?</p>
</section>
<section id="distributed-storage" class="level2">
<h2 class="anchored" data-anchor-id="distributed-storage">Distributed (?) Storage</h2>
<p>Eventually, I do plan to scale up, and that requires a distributed storage solution. I see two main options:</p>
<ul>
<li>Ceph</li>
<li>Longhorn (SUSE)
<ul>
<li><a href="https://artifacthub.io/packages/helm/longhorn/longhorn">Artifacthub</a></li>
</ul></li>
<li><a href="https://artifacthub.io/packages/helm/seaweedfs-csi-driver/seaweedfs-csi-driver">SeaweedFS</a></li>
<li><a href="https://github.com/kadalu/kadalu">Kadalu (GlusterFS)</a>
<ul>
<li>Helm chart?</li>
</ul></li>
<li><a href="https://github.com/rancher/local-path-provisioner">local-path-provisioner</a> (SUSE)
<ul>
<li>An enhancement to Kubernete’s builtin ability to handle local storage paths, by SUSE</li>
<li>maybe this is optimal, since I have just a one node cluster?</li>
</ul></li>
</ul>
<p>Longhorn appeals to me, because if I choose to use other Suse products like rancher, then they probably integrate.</p>
<p>But now, I’ve chosen to opt for FluxCD to manage my cluster rather than Longhorn. Because of this, I will probably opt for Ceph.</p>
<p>I see a few options to deploy Ceph:</p>
<ul>
<li><a href="https://artifacthub.io/packages/helm/rook/rook-ceph" class="uri">https://artifacthub.io/packages/helm/rook/rook-ceph</a>
<ul>
<li>Has a <a href="https://artifacthub.io/packages/helm/rook/rook-ceph?modal=security-report&amp;section=vulnerabilities&amp;image=rook%2Fceph%3Av1.14.3&amp;target=Python">severe security vulnerability reported</a>, but is it really that bad?</li>
</ul></li>
<li>CSI (link later)</li>
</ul>
<p>I don’t understand what a CSI is and how it compares to the Rook ceph operator.</p>
<p>However, it seems I’m running into another issue: It’s <a href="https://www.reddit.com/r/kubernetes/comments/hyvclw/how_to_run_rookceph_on_one_node/">difficult to run rook-ceph</a> on a single node. There are also other complaints about performance with ceph — the big complaint is that ceph uses up a lot of CPU relative to other distributed storage, but I wasn’t worrying about that. However, I’ve seen multiple claims that ceph requires high end hardware — SSD’s, which I don’t have. (Right now I have just one hard drive).</p>
<p><a href="https://github.com/longhorn/longhorn/discussions/5737">Longhorn has a similar issue</a> — at least it seems usable on only one node, but the recommendation is to have at least 3 nodes.</p>
<p>Local-path-provisioner is probably what I’m going to use, because I think it is built into k3s (and by extension, RKE2), by default.</p>
</section>
<section id="gitops-software" class="level2">
<h2 class="anchored" data-anchor-id="gitops-software">Gitops Software</h2>
<p><a href="https://en.wikipedia.org/wiki/DevOps#GitOps">Gitops</a> is a principle of software deployment, where the deployment infrastructure, services, and configuration, are stored in git — hence the name, Git Operations.</p>
<p>There are several ways to do Gitops on Kubernetes, but the core challenge I am encountering, is that some Gitops software must be deployed to Kubernetes in order to manage the cluster, but you cannot use that software to deploy itself.</p>
<p>What likely happens is that after you deploy the software to the cluster, then it records itself and adds itself to the state, but I have to ensure this works properly.</p>
<p>Or maybe the GitOps software stays outside the configuration, eternally untracked, but still self updating?</p>
<p>I still haven’t selected a GitOps software, but I am looking at:</p>
<ul>
<li>ArgoCD</li>
<li>FluxCD
<ul>
<li><a href="https://fluxcd.io/flux/get-started/">Simple enough to bootsrap</a></li>
<li>bootstraps itself from Github repo</li>
</ul></li>
<li>Fleet (made by SUSE, just like k3s, RKE2, rancher, and longhorn)</li>
</ul>
<p>After thinking about it, I can’t find a way to deploy a cluster and the CI/CD software at once, in such a way that it provisions itself. Many deployment methods simply abstract deploying the CI/CD software afterwards.</p>
<p>It’s probably best to not rely on abstractions since this is my first time really deploying Kubernetes, instead, I will just have to accept that the Kubernetes deployment will not be stored as code.</p>
<p>I found something interesting:</p>
<ul>
<li><a href="https://github.com/farcaller/nixhelm" class="uri">https://github.com/farcaller/nixhelm</a></li>
<li><a href="https://github.com/farcaller/nixdockertag" class="uri">https://github.com/farcaller/nixdockertag</a></li>
</ul>
<p>Mentioned in a Lemmy comment, it takes helm charts, and is able to convert them to a format that can be consumed by ArgoCD, using Nix.</p>
<p>Okay, but after more research, I’ve settled on Flux. It seems very easy to bootstrap, and to use <a href="https://fluxcd.io/flux/guides/helmreleases/">helm charts</a> with it. I don’t really need a GUI or multitenancy like ArgoCD provides, or the integrations that Fleet (probably) provides.</p>
<p>Flux seems “lightweight”. It reads from a Git repo, and applies and reconciles state. In addition to that, it can bootstrap itself. Although, I think I will end up running into a funny catch-22 when I decide to move away from github to a self hosted forgejo, on the kubernetes cluster, everything will be fine… probably.</p>
<p>Maybe I could have a seperate git server, and that stores the Kubernetes state? Flux seems to support <a href="https://fluxcd.io/flux/cmd/flux_bootstrap_git/">bootstrapping from any git repo</a>.</p>
<p>A few recommendations on the internet seem to suggest that I should have bootstrap flux from something external to the cluster, rather than from inside the cluster.</p>
</section>
<section id="misc-addonsdeployment" class="level2">
<h2 class="anchored" data-anchor-id="misc-addonsdeployment">Misc Addons/Deployment</h2>
<ul>
<li><p>Monitoring: <a href="https://artifacthub.io/packages/helm/prometheus-community/kube-prometheus-stack?modal=install">kube-prometheus-helm-stack</a></p></li>
<li><p>Secrets:</p>
<ul>
<li>: <a href="https://github.com/getsops/sops" class="uri">https://github.com/getsops/sops</a>
<ul>
<li>Basically ansible vault, very appealing</li>
</ul></li>
<li>: <a href="https://external-secrets.io/latest/" class="uri">https://external-secrets.io/latest/</a>
<ul>
<li>Seems catch-22y, I need an existing external service to manage secrets… but I suppose it is called external secrets</li>
</ul></li>
</ul></li>
<li><p>Ingress</p>
<ul>
<li>Nginx ingress… but how do I get SSL with this setup?</li>
<li>Traefik ingress (has <a href="https://www.eff.org/deeplinks/2024/03/should-caddy-and-traefik-replace-certbot">automatic https</a>)</li>
<li>Caddy: <a href="https://github.com/caddyserver/ingress" class="uri">https://github.com/caddyserver/ingress</a> — WIP software…</li>
</ul></li>
</ul>
<p>I need a simple git ssh for bootstrapping flux from.</p>
<ul>
<li><a href="https://github.com/chrisnharvey/simple-git-server" class="uri">https://github.com/chrisnharvey/simple-git-server</a>
<ul>
<li>Seems unmaintained</li>
</ul></li>
<li>Apparently you can just use ssh as a git server</li>
</ul>
</section>
</section>
<section id="services" class="level1">
<h1>Services</h1>
<section id="authentik" class="level2">
<h2 class="anchored" data-anchor-id="authentik">Authentik</h2>
<p>Authentik provides <a href="https://docs.goauthentik.io/docs/installation/kubernetes">documentation on a Kubernetes deployment</a>, along with a Helm chart.</p>
</section>
<section id="forgejo" class="level2">
<h2 class="anchored" data-anchor-id="forgejo">Forgejo</h2>
<p>Forgejo has a helm chart: <a href="https://codeberg.org/forgejo-contrib/forgejo-helm" class="uri">https://codeberg.org/forgejo-contrib/forgejo-helm</a></p>
<p>Unlike authentik, forgejo’s helm chart also seems to have some <a href="https://codeberg.org/forgejo-contrib/forgejo-helm#rootless-defaults">support for rootless/user namespaces</a>.</p>
<p>I also want static sites, and here are some of the options I’ve found:</p>
<ul>
<li><a href="https://git.gay/gitgay/pages-server" class="uri">https://git.gay/gitgay/pages-server</a></li>
<li><a href="https://forgejo.org/docs/latest/developer/static-pages/" class="uri">https://forgejo.org/docs/latest/developer/static-pages/</a></li>
</ul>
</section>
<section id="nextcloud" class="level2">
<h2 class="anchored" data-anchor-id="nextcloud">Nextcloud</h2>
<p>There is an existing <a href="https://nextcloud.github.io/helm/">helm chart for nextcloud</a>: <a href="https://github.com/nextcloud/helm" class="uri">https://github.com/nextcloud/helm</a></p>
<p>However, it says in the above, that it is community maintained, and not truly official.</p>
<p>Going to the <a href="https://portal.nextcloud.com/article/Scalability/Deployment-recommendations/Large-Organizations-and-Service-Providers">nextcloud official docs for larger scale deployment recommendations</a>… and it’s paywalled. It’s likely that Nextcloud maintains official helm charts — but only for paying customers.</p>
<p>Someone had an issue with nextcloud configurations on helm, and I asked them for the problem and solution, and they <a href="https://programming.dev/comment/9714618">replied to my post</a>.</p>
</section>
</section>
<section id="networking" class="level1">
<h1>Networking</h1>
<p>Yup. After spending the majority of my time setting up networking on my previous iteration of this plan, it’s time to do exactly that, <em>again</em>.</p>
<p>My original plan was to host some components of openstack on a VPS, allowing my server to give any virtual machines public ipv6 addresses despite being firewalled and behind the NAT of Cal State Northridge’s internet… except there is no NAT. Or firewall. In fact, if I set up bridging, I can give virtual machines more than one public ipv4 address without going through any of that hassle. So my plans have changed.</p>
<p>However, some questions come in to play that need to be answered, that I need to think about:</p>
<ul>
<li>Multi node kubernetes: The dream is to have some form of high availability, where any two machines can fail, and my setup stays up (high availability usually requires 3 machines).</li>
<li>Can I deploy openstack parallel to kubernetes?</li>
<li>Should my router go in front of, or behind my server?</li>
</ul>
<p>I would like to forgo the router entirely, as it reduces complexity. However, the router is useful because it can provide ethernet to my laptop, which is faster than the CSUN wifi, especially when it gets congested.</p>
<p>I am thinking of putting the router in front of my server, and configuring bridged networking, to allow my server to access the CSUN network directly, through both it’s ethernet ports. However, I do fear a speed bottleneck — when attempting to test CSUN’s ethernet speeds, I discovered that my laptop’s ethernet port only supported 100 mbps, meaning even though the cable supported higher speeds, and the ethernet port potentially supported higher speeds, there was a cap. I need to research</p>
<p>Another potential setup is for the server to be in front, with the router connected to it’s secondary NIC/ethernet port. I could use the special bridging setup I have discovered where the primary ethernet port is both a bridge and a normal network interface, and then I could add the secondary ethernet port as a virtual port to the bridge. I would then create a second bridge, and add it to the first bridge, and openstack would use that bridge as it’s bridge for virtual machines.</p>
<p>I’ve decided on the second. Although, there is another bottleneck in place, the NIC on my server itself. Although my router has all 1000 Mb/s ports, both NIC of my servers are capped at 100mb/s. I need to buy a PCI ethernet card (preferably with two ethernet ports).</p>
<p>Options:</p>
<ul>
<li>https://www.amazon.com/Dual-Port-Gigabit-Network-Express-Ethernet/dp/B09D3JL14S</li>
</ul>
<p>The other thing I need to get working with is dynamic dns. Since CSUN’s ethernet works via DHCP, I’m not guaranteed the same ip address between reboots or other network configuration changes. I am using porkbun as my DNS provider, and I am searching for some options for that.</p>
<ul>
<li>https://hub.docker.com/r/qmcgaw/ddns-updater/
<ul>
<li>Comes with kubernetes manifests, but look too complex for now</li>
<li>minor issue with root domain of subdomains <a href="https://www.reddit.com/r/homelab/comments/137y1v9/dynamic_dns_with_porkbun/kegh2xy/">something needs to be “@”</a></li>
</ul></li>
</ul>
<p>It works great, although I had trouble testing it up because I was on my phone’s hotspot, which only gives me an ipv6 address.</p>
<p>After I get Dynamic dns working, I decided to set up bridging, since my server will sit in front of my router, or my computer having an ethernet port.</p>
<p>I followed my documented steps on <a href="../build-server-2/">build server part 2</a> (the section about bridging and veth).</p>
<p>Except, I did not set up a veth just yet. I don’t need it.</p>
</section>
<section id="kubernetes-installation-and-setup" class="level1">
<h1>Kubernetes Installation and Setup</h1>
<p>The first thing is to <a href="https://docs.rke2.io/known_issues#networkmanager">configure NetworkManager to ignore CNI managed interfaces</a>, otherwise issues will occur.</p>
<p>I followed the <a href="https://docs.rke2.io/install/quickstart">quick start</a> install guide. I started with the server, however, that only installs the server components, and not the agent components of rke2.</p>
<p>I also followed the agent guide, in an attempt to get a single node install. That was a bad idea — I think the server also is capable of acting as an agent in a single node install?</p>
<p>However, nothing starts properly. The RKE2 server service crashes, and I need to investigate why. I suspect it is because kubernete’s virtual networking is unable to properly interact with my special bridged networking setup, and this results in crashes… but the logs don’t seem to say anything relevant.</p>
<p>After a reinstall, it seems to work? (I think I figured out what caused it: I forgot to edit the NetworkManager.conf file). And looking at <a href="https://blog.alphabravo.io/posts/2021/single-node-rke2-pt1/">this guide</a>, it seems that the server components also come with the agent components, as shown by how they deploy rancher (a workload) on just the server.</p>
<p>I mostly ignored the steps, except copying <code>/etc/rancher/rke2/rke2.yaml</code> to <code>~/.kube/config</code>, and I also chowned the config file as my user. This way I could manage kubernetes as a regular user, rather than only as root.</p>
<p>I tried installing kubectl to my user using nix at first, but kubectl complained that if the version was two major releases away, it could cause issues. So insetad, I installing kubectl from a specific nixpkgs revision:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb1-1">moonpie@thoth:~$ nix profile install nixpkgs/10b813040df67c4039086db0f6eaf65c536886c6#kubectl</span>
<span id="cb1-2">moonpie@thoth:~$ kubectl version</span>
<span id="cb1-3">Client Version: v1.28.4</span>
<span id="cb1-4">Kustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3</span>
<span id="cb1-5">Server Version: v1.28.10+rke2r1</span></code></pre></div>
<p>Now… Fluxcd deployment is next.</p>
<p>I installed fluxcd using nix.</p>
<p><code>nix profile install nixpkgs#fluxcd</code></p>
<p>Before I installed fluxcd however, I decided to <a href="https://docs.rke2.io/networking/networking_services?_highlight=nginx/networking/networking_services#nginx-ingress-controller">disable the nginx ingress controller</a>. I did this because I intend to deploy traefik or something else as my ingress controller with flux.</p>
<p>It seems the RKE2 <a href="https://docs.rke2.io/install/configuration">configuration file</a> needs to be created manually. After creating that file, adding <code>disable: rke2-ingress-nginx</code> to it, and restarting the server service, the nginx controller is disabled.</p>
<p>Now, for the flux install. Since I don’t want to use github, I decided to just use ssh as a git server.</p>
<p>Following the guide for flux <a href="https://fluxcd.io/flux/installation/bootstrap/generic-git-server/#ssh-private-key">bootstrapping with git</a>:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1">flux bootstrap git --url ssh://moonpie@moonpiedumpl.ing/home/moonpie/fleet-charts --private-key-file=/home/moonpie/.ssh/moonstack --path=cluster/my-cluster</span></code></pre></div>
<p>And it starts working immediately… except when I clone the git repo from the server, it’s empty‽ At least it has a branch, “master”, but this branch has no commits or anything to start from. I’m attempting to follow the rest of the <a href="https://fluxcd.io/flux/get-started">bootstrapping guide</a>, so I create a directory, “cluster/my-cluster” in the git repo and put the first chart in it. Nothing happens. I think I screwed up somewhere, so I decide to uninstall flux and start over again.</p>
</section>
<section id="presearch-and-notes-for-future-pieces" class="level1">
<h1>Presearch and Notes for Future Pieces</h1>
<section id="openstack" class="level2">
<h2 class="anchored" data-anchor-id="openstack">Openstack</h2>
<p>Since I am using Kubernetes to deploy services, it is worth investing if I can deploy Openstack (or some other self-hosted cloud) on Kubernetes.</p>
<ul>
<li><a href="https://yaook.cloud/">Yaook</a></li>
<li><a href="https://github.com/vexxhost/atmosphere">Atmosphere</a></li>
</ul>
<p>These look appealing, but very hard to deploy.</p>
</section>
<section id="kubernetes" class="level2">
<h2 class="anchored" data-anchor-id="kubernetes">Kubernetes</h2>
</section>
<section id="misc" class="level2">
<h2 class="anchored" data-anchor-id="misc">Misc</h2>
<p><a href="https://editor.networkpolicy.io/">Graphical network policy editor</a></p>
<p><a href="https://k8syaml.com/">Semi graphical yaml editor</a></p>
<section id="multi-tenancy" class="level3">
<h3 class="anchored" data-anchor-id="multi-tenancy">Multi-Tenancy</h3>
<p>In case I can’t obtain multi-tenancy by openstack provisioning kuberntes, there are some alternative solutions I am looking at:</p>
<ul>
<li>vcluster</li>
<li><a href="https://github.com/projectcapsule/capsule">capsule</a></li>
<li><a href="https://github.com/clastix/kamaji">kamaji</a></li>
</ul>


</section>
</section>
</section>

 ]]></description>
  <category>linux</category>
  <category>_projects</category>
  <guid>./projects/build-server-4/</guid>
  <pubDate>Wed, 20 Mar 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>KDE 6 — New features</title>
  <link>./blog/kde-6/</link>
  <description><![CDATA[ 




<p>KDE 6 is released, and it comes with quite a few new features.</p>
<section id="smoothing-out-the-wayland-migration" class="level1">
<h1>Smoothing out the Wayland migration</h1>
<p>In addition to the other things mentioned, KDE 6 also comes with some new security and privacy features.</p>
<p><img src="./blog/kde-6/images/legacyx11apps.jpg" class="img-fluid"></p>
<p>KDE 6 now adds a new settings panel where users can configure if X11 apps can read global inputs.</p>
<p>For context, the Linux desktop used to be built on top of this software called <a href="https://en.wikipedia.org/wiki/X_Window_System">X11</a>. X11 worked, but it had some pretty severe flaws, the two main one’s being code rot, and security.</p>
<p>Code rot is self explanatory. X11 was first built in 1984. It’s been a while since it was made, and it has a lot of old code. The project is so big and complex, that it’s nearly impossible to add significant features to it.</p>
<p>The other problem is security. By default, X11 lets running apps have basically absolute control over the other graphical interface. They can “view” the whole screen, read all keypresses, and insert, or modify keypresses.</p>
<p><a href="https://en.wikipedia.org/wiki/Wayland_(protocol)">Wayland</a>, is the newer replacement, although it is technically just a protocol, a definition, as opposed to an actual piece of software. Different pieces of software choose to implement this protocol, with KDE being one of them.</p>
<p>One of the issues people have with Wayland, is that, by design, it doesn’t allow all apps to read everything on the screen. This breaks things like screen sharing, with native Discord (although sharing your screen to Discord running in Firefox works).</p>
<p>It also breaks push-to-talk on Discord, since that uses a global hotkey. The above setting allows users to temporarily restore that functionality, at the cost of desktop security. , since Discord hasn’t developed it for native wayland yet.</p>
<p>Another issue people have with Wayland is problems with Nvidia. Due to Nvidia’s insistence on proprietary drivers and their own standards, it’s been very difficult ot get Wayland support on Nvidia. However, KDE comes with some big changes as, I can finally use Nvidia + Wayland on my larger laptop!</p>
</section>
<section id="obs" class="level1">
<h1>OBS</h1>
<p>One features I’ve been waiting on, which I think will only end up coming in Wayland, is the ability to share some windows, but not all. I experimented with some of the new features of OBS, but they don’t do quite what I want.</p>
<p>For example, with OBS and pipewire, I noticed I can select multiple windows from the “Window Share” source:</p>
<p><img src="./blog/kde-6/images/obswindowsshare.jpg" class="img-fluid"></p>
<p>Except it doesn’t actually work. Instead, it just puts one of the windows on top, and none of the others.</p>
<p>I tried an alternative to this:</p>
<p><img src="./blog/kde-6/images/virtualoutput.jpg" class="img-fluid"></p>
<p>But it doesn’t do quite what I want. It creates a literal virtual monitor, including the ability to change settings to things like “unify outputs”, or “extend outputs”.</p>
<p>What I really want is the ability to share only a single <a href="https://kde.org/announcements/4/4.5.0/plasma/">kde workspace</a>.</p>
<p>OBS had an option to share a KDE plasma workspace, but it doesn’t work like what I want. Instead of just sharing a single workspace, it turns all monitors into a single input source. If I switch workspaces, then the screen video switches as well.</p>
</section>
<section id="drawing-tablets" class="level1">
<h1>Drawing Tablets</h1>
<p>KDE 6 finally makes support for drawing tablets first class. You can now configure drawing tablets directly from the settings menu.</p>
<p><img src="./blog/kde-6/images/drawingtablets.jpg" class="img-fluid"></p>
<p>So all the buttons, but also another, more important feature I need: mapping the drawing tablet to a smaller portion of the screen.</p>
<p>I typically take notes with <a href="https://xournalpp.github.io">xournal++</a>, but I struggle because my handwriting is large and sloppy, especially when I am trying to take notes more quickly. From my testing, this feature is amazing, since it makes it easier to write, and read what I’ve wrote afterwards.</p>
</section>
<section id="bugs" class="level1">
<h1>Bugs</h1>
<p>So far, I’ve encountered two crashes with KDE, after like a week of usage, which is pretty good from what I hear, compared to other people.</p>
<p>To recover from a crash, I just switch to a TTY, and/or use a terminal, and then run:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb1-1">systemctl --user restart plasma-plasmallshell</span></code></pre></div>
<p>This only works on systemd, however. Since Plasma-5.25, <a href="https://wiki.archlinux.org/title/KDE#systemd_startup">KDE consisting of systemd user services has been the default method</a></p>
<p>On non systemd distros, what I’ve heard works is:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1">killall plasmashell &amp;&amp; kstart5 plasmashell</span></code></pre></div>


</section>

 ]]></description>
  <category>linux</category>
  <category>_blog</category>
  <guid>./blog/kde-6/</guid>
  <pubDate>Wed, 13 Mar 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Experiments with Running python in the browser</title>
  <link>./playground/interactive-python-tutorial/</link>
  <description><![CDATA[ 
<script src="https://cdn.jsdelivr.net/npm/monaco-editor@0.46.0/min/vs/loader.js"></script>
<script type="module" id="qpyodide-monaco-editor-init">

  // Configure the Monaco Editor's loader
  require.config({
    paths: {
      'vs': 'https://cdn.jsdelivr.net/npm/monaco-editor@0.46.0/min/vs'
    }
  });
</script>




<section id="original" class="level1">
<h1>Original</h1>
<p>I started on this on 2023-5-22, and paused it since nothing interesting came out of it.</p>
<p>My goal is an in browser python editor I can embed into a blog. I want to create a sort of interactive python tutorial.</p>
<p>Code is ran client side, so don’t try to crash any server or anything like that.</p>
</section>
<section id="recent-updates" class="level1">
<h1>Recent updates</h1>
<p>There was a new quarto extension, enabling you to embed pyodide python code blocks in documents: https://github.com/coatless-quarto/pyodide</p>
<div id="qpyodide-insertion-location-1"></div>
<noscript>Please enable JavaScript to experience the dynamic code cell content on this page.</noscript>
<p>This works, but the blocks don’t show up properly. In addition to that, the input function doesn’t work.</p>
<p>But still, if I want to do a simple python tutorial, this would be pretty doable. In addition to that, I could also do block posts about other interesting things in python.</p>
</section>
<section id="older-work-below" class="level1 page-columns page-full">
<h1>Older work below</h1>
<p>This might not render, since many of it is raw html elements.</p>
<p>Lots of rot happened since I first played with this, and I disabled all of this stuff since it doesn’t load, and instead prevents the newer work from loading.</p>
<div class="col fragment" data-fragment-index="2" style="height: min(30vw, 60vh); margin: min(1vw, 2vh)">
                        <python-editor contenteditable="true" theme="dark" code="elements = [39,12,18,85,72,10,2,18]

print('Unsorted list is\n', elements)

# Sort the list (with bubblesort)
for n in range(len(elements)-1, 0, -1):
  for i in range(n):
    if elements[i] > elements[i+1]:
      elements[i], elements[i+1] = elements[i+1], elements[i]

print('\nSorted list is\n', elements)">
                    </python-editor></div>
<p>Awww, the input function doesn’t seem to work.</p>
<p>Shift + enter/return to evaluate code of the below.</p>
<py-repl></py-repl>
<p>This kinda works, but also has issues. Input fucntion still doesn’t work.</p>
<p>Shift + enter/return to evaluate below. Or double click.</p>
<pyprez-editor>
   import numpy as np
   np.random.rand(5)
</pyprez-editor>
<p>This is cool, but the code isn’t editable. It just resets itself for some reason.</p>
<p>Maybe this will work?</p>
<div class="column-body-outset">
<div id="livecodes-p6y2nroaetk" data-height="500">
  <span>Open the project <a href="https://livecodes.io/?x=id/sigh8eg62zv" target="_blank">Untitled Project</a> in <a href="https://livecodes.io/" target="_blank">LiveCodes</a></span>
</div>

<script src="https://livecodes.io/sdk/livecodes.umd.js"></script>
<script>
  const options = {
    appUrl: 'https://dev.livecodes.io/',
    params: {
      autoupdate: false,
      console: "full"
      },
    "config": {
      "tools": {
        "status": "full"
      }
    },
    "import": "id/sigh8eg62zv",
    "loading": "eager"
  };
  livecodes.createPlayground("#livecodes-p6y2nroaetk", options);
</script>
<div class="livecodes" style="height: 300px; border: 1px solid black; border-radius: 5px;" data-options="{appUrl: &quot;https://dev.livecodes.io/&quot;,params: {autoupdate: false, console: &quot;full&quot;},&quot;config&quot;:{&quot;activeEditor&quot;:&quot;script&quot;,&quot;tools&quot;:{&quot;status&quot;:&quot;full&quot;}},&quot;loading&quot;:&quot;eager&quot;}">
<pre data-lang="html"></pre>
<pre data-lang="css"></pre>
<pre data-lang="pyodide">yeet = input("test")

print(yeet)</pre>
</div>
<script defer="" src="https://livecodes.io/sdk/livecodes.umd.js" data-prefill=""></script>

</div>


</section>

 ]]></description>
  <category>python</category>
  <category>_playground</category>
  <guid>./playground/interactive-python-tutorial/</guid>
  <pubDate>Mon, 11 Mar 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Automatically provisioning VMs from OVAs</title>
  <link>./playground/ova-automation/</link>
  <description><![CDATA[ 




<section id="probably-wont-continue-this-moving-to-playground" class="level1">
<h1>Probably won’t continue this / Moving to Playground</h1>
<p>(see the “Goals and Context” section for more context)</p>
<p>Wasabi, head of black (operations and deployment) team sent out a message, after the first qualifiers:</p>
<p><img src="./playground/ova-automation/images/wasabi-message.jpeg" class="img-fluid"></p>
<blockquote class="blockquote">
<p>I can’t remember, but you guys only recently started playing I believe I had a conversation with other schools on this.. But there’s a huge separation from teams in terms of practice</p>
</blockquote>
<blockquote class="blockquote">
<p>So my recommendation to all the new teams and all the teams who struggled this year. Don’t use https://archive.wrccdc.org/images/ except as reference. Take our environment and topology and build it yourselves. Spend the time to learn and help each other learn how systems work and how to troubleshoot things. This will help you a ton. The teams in the top do this. If your one of the teams not making it forward please feel free to send me a message for advice and use Q&amp;A channel to get help from Ops / Red / White team for your off season. We are happy to help and excited to see you back next year!</p>
</blockquote>
<p>My original goal of this project was to be able to quickly recreate WRCCDC environments, so we could run mock competitions, since currently we were setting them up manually.</p>
<p>But even the 3 or 4 mocks we ran didn’t help us. Ater actually <em>doing</em> first real competition, I agree with Wasabi on this.</p>
<p>So I don’t think this project is worth continuing. It would be better having people recreating the competition environments, and really <em>using</em> Linux, Windows Server, and the various firewalls so we have an understanding of how they work.</p>
<p>So yeah. The work is still valuable, it just doesn’t get to stay in the “projects” section of my blog — the difference between “playground” and “projects” is not topics, but rather the commmitment I have to them. Projects I will see to either the end, or until I hit significant failure that I can’t overcome. The content in playground, I am free to give up on it at any point, for any reason, and because of that, many of the miniprojects in there are incomplete.</p>
</section>
<section id="goals-and-context" class="level1">
<h1>Goals and Context</h1>
<p>I am currently participating on the cybersercurity team of Cal State Northridge, for a competition called CCDC.</p>
<p>For more information:</p>
<p>Nationals: <a href="https://www.nationalccdc.org/" class="uri">https://www.nationalccdc.org/</a></p>
<p>And our region, the Western Region: <a href="https://wrccdc.org/" class="uri">https://wrccdc.org/</a></p>
<p>Essentially, we are asked given a bunch of really insecure virtual machines, and asked to secure and administrate them, while being attacked by red team.</p>
<p>Although Nationals does not post the old images they have used in the past, our region, does.</p>
<p>WRCCDC Archive: <a href="https://archive.wrccdc.org/" class="uri">https://archive.wrccdc.org/</a></p>
<p>Currently, our team is doing mock competitions by downloading these images, manually importing them into esxi, or proxmox, and then adjusting networking in each virtual machine, by hand.</p>
<p>This is unacceptable.</p>
<p>An easier way, is rather than manually changing networking configuration in each virtual machine, the virtual machine managers (proxmox and esxi, currently) could be configured to have the same network as the competition, removing the hassle of changing this.</p>
<p>In addition to that, manually importing virtual machines is also unacceptable.</p>
<p>With the existence of modern automation tools, like terraform, there must be a better way to do this.</p>
<p>Currently, I’m using vagrant to automate the upping of individual images, for testing. However, vagrant isn’t really ideal for this, because I would have to convert OVA files to “vagrant boxes” first, which don’t support every vagrant provider.</p>
<p>It would probably be better to import the images, and then use terraform to up it automatically. The advantage of this, to me, is that it is more provider agnostic. By seperating the pieces that handle the image management, and the pieces that handle control of the hypervisor platform, it’s easier to port things to new platforms.</p>
</section>
<section id="work" class="level1">
<h1>Work</h1>
<section id="proxmox" class="level2">
<h2 class="anchored" data-anchor-id="proxmox">Proxmox</h2>
<p>I’ve created a folder with a shell.nix and a Vagrantfile, in order to automate the creation of a proxmox virtual machine. It’s located inside this git repo, and by extension, <a href="./proxmox/">this static site</a>.</p>
<p>Docs to import OVA files on proxmox: <a href="https://pve.proxmox.com/wiki/Migration_of_servers_to_Proxmox_VE#Importing" class="uri">https://pve.proxmox.com/wiki/Migration_of_servers_to_Proxmox_VE#Importing</a></p>
<p>After some testing with that, <code>importovf</code> isn’t too good, because it imports the virtual machine metadata, without any of the actual data. So things we don’t really need to store, like how many vcpu’s or memory, or the network, but none of the actual disk data.</p>
<p>You have to run <code>qm importdisk</code> (an alias for <code>qm disk import</code>)</p>
<p>So after extracting the ova, you have to extract the vmdk (it’s gzipped), and then it would be something like:</p>
<p><code>qm importdisk numberhere image.vmdk --format qcow2|vmware</code></p>
<p>The manpage for qm says that –format specifies the target format, so I’m assuming it’s the format to convert to.</p>
</section>
<section id="lxdincus" class="level2">
<h2 class="anchored" data-anchor-id="lxdincus">LXD/Incus</h2>
<p>LXD is a “containervisor”, capable of managing both lxc containers and qemu-kvm virtual machinwees.</p>
<p>For this usecase, I only need it’s hypervisor management capibilities, but I also want to the automation capabilities that it may offer, since that seems to be an often criticized lacking feature of proxmox.</p>
<p>I also tried out incus. I put together <a href="./vms/provisioners/debincus.yml">an ansible playbook</a> to install incus on debian.</p>
<p>However, I am having trouble with their official web ui. Authentication is certificate based, so it asks for me to import a browser certificate… not fun.</p>
<p>I am going to collect and test multiple alternatives:</p>
<ul>
<li>Offical Canonical One</li>
<li><a href="https://lxdware.com/">LXDWare</a></li>
<li><a href="https://github.com/AdaptiveScale/lxdui" class="uri">https://github.com/AdaptiveScale/lxdui</a></li>
<li><a href="https://github.com/PenningLabs/lxconsole" class="uri">https://github.com/PenningLabs/lxconsole</a> still in beta, according to the readme</li>
</ul>
<p>I tried lxdware, but when I tried to add a remote, and connect it to the incus daemon, it I get an error “Remote host connection is not trusted”.</p>
<p>I do some investiagting.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb1-1">root@f6ded1cb73d7:/# incus remote add 192.168.121.103</span>
<span id="cb1-2">Generating a client certificate. This may take a minute...</span>
<span id="cb1-3">Certificate fingerprint: 7cf0d7d12fed498811e485d8dec4655012873876e9f45e15974cfdb9a8fd810a</span>
<span id="cb1-4">ok (y/n/[fingerprint])? y</span>
<span id="cb1-5">Trust token for 192.168.121.103: eyJjbGllbnRfbmFtZSI6ImluY3VzLXVpLTE5Mi4xNjguMTIxLjEwMy5jcnQiLCJmaW5nZXJwcmludCI6IjdjZjBkN2QxMmZlZDQ5ODgxMWU0ODVkOGRlYzQ2NTUwMTI4NzM4NzZlOWY0NWUxNTk3NGNmZGI5YThmZDgxMGEiLCJhZGRyZXNzZXMiOlsiMTkyLjE2OC4xMjEuMTAzOjg0NDMiXSwic2VjcmV0IjoiMjRjNWNjZjkzZTgzMTBmNGRlMzAwMTgyOTc0YWE4Nzg1MDAxMTkzZWQ3NTEyYTk0ZjlmZGRkZWQwMzBkNWJkZSIsImV4cGlyZXNfYXQiOiIwMDAxLTAxLTAxVDAwOjAwOjAwWiJ9</span>
<span id="cb1-6">Client certificate now trusted by server: 192.168.121.103</span></code></pre></div>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1">root@d90da14b48e9:/# lxc remote add 192.168.121.103</span>
<span id="cb2-2">Admin password (or token) for 192.168.121.103:</span>
<span id="cb2-3">Error: not authorized</span></code></pre></div>
<p>In short, it seems like the api is not compatible, since using the lxc client fails, but the incus client succeeds.</p>
<p>Luckily, I got incus working. In addition to the normal steps, I had to run <a href="https://discuss.linuxcontainers.org/t/incus-ui-install-error-using-token-not-authorized/18822/2"><code>incus config trust add-certificate certficatefile.crt</code></a></p>
<p>Testing, I was able to download a debian image, and put it up.</p>
<p>Incus looks very promising, because it also comes with a <a href="https://registry.terraform.io/providers/lxc/incus/latest/docs/resources/instance">terraform provider</a></p>
<p>Incus also provides docs on <a href="https://linuxcontainers.org/incus/docs/main/howto/server_migrate_lxd/">migrating machines</a> (<a href="https://documentation.ubuntu.com/lxd/en/latest/migration/">canonical lxd version</a>)</p>
<p>On that page, it recommends using virt-v2v, which has support for importing from <a href="https://libguestfs.org/virt-v2v-input-vmware.1.html">vmware ova’s</a></p>
<p>(It seems it requires a newer version of <a href="https://libguestfs.org/virt-v2v.1.html">virt-v2v</a>, and <a href="https://github.com/rwmjones/rhsrvany">rhsrvany</a>, which only debian sid and ubuntu 23 package both right now.)</p>
<p>Once you use that tool, you can use incus-migrate to interactively or programmaticly import the raw disk images as incus images.</p>
<p>So that’s pretty promising. But what about networking? For a replica of the competition environment, we will need to have firewalls (vyos, pfsense, etc) and to my understanding, that is essentially having a virtual machine act as a bridge. How can I do that on LXD/Incus?</p>
<p>It seems to be possible. Here are some guides I found:</p>
<p><a href="https://www.cloudwizard.nl/build-your-own-windows-cloud-with-lxd/" class="uri">https://www.cloudwizard.nl/build-your-own-windows-cloud-with-lxd/</a></p>
<p><a href="https://forum.netgate.com/topic/154906/how-to-install-pfsense-on-lxc-vm-qemu" class="uri">https://forum.netgate.com/topic/154906/how-to-install-pfsense-on-lxc-vm-qemu</a></p>


</section>
</section>

 ]]></description>
  <category>linux</category>
  <category>_playground</category>
  <guid>./playground/ova-automation/</guid>
  <pubDate>Tue, 20 Feb 2024 08:00:00 GMT</pubDate>
</item>
<item>
  <title>Nice Challenge 3</title>
  <dc:creator>Jeffrey Fonseca</dc:creator>
  <link>./writeups/nice-challenge-3/</link>
  <description><![CDATA[ 




<p>This is for the <a href="https://nice-challenge.com/">NICE</a> challenge. This challenge was significantly harder than the previous challenges, involving being attacked in realtime, and having to write up incident response reports — and if you were too slow, you didn’t get the points.</p>
<p>This challenge involves doing an incident response, after an active cyberattack.</p>
<p>After some investigation, I find out that they have <a href="https://en.wikipedia.org/wiki/Snort_%28software%29">snort</a> set up on their pfsense firewall:</p>
<p>This is my first time using snort, so everything below was figured out by web searches and browsing around the snort interface.</p>
<p>However, it did not have any rules enabled by default. I checked a few boxes, and then clicked save to download the rules. After, that, I had to go to <code>Snort &gt; Updates</code>, and explicitly tell it to update the ruleset.</p>
<p>In addition to that, snort did not have any interfaces added. I added all interfaces I thought would be relevant, WAN, PROD, SUBSCRN, and USRCRN, and started them:</p>
<p><img src="./writeups/nice-challenge-3/images/snortinterfaces.jpeg" class="img-fluid"></p>
<p>On the machines <code>Joomia</code> (Debian 9), which hosts the production server, and <code>Fileshare</code> (Ubuntu 16.04.3), I installed apache2 modsecurity, which is a simple web application firewall.</p>
<p><code>sudo apt install libapache2-modsecurity</code></p>
<p><code>sudo cp /etc/modsecurity/modsecurity.conf-recommended /etc/modsecurity.conf</code></p>
<p><code>sudo systemctl restart apache2</code></p>
<section id="the-attacks" class="level1">
<h1>The Attacks</h1>
<p><img src="./writeups/nice-challenge-3/images/blocked.jpeg" class="img-fluid"></p>
<p>I made a mistake, and did not look at the options for packet capturing. I realized after the fact that pfsense/snort does not capture the relevant packets to inspect them by default.</p>
<p>That traffic probably isn’t malicious, given how I did not receive any checks or failures for the 2 reports I submitted, but rather, only for the later traffic.</p>
</section>
<section id="nmap-scan" class="level1">
<h1>Nmap scan</h1>
<p>On the other hand, there was a nmap scan, from <code>172.31.2.12</code> at the Prod-Joomia (172.16.10.100)</p>
<details>
<summary>
Show Log
</summary>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb1-1">[Wed Feb 14 02:30:07.709171 2024] [:error] [pid 1507] [client 172.31.2.12:34403] [client 172.31.2.12] ModSecurity: Warning. Matched phrase "nmap scripting engine" at REQUEST_HEADERS:User-Agent. [file "/usr/share/modsecurity-crs/rules/REQUEST-913-SCANNER-DETECTION.conf"] [line "59"] [id "913100"] [rev "2"] [msg "Found User-Agent associated with security scanner"] [data "Matched Data: nmap scripting engine found within REQUEST_HEADERS:User-Agent: Mozilla/5.0 (compatible; Nmap Scripting Engine; http://nmap.org/book/nse.html)"] [severity "CRITICAL"] [ver "OWASP_CRS/3.0.0"] [maturity "9"] [accuracy "9"] [tag "application-multi"] [tag "language-multi"] [tag "platform-multi"] [tag "attack-reputation-scanner"] [tag "OWASP_CRS/AUTOMATION/SECURITY_SCANNER"] [tag "WASCTC/WASC-21"] [tag "OWASP_TOP_10/A7"] [tag "PCI/6.5.10"] [hostname "172.31.2.2"] [uri "/"] [unique_id "Zcwlr38AAQEAAAXjvToAAAAA"]</span></code></pre></div>
</details>
<p>However, I was too late in reporting this one, and this check was reported as late.</p>
</section>
<section id="sshd-brute-force" class="level1">
<h1>SSHD brute force</h1>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1">● ssh.service - OpenBSD Secure Shell server</span>
<span id="cb2-2">   Loaded: loaded (/lib/systemd/system/ssh.service; enabled; vendor preset: enabled)</span>
<span id="cb2-3">   Active: active (running) since Wed 2024-02-14 01:39:16 UTC; 1h 28min ago</span>
<span id="cb2-4"> Main PID: 551 (sshd)</span>
<span id="cb2-5">    Tasks: 1 (limit: 4915)</span>
<span id="cb2-6">   CGroup: /system.slice/ssh.service</span>
<span id="cb2-7">           └─551 /usr/sbin/sshd -D</span>
<span id="cb2-8"></span>
<span id="cb2-9">Feb 14 02:49:43 Prod-Joomla sshd[1792]: Failed password for jcortes from 172.31.2.12 port 38181 ssh2</span>
<span id="cb2-10">Feb 14 02:49:43 Prod-Joomla sshd[1792]: Connection closed by 172.31.2.12 port 38181 [preauth]</span>
<span id="cb2-11">Feb 14 02:49:43 Prod-Joomla sshd[1794]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=172.31.2.12  user=jcortes</span>
<span id="cb2-12">Feb 14 02:49:44 Prod-Joomla sshd[1794]: Failed password for jcortes from 172.31.2.12 port 39276 ssh2</span>
<span id="cb2-13">Feb 14 02:49:44 Prod-Joomla sshd[1794]: Connection closed by 172.31.2.12 port 39276 [preauth]</span>
<span id="cb2-14">Feb 14 02:49:45 Prod-Joomla sshd[1796]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=172.31.2.12  user=jcortes</span>
<span id="cb2-15">Feb 14 02:49:47 Prod-Joomla sshd[1796]: Failed password for jcortes from 172.31.2.12 port 40027 ssh2</span>
<span id="cb2-16">Feb 14 02:49:47 Prod-Joomla sshd[1796]: Connection closed by 172.31.2.12 port 40027 [preauth]</span>
<span id="cb2-17">Feb 14 02:49:47 Prod-Joomla sshd[1798]: Accepted password for jcortes from 172.31.2.12 port 46478 ssh2</span>
<span id="cb2-18">Feb 14 02:49:47 Prod-Joomla sshd[1798]: pam_unix(sshd:session): session opened for user jcortes by (uid=0)</span></code></pre></div>
<p>And these were only the recent logs. Going through <code>journalctl -xeu ssh</code>, there were a LOT more attempts.</p>
<p>I got lucky though, as the attacker didn’t stay in for long:</p>
<p><img src="./writeups/nice-challenge-3/images/blocked2.jpeg" class="img-fluid"></p>
<p>It seems that snort detected and blocked 172.31.2.12 (the default config also kills existing connections), detecting the brute force. In the future, I need to spend less time trying to figure out snort, and more time setting up fail2ban to avoid ssh brute forces.</p>
</section>
<section id="attack-3-out-of-time" class="level1">
<h1>Attack 3 — Out of time</h1>
<p>I ran out of time:</p>
<p><img src="./writeups/nice-challenge-3/images/finalchecks.jpeg" class="img-fluid"></p>
<p>I couldn’t figure out what it was, either.</p>


</section>

 ]]></description>
  <category>linux</category>
  <category>_writeups</category>
  <guid>./writeups/nice-challenge-3/</guid>
  <pubDate>Tue, 13 Feb 2024 08:00:00 GMT</pubDate>
</item>
<item>
  <title>Nice Challenge 2</title>
  <dc:creator>Jeffrey Fonseca</dc:creator>
  <link>./writeups/nice-challenge-2/</link>
  <description><![CDATA[ 




<p>This is for the <a href="https://nice-challenge.com/">NICE</a> challenge. This challenge was quite a bit harder than the <a href="../nice-challenge/">previous</a> one, as it required that I figure out an selinux issue.</p>
<p>Whenever you see <code>...</code> in my code, it’s shorthand for “contents omitted for brevity”. I use this to clip extra long text files down, fitting them into my blog.</p>
<p>Same as before, the introduction was a simulated chatroom:</p>
<p><img src="./writeups/nice-challenge-2/images/intromessage.png" class="img-fluid"></p>
<p>And here are the checks:</p>
<p><img src="./writeups/nice-challenge-2/images/emptychecks.png" class="img-fluid"></p>
<section id="dev-web" class="level1">
<h1>Dev-Web</h1>
<p>I just edited the sudo file with <code>sudo visudo</code></p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb1-1">#</span>
<span id="cb1-2"># This file MUST be edited with the 'visudo' command as root.</span>
<span id="cb1-3">#</span>
<span id="cb1-4"># Please consider adding local content in /etc/sudoers.d/ instead of</span>
<span id="cb1-5"># directly modifying this file.</span>
<span id="cb1-6">#</span>
<span id="cb1-7"># See the man page for details on how to write a sudoers file.</span>
<span id="cb1-8">#</span>
<span id="cb1-9">Defaults    env_reset</span>
<span id="cb1-10">Defaults    mail_badpass</span>
<span id="cb1-11">Defaults    secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"</span>
<span id="cb1-12"></span>
<span id="cb1-13"># Host alias specification</span>
<span id="cb1-14"></span>
<span id="cb1-15"># User alias specification</span>
<span id="cb1-16"></span>
<span id="cb1-17"># Cmnd alias specification</span>
<span id="cb1-18"></span>
<span id="cb1-19"># User privilege specification</span>
<span id="cb1-20">root    ALL=(ALL:ALL) ALL</span>
<span id="cb1-21"></span>
<span id="cb1-22"># Members of the admin group may gain root privileges</span>
<span id="cb1-23">%admin ALL=(ALL) ALL</span>
<span id="cb1-24"></span>
<span id="cb1-25"># Allow members of group sudo to execute any command</span>
<span id="cb1-26">%sudo   ALL=(ALL:ALL) ALL</span>
<span id="cb1-27"></span>
<span id="cb1-28"># See sudoers(5) for more information on "#include" directives:</span>
<span id="cb1-29"></span>
<span id="cb1-30">#includedir /etc/sudoers.d</span>
<span id="cb1-31">Defaults:nagios !syslog</span>
<span id="cb1-32">Defaults:nagios !requiretty</span>
<span id="cb1-33">nagios  ALL=(ALL:ALL) NOPASSWD:ALL</span>
<span id="cb1-34">gthatcher ALL = NOPASSWD: ALL</span>
<span id="cb1-35">thanh ALL = NOPASSWD: ALL</span></code></pre></div>
<p>I edited the last two lines:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1">gthatcher ALL = (ALL:ALL) ALL</span>
<span id="cb2-2">thanh ALL = (ALL:ALL) ALL</span></code></pre></div>
<p>And both checks were passed.</p>
</section>
<section id="database" class="level1">
<h1>Database</h1>
<p>I load the html server console up… and I see this:</p>
<p><img src="./writeups/nice-challenge-2/images/windows.png" class="img-fluid"></p>
<p>I load up powershell, and the mysql client is there, so that works.</p>
<p><img src="./writeups/nice-challenge-2/images/wordpressdbs.png" class="img-fluid"></p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb3-1">USE wordpress;</span>
<span id="cb3-2">CREATE USER 'playerone'@'*' IDENTIFIED BY 'password123';</span>
<span id="cb3-3">DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');</span>
<span id="cb3-4">FLUSH PRIVILEGES;</span></code></pre></div>
<p>With this, <code>root</code> no longer has remote access to the database.</p>
</section>
<section id="prod-web" class="level1">
<h1>Prod-Web</h1>
<p>The first was to disable ssh login of the user’s “root” and “SSHLOGIN”.</p>
<p>The former was easy, I just changed the config file:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/etc/ssh/sshd_config</strong></pre>
</div>
<div class="sourceCode" id="cb4" data-filename="/etc/ssh/sshd_config" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb4-1">....</span>
<span id="cb4-2">PermitRootLogin no</span>
<span id="cb4-3">....</span></code></pre></div>
</div>
<p>Except this didn’t pass the check, so I decided to look into the other configuration option, DenyUsers.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/etc/ssh/sshd_config</strong></pre>
</div>
<div class="sourceCode" id="cb5" data-filename="/etc/ssh/sshd_config" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb5-1">....</span>
<span id="cb5-2">DenyUsers root sshlogin</span>
<span id="cb5-3">....</span></code></pre></div>
</div>
<p>Frustratingly, the <code>sshlogin</code> user is not all caps, even though the check describes it as so, but it also describes root as <code>ROOT</code>.</p>
<p>This still failed, until I restarted the sshd service, at which point both checks succeed.</p>
<p>Trying to load the database from the “database machine”, which offers a GUI, I see this:</p>
<p><img src="./writeups/nice-challenge-2/images/wordpressfailed.png" class="img-fluid"></p>
<p>Trying to load <code>/wp-admin</code>, the wp admin console, gives me a little more info.</p>
<p><img src="./writeups/nice-challenge-2/images/wordpressadminfailed.png" class="img-fluid"></p>
<p>So I decide to go look at the file:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/var/www/html/config.php</strong></pre>
</div>
<div class="sourceCode" id="cb6" data-filename="/var/www/html/config.php" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb6-1">&lt;?php</span>
<span id="cb6-2">/**</span>
<span id="cb6-3"> * The base configuration for WordPress</span>
<span id="cb6-4"> *</span>
<span id="cb6-5"> * The wp-config.php creation script uses this file during the</span>
<span id="cb6-6"> * installation. You don't have to use the web site, you can</span>
<span id="cb6-7"> * copy this file to "wp-config.php" and fill in the values.</span>
<span id="cb6-8"> *</span>
<span id="cb6-9"> * This file contains the following configurations:</span>
<span id="cb6-10"> *</span>
<span id="cb6-11"> * * MySQL settings</span>
<span id="cb6-12"> */</span>
<span id="cb6-13"></span>
<span id="cb6-14">// ** MySQL settings - You can get this info from your web host ** //</span>
<span id="cb6-15">/** The name of the database for WordPress */</span>
<span id="cb6-16">define( 'DB_NAME', 'wordpress' );</span>
<span id="cb6-17"></span>
<span id="cb6-18">/** MySQL database username */</span>
<span id="cb6-19">define( 'DB_USER', 'playerone' );</span>
<span id="cb6-20"></span>
<span id="cb6-21">/** MySQL database password */</span>
<span id="cb6-22">define( 'DB_PASSWORD', 'password123' );</span>
<span id="cb6-23"></span>
<span id="cb6-24">/** MySQL hostname */</span>
<span id="cb6-25">define( 'DB_HOST', 'database.daswebs.com' );</span>
<span id="cb6-26"></span>
<span id="cb6-27">/** Database Charset to use in creating database tables. */</span>
<span id="cb6-28">define( 'DB_CHARSET', 'utf8mb4' );</span>
<span id="cb6-29"></span>
<span id="cb6-30">/** The Database Collate type. Don't change this if in doubt. */</span>
<span id="cb6-31">define( 'DB_COLLATE', '');</span>
<span id="cb6-32"></span>
<span id="cb6-33">/**#@+</span>
<span id="cb6-34"> * Authentication Unique Keys and Salts.</span>
<span id="cb6-35"> *</span>
<span id="cb6-36"> * Change these to different unique phrases!</span>
<span id="cb6-37"> * You can generate these using the {@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service}</span>
<span id="cb6-38"> * You can change these at any point in time to invalidate all existing cookies. This will force all users to have to log in again.</span>
<span id="cb6-39"> *</span>
<span id="cb6-40"> * @since 2.6.0</span>
<span id="cb6-41"> */</span>
<span id="cb6-42">define( 'AUTH_KEY',         'ea355b607a03e1dc4fdbf0b6307b05303073e640');</span>
<span id="cb6-43">define( 'SECURE_AUTH_KEY',  'f33aec49919d2584c113a0c97e6fe6521c899ceb');</span>
<span id="cb6-44">define( 'LOGGED_IN_KEY',    'c366b663c1d82456edb8e88c592013f6c93b54e9');</span>
<span id="cb6-45">define( 'NONCE_KEY',        '1d210afe29e77dd29dd6c444314b6b3d5389f47d');</span>
<span id="cb6-46">define( 'AUTH_SALT',        '5ed4f5d28661e0b29b4651e051907704e517e81d');</span>
<span id="cb6-47">define( 'SECURE_AUTH_SALT', '98c1307b17e104f4b0f9d17771cd3f6fe781b60e');</span>
<span id="cb6-48">define( 'LOGGED_IN_SALT',   'bcb58b6319635fa3f6fed8154e8e56f151a1bd18');</span>
<span id="cb6-49">define( 'NONCE_SALT',       '796f651b2fbb7175080e390b31a68ea08dca928f');</span>
<span id="cb6-50"></span>
<span id="cb6-51">/**#@-*/</span>
<span id="cb6-52"></span>
<span id="cb6-53">/**</span>
<span id="cb6-54"> * WordPress Database Table prefix.</span>
<span id="cb6-55"> *</span>
<span id="cb6-56"> * You can have multiple installations in one database if you give each</span>
<span id="cb6-57"> * a unique prefix. Only numbers, letters, and underscores please!</span>
<span id="cb6-58"> */</span>
<span id="cb6-59">$table_prefix = 'wp_';</span>
<span id="cb6-60"></span>
<span id="cb6-61">....</span>
<span id="cb6-62">....</span></code></pre></div>
</div>
<p>I had to do some commands on the “database machine”, since it seems that something was likely wrong there.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb7-1">USE wordpress;</span>
<span id="cb7-2">CREATE USER 'playerone'@'*' IDENTIFIED BY 'password123';</span>
<span id="cb7-3">GRANT ALL PRIVILEGES ON wordpress.* TO 'playerone'@'*';</span>
<span id="cb7-4">GRANT ALL PRIVILEGES ON wordpress TO 'playerone'@'*';</span>
<span id="cb7-5">FLUSH PRIVILEGES;</span></code></pre></div>
<p>But this wasn’t enough. Wordpress still could not connect to the database. I checked to make sure the mysql service was running, and that the firewall was open, both were the case. An nmap scan from the wordpress server sees the port open, and the service, as well.</p>
<p>I was even able to authenticate to the database from the webserver machine manually, using the mysql client included in the mariadb package.</p>
<p>So it’s likely an SELinux issue, as mentioned in the meeting notes.</p>
<p>Sure enough, when <a href="https://www.redhat.com/sysadmin/selinux-denial">searching through the logs</a>, I find something:</p>
<p><img src="./writeups/nice-challenge-2/images/selinuxdenied.png" class="img-fluid"></p>
<p>I used this: <a href="https://serverfault.com/a/456875" class="uri">https://serverfault.com/a/456875</a> for steps.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb8-1">[root@www~]# getsebool -a | grep httpd</span>
<span id="cb8-2">...</span>
<span id="cb8-3">...</span>
<span id="cb8-4">httpd_can_connect_mythtv --&gt; off</span>
<span id="cb8-5">httpd_can_connect_zabbix --&gt; off</span>
<span id="cb8-6">httpd_can_network_connect --&gt; off</span>
<span id="cb8-7">httpd_can_network_connect_cobbler --&gt; off</span>
<span id="cb8-8">httpd_can_network_connect_db --&gt; off</span>
<span id="cb8-9">httpd_can_network_memcache --&gt; off</span>
<span id="cb8-10">httpd_can_network_relay --&gt; off</span>
<span id="cb8-11">httpd_can_sendmail --&gt; off</span>
<span id="cb8-12">...</span>
<span id="cb8-13">...</span></code></pre></div>
<p>It seems as if the apache httpd server doesn’t have permissions for that port.</p>
<p>Following those steps:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb9-1">setsebool httpd_can_network_connect_db 1</span>
<span id="cb9-2">setsebool httpd_can_network_connect_db 1 -P</span></code></pre></div>
<p>And httpd can connect to the database!</p>
</section>
<section id="fileshare" class="level1">
<h1>Fileshare</h1>
<p>The goal was to disable anonymous ftp logins. I did some hunting through the systemd services, found the ftp service named <code>proftpd</code>, and then I found the config directory in <code>/etc/proftpd</code></p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/etc/proftpd/proftpd.conf</strong></pre>
</div>
<div class="sourceCode" id="cb10" data-filename="/etc/proftpd/proftpd.conf" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb10-1">Include /etc/proftpd/modules.conf</span>
<span id="cb10-2">....</span>
<span id="cb10-3">....</span>
<span id="cb10-4">TimesGMT off</span>
<span id="cb10-5">&lt;/Directory&gt;</span>
<span id="cb10-6">&lt;Anonymous ~ftp&gt;</span>
<span id="cb10-7">  User ftp</span>
<span id="cb10-8">  Group nogroup</span>
<span id="cb10-9">  UserAlias anonymous ftp</span>
<span id="cb10-10">  DirFakeUser on ftp</span>
<span id="cb10-11">  DirFakeGroup on ftp</span>
<span id="cb10-12">  RequireValidShell off</span>
<span id="cb10-13">  &lt;Directory *&gt;</span>
<span id="cb10-14">    Umask 000 000</span>
<span id="cb10-15">    HideFiles (welcome.msg)</span>
<span id="cb10-16">    &lt;Limit WRITE&gt;</span>
<span id="cb10-17">      DenyAll</span>
<span id="cb10-18">    &lt;/Limit&gt;</span>
<span id="cb10-19">  &lt;/Directory&gt;</span>
<span id="cb10-20">&lt;/Anonymous&gt;</span>
<span id="cb10-21"></span>
<span id="cb10-22">....</span>
<span id="cb10-23">....</span></code></pre></div>
</div>
<p>According to some <a href="http://www.proftpd.org/docs/howto/Authentication.html">docs</a>, that <code>&lt;Anonymous&gt;</code> section defines anonymous access, so I can simply comment it out to deny anonymous access.</p>
<p>And after a <code>sudo systemctl restart proftpd</code>, the check passes.</p>
</section>
<section id="passed-checks" class="level1">
<h1>Passed Checks</h1>
<p><img src="./writeups/nice-challenge-2/images/passedchecks.png" class="img-fluid"></p>


</section>

 ]]></description>
  <category>linux</category>
  <category>_writeups</category>
  <guid>./writeups/nice-challenge-2/</guid>
  <pubDate>Tue, 06 Feb 2024 08:00:00 GMT</pubDate>
</item>
<item>
  <title>Nice Challenge 1</title>
  <dc:creator>Jeffrey Fonseca</dc:creator>
  <link>./writeups/nice-challenge/</link>
  <description><![CDATA[ 




<p>This is for the <a href="https://nice-challenge.com/">NICE</a> challenge. It’s a blue team challenge where you are tasked with hardening machines. Perhaps there is more, but all I was asked to do for this challenge was some simple hardening.</p>
<p>The name of this specific challenge was “Engineer’s Audit Advice - Managing Critical Systems”.</p>
<p>The introduction was a simulated chatroom.</p>
<p><img src="./writeups/nice-challenge/images/chatroom.png" class="img-fluid"></p>
<section id="joomia" class="level1">
<h1>Joomia</h1>
<p>Joomia is the Debian 9.3 machine, with an apache2 web server.</p>
<p>I began by looking at <code>/home/playerone/audit.log</code></p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb1-1">[ Lynis 2.4.0 ]</span>
<span id="cb1-2"></span>
<span id="cb1-3">################################################################################</span>
<span id="cb1-4">  Lynis comes with ABSOLUTELY NO WARRANTY. This is free software, and you are</span>
<span id="cb1-5">  welcome to redistribute it under the terms of the GNU General Public License.</span>
<span id="cb1-6">  See the LICENSE file for details about using this software.</span>
<span id="cb1-7"></span>
<span id="cb1-8">  2007-2016, CISOfy - https://cisofy.com/lynis/</span>
<span id="cb1-9">  Enterprise support available (compliance, plugins, interface and tools)</span>
<span id="cb1-10">################################################################################</span>
<span id="cb1-11"></span>
<span id="cb1-12"></span>
<span id="cb1-13">[+] Initializing program</span>
<span id="cb1-14">------------------------------------</span>
<span id="cb1-15">- Detecting OS... [ DONE ]</span>
<span id="cb1-16">- Checking profiles... [ DONE ]</span>
<span id="cb1-17"></span>
<span id="cb1-18">  ---------------------------------------------------</span>
<span id="cb1-19">  Program version:           2.4.0</span>
<span id="cb1-20">  Operating system:          Linux</span>
<span id="cb1-21">  Operating system name:     Debian</span>
<span id="cb1-22">  Operating system version:  9.3</span>
<span id="cb1-23">  Kernel version:            4.9.0</span>
<span id="cb1-24">  Hardware platform:         x86_64</span>
<span id="cb1-25">  Hostname:                  Prod-Joomla</span>
<span id="cb1-26">  ---------------------------------------------------</span>
<span id="cb1-27">  Profiles:                  /etc/lynis/default.prf</span>
<span id="cb1-28">  Log file:                  /var/log/lynis.log</span>
<span id="cb1-29">  Report file:               /var/log/lynis-report.dat</span>
<span id="cb1-30">  Report version:            1.0</span>
<span id="cb1-31">  Plugin directory:          /etc/lynis/plugins</span>
<span id="cb1-32">  ---------------------------------------------------</span>
<span id="cb1-33">  Auditor:                   [Not Specified]</span>
<span id="cb1-34">  Test category:             all</span>
<span id="cb1-35">  Test group:                all</span>
<span id="cb1-36">  ---------------------------------------------------</span>
<span id="cb1-37"></span>
<span id="cb1-38">  Suggestions (45):</span>
<span id="cb1-39">  ----------------------------</span>
<span id="cb1-40">  * Install a PAM module for password strength testing like pam_cracklib [AUTH-9262] </span>
<span id="cb1-41">      https://cisofy.com/controls/AUTH-9262/</span>
<span id="cb1-42"></span>
<span id="cb1-43">  * Configure minimum password age in /etc/login.defs [AUTH-9286] </span>
<span id="cb1-44">      https://cisofy.com/controls/AUTH-9286/</span>
<span id="cb1-45"></span>
<span id="cb1-46">  * Configure maximum password age in /etc/login.defs [AUTH-9286] </span>
<span id="cb1-47">      https://cisofy.com/controls/AUTH-9286/</span>
<span id="cb1-48"></span>
<span id="cb1-49">  * Install Apache mod_evasive to guard webserver against DoS/brute force attempts [HTTP-6640] </span>
<span id="cb1-50">      https://cisofy.com/controls/HTTP-6640/</span>
<span id="cb1-51"></span>
<span id="cb1-52">  * Install Apache mod_qos to guard webserver against Slowloris attacks [HTTP-6641] </span>
<span id="cb1-53">      https://cisofy.com/controls/HTTP-6641/</span>
<span id="cb1-54"></span>
<span id="cb1-55">  * Install Apache modsecurity to guard webserver against web application attacks [HTTP-6643] </span>
<span id="cb1-56">      https://cisofy.com/controls/HTTP-6643/</span>
<span id="cb1-57"></span>
<span id="cb1-58">  * Install fail2ban to automatically ban hosts that commit multiple authentication errors. [DEB-0880]</span>
<span id="cb1-59">      https://cisofy.com/controls/DEB-0880/</span>
<span id="cb1-60"></span>
<span id="cb1-61">Note from asteele: In addition to the password aging and cracklib, we should also set a password policy to require passwords be of a minimum strength. I feel the default password policy for pam_cracklib is too weak, therefore you should implement a policy that is stronger than the default given. I would suggest a minimum password length of at least 10. I would also like you to not address the maximum password age as experts suggest that setting a maximum password age encourages the creation of weaker passwords, however setting the minimum password age to at least 3 days is advised.</span></code></pre></div>
<p>So these are some security things I should do. Coincidentally, the numbers also aligned with the checks we were given:</p>
<p><img src="./writeups/nice-challenge/images/checksintro.png" class="img-fluid"></p>
<p>I followed an online <a href="https://phoenixnap.com/kb/apache-mod-evasive">guide</a> (<a href="https://web.archive.org/web/20231130023256/https://phoenixnap.com/kb/apache-mod-evasive">internet archive</a>) to enable apache mod_evasive, and sure enough, the check was passed:</p>
<p><img src="./writeups/nice-challenge/images/joomiafirst.png" class="img-fluid"></p>
<p>The process was fairly simple, I installed <code>libapache2-mod-evasive</code>, and then uncommented the relevant options in <code>/etc/apache2/mods-enabled/evasive.conf</code></p>
<p>Installing fail2ban and apache mod_qos were easy:</p>
<p><code>sudo apt install libapache2-mod-qos fail2ban</code></p>
<p>I used a similar process, by uncommenting options in <code>/etc/apache2/mods-enabled</code> to enable mod_qos, and pass the check. Here’s the new config file:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1">&lt;IfModule qos_module&gt;</span>
<span id="cb2-2">  # minimum request rate (bytes/sec at request reading):</span>
<span id="cb2-3">  QS_SrvRequestRate                                 120</span>
<span id="cb2-4"></span>
<span id="cb2-5">  # limits the connections for this virtual host:</span>
<span id="cb2-6">  QS_SrvMaxConn                                     100</span>
<span id="cb2-7"></span>
<span id="cb2-8">  # allows keep-alive support till the server reaches 600 connections:</span>
<span id="cb2-9">  QS_SrvMaxConnClose                                600</span>
<span id="cb2-10"></span>
<span id="cb2-11">  # allows max 50 connections from a single ip address:</span>
<span id="cb2-12">  QS_SrvMaxConnPerIP                                 50</span>
<span id="cb2-13">&lt;/IfModule&gt;</span></code></pre></div>
<p>The next thing I did was login.defs. They had <code>PASS_MAX_AGE</code> set to 9999, which I left. I did, however, change <code>PASS_MIN_AGE</code> to 3, per the suggesion in <code>audit.log</code>.</p>
<p>To configure pam and the minimum of the password, I edited `/etc/pam.d/common-password:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>"/etc/pam.d/common-password</strong></pre>
</div>
<div class="sourceCode" id="cb3" data-filename="&quot;/etc/pam.d/common-password" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb3-1"></span>
<span id="cb3-2"># here are the per-package modules (the "Primary" block)</span>
<span id="cb3-3">password    requisite           pam_cracklib.so retry=3 minlen=10 difok=3</span>
<span id="cb3-4">password    [success=1 default=ignore]  pam_unix.so obscure use_authtok try_first_pass sha512</span>
<span id="cb3-5"># here's the fallback if no module succeeds</span>
<span id="cb3-6">password    requisite           pam_deny.so</span>
<span id="cb3-7"># prime the stack with a positive return value if there isn't one already;</span>
<span id="cb3-8"># this avoids us returning an error just because nothing sets a success code</span>
<span id="cb3-9"># since the modules above will each just jump around</span>
<span id="cb3-10">password    required            pam_permit.so</span>
<span id="cb3-11"># and here are more per-package modules (the "Additional" block)</span>
<span id="cb3-12"># end of pam-auth-update config</span></code></pre></div>
</div>
<p>And with this, Joomia is done. Except not really, as one of the checks won’t pass, it’s reported as a “known issue”</p>
</section>
<section id="fileshare" class="level1">
<h1>Fileshare</h1>
<p>The Fileshare is the Ubuntu 16 machine.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/home/playerone/audit.log</strong></pre>
</div>
<div class="sourceCode" id="cb4" data-filename="/home/playerone/audit.log" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb4-1"></span>
<span id="cb4-2">  Suggestions:</span>
<span id="cb4-3">  ----------------------------</span>
<span id="cb4-4">  - Install a PAM module for password strength testing like pam_cracklib [AUTH-9262]</span>
<span id="cb4-5">      https://cisofy.com/controls/AUTH-9262/</span>
<span id="cb4-6">  </span>
<span id="cb4-7">  * Configure minimum password age in /etc/login.defs [AUTH-9286] </span>
<span id="cb4-8">      https://cisofy.com/controls/AUTH-9286/</span>
<span id="cb4-9"></span>
<span id="cb4-10">  * Configure maximum password age in /etc/login.defs [AUTH-9286] </span>
<span id="cb4-11">      https://cisofy.com/controls/AUTH-9286/</span>
<span id="cb4-12"></span>
<span id="cb4-13">  - Enable process accounting [ACCT-9622]</span>
<span id="cb4-14">      https://cisofy.com/controls/ACCT-9622/</span>
<span id="cb4-15"></span>
<span id="cb4-16">  - Install fail2ban to automatically ban hosts that commit multiple authentication errors. [DEB-0880]</span>
<span id="cb4-17">      https://cisofy.com/controls/DEB-0880/</span>
<span id="cb4-18"></span>
<span id="cb4-19">Note from asteele: In addition to the password aging and cracklib, we should also set a password policy to require passwords be of a minimum strength. I feel the default password policy for pam_cracklib is too weak, therefore you should implement a policy that is stronger than the default given. I would suggest a minimum password length of at least 10. I would also like you to not address the maximum password age as experts suggest that setting a maximum password age encourages the creation of weaker passwords, however setting the minimum password age to at least 3 days is advised.</span></code></pre></div>
</div>
<p>This time, I clipped the lynis output for brevity.</p>
<p>I started with installing fail2ban again, since that was simple.</p>
<p>Process accounting was simple as well. I installed <code>acct</code>, and then ran <code>sudo acctn on</code>.</p>
<p>I copied the same process as the first machine for configuring <code>/etc/login.defs</code>, changing <code>PASS_MIN_AGE</code> to 3.</p>
<p>For cracklib, I also copied the same process as the above.</p>
<p>And finally, all checks are passed:</p>
<p><img src="./writeups/nice-challenge/images/allchecks.png" class="img-fluid"></p>
<p>The one check that won’t pass, is actually broken, and won’t pass. They documented this in “Known Issues”</p>
<p><img src="./writeups/nice-challenge/images/knownissues.png" class="img-fluid"></p>


</section>

 ]]></description>
  <category>linux</category>
  <category>_writeups</category>
  <guid>./writeups/nice-challenge/</guid>
  <pubDate>Tue, 30 Jan 2024 08:00:00 GMT</pubDate>
</item>
</channel>
</rss>
